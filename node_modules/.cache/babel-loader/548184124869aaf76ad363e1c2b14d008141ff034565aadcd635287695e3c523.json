{"ast":null,"code":"/*! firebase-admin v13.0.1 */\n\"use strict\";\n\n/*!\r\n * Copyright 2020 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Storage = void 0;\nexports.getStorage = getStorage;\nexports.getDownloadURL = getDownloadURL;\nconst app_1 = require(\"../app\");\nconst storage_1 = require(\"./storage\");\nconst error_1 = require(\"../utils/error\");\nconst utils_1 = require(\"./utils\");\nvar storage_2 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", {\n  enumerable: true,\n  get: function () {\n    return storage_2.Storage;\n  }\n});\n/**\r\n * Gets the {@link Storage} service for the default app or a given app.\r\n *\r\n * `getStorage()` can be called with no arguments to access the default\r\n * app's `Storage` service or as `getStorage(app)` to access the\r\n * `Storage` service associated with a specific app.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Get the Storage service for the default app\r\n * const defaultStorage = getStorage();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Get the Storage service for a given app\r\n * const otherStorage = getStorage(otherApp);\r\n * ```\r\n */\nfunction getStorage(app) {\n  if (typeof app === 'undefined') {\n    app = (0, app_1.getApp)();\n  }\n  const firebaseApp = app;\n  return firebaseApp.getOrInitService('storage', app => new storage_1.Storage(app));\n}\n/**\r\n * Gets the download URL for the given {@link https://cloud.google.com/nodejs/docs/reference/storage/latest/storage/file | File}.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Get the downloadUrl for a given file ref\r\n * const storage = getStorage();\r\n * const myRef = ref(storage, 'images/mountains.jpg');\r\n * const downloadUrl = await getDownloadURL(myRef);\r\n * ```\r\n */\nasync function getDownloadURL(file) {\n  const endpoint = (process.env.STORAGE_EMULATOR_HOST || 'https://firebasestorage.googleapis.com') + '/v0';\n  const {\n    downloadTokens\n  } = await (0, utils_1.getFirebaseMetadata)(endpoint, file);\n  if (!downloadTokens) {\n    throw new error_1.FirebaseError({\n      code: 'storage/no-download-token',\n      message: 'No download token available. Please create one in the Firebase Console.'\n    });\n  }\n  const [token] = downloadTokens.split(',');\n  return `${endpoint}/b/${file.bucket.name}/o/${encodeURIComponent(file.name)}?alt=media&token=${token}`;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","Storage","getStorage","getDownloadURL","app_1","require","storage_1","error_1","utils_1","storage_2","enumerable","get","app","getApp","firebaseApp","getOrInitService","file","endpoint","process","env","STORAGE_EMULATOR_HOST","downloadTokens","getFirebaseMetadata","FirebaseError","code","message","token","split","bucket","name","encodeURIComponent"],"sources":["C:/Users/yujir/Documents/ynov/app pwa/mypwafinal/my-pwa/node_modules/firebase-admin/lib/storage/index.js"],"sourcesContent":["/*! firebase-admin v13.0.1 */\r\n\"use strict\";\r\n/*!\r\n * Copyright 2020 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Storage = void 0;\r\nexports.getStorage = getStorage;\r\nexports.getDownloadURL = getDownloadURL;\r\nconst app_1 = require(\"../app\");\r\nconst storage_1 = require(\"./storage\");\r\nconst error_1 = require(\"../utils/error\");\r\nconst utils_1 = require(\"./utils\");\r\nvar storage_2 = require(\"./storage\");\r\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_2.Storage; } });\r\n/**\r\n * Gets the {@link Storage} service for the default app or a given app.\r\n *\r\n * `getStorage()` can be called with no arguments to access the default\r\n * app's `Storage` service or as `getStorage(app)` to access the\r\n * `Storage` service associated with a specific app.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Get the Storage service for the default app\r\n * const defaultStorage = getStorage();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Get the Storage service for a given app\r\n * const otherStorage = getStorage(otherApp);\r\n * ```\r\n */\r\nfunction getStorage(app) {\r\n    if (typeof app === 'undefined') {\r\n        app = (0, app_1.getApp)();\r\n    }\r\n    const firebaseApp = app;\r\n    return firebaseApp.getOrInitService('storage', (app) => new storage_1.Storage(app));\r\n}\r\n/**\r\n * Gets the download URL for the given {@link https://cloud.google.com/nodejs/docs/reference/storage/latest/storage/file | File}.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Get the downloadUrl for a given file ref\r\n * const storage = getStorage();\r\n * const myRef = ref(storage, 'images/mountains.jpg');\r\n * const downloadUrl = await getDownloadURL(myRef);\r\n * ```\r\n */\r\nasync function getDownloadURL(file) {\r\n    const endpoint = (process.env.STORAGE_EMULATOR_HOST ||\r\n        'https://firebasestorage.googleapis.com') + '/v0';\r\n    const { downloadTokens } = await (0, utils_1.getFirebaseMetadata)(endpoint, file);\r\n    if (!downloadTokens) {\r\n        throw new error_1.FirebaseError({\r\n            code: 'storage/no-download-token',\r\n            message: 'No download token available. Please create one in the Firebase Console.',\r\n        });\r\n    }\r\n    const [token] = downloadTokens.split(',');\r\n    return `${endpoint}/b/${file.bucket.name}/o/${encodeURIComponent(file.name)}?alt=media&token=${token}`;\r\n}\r\n"],"mappings":"AAAA;AACA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxBF,OAAO,CAACG,UAAU,GAAGA,UAAU;AAC/BH,OAAO,CAACI,cAAc,GAAGA,cAAc;AACvC,MAAMC,KAAK,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC/B,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAW,CAAC;AACtC,MAAME,OAAO,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AACzC,MAAMG,OAAO,GAAGH,OAAO,CAAC,SAAS,CAAC;AAClC,IAAII,SAAS,GAAGJ,OAAO,CAAC,WAAW,CAAC;AACpCR,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,SAAS,EAAE;EAAEW,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,SAAS,CAACR,OAAO;EAAE;AAAE,CAAC,CAAC;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,UAAUA,CAACU,GAAG,EAAE;EACrB,IAAI,OAAOA,GAAG,KAAK,WAAW,EAAE;IAC5BA,GAAG,GAAG,CAAC,CAAC,EAAER,KAAK,CAACS,MAAM,EAAE,CAAC;EAC7B;EACA,MAAMC,WAAW,GAAGF,GAAG;EACvB,OAAOE,WAAW,CAACC,gBAAgB,CAAC,SAAS,EAAGH,GAAG,IAAK,IAAIN,SAAS,CAACL,OAAO,CAACW,GAAG,CAAC,CAAC;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeT,cAAcA,CAACa,IAAI,EAAE;EAChC,MAAMC,QAAQ,GAAG,CAACC,OAAO,CAACC,GAAG,CAACC,qBAAqB,IAC/C,wCAAwC,IAAI,KAAK;EACrD,MAAM;IAAEC;EAAe,CAAC,GAAG,MAAM,CAAC,CAAC,EAAEb,OAAO,CAACc,mBAAmB,EAAEL,QAAQ,EAAED,IAAI,CAAC;EACjF,IAAI,CAACK,cAAc,EAAE;IACjB,MAAM,IAAId,OAAO,CAACgB,aAAa,CAAC;MAC5BC,IAAI,EAAE,2BAA2B;MACjCC,OAAO,EAAE;IACb,CAAC,CAAC;EACN;EACA,MAAM,CAACC,KAAK,CAAC,GAAGL,cAAc,CAACM,KAAK,CAAC,GAAG,CAAC;EACzC,OAAO,GAAGV,QAAQ,MAAMD,IAAI,CAACY,MAAM,CAACC,IAAI,MAAMC,kBAAkB,CAACd,IAAI,CAACa,IAAI,CAAC,oBAAoBH,KAAK,EAAE;AAC1G","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}