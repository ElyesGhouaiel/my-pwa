{"ast":null,"code":"/*! firebase-admin v13.0.1 */\n\"use strict\";\n\n/*!\r\n * Copyright 2020 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FirebaseProjectManagementError = exports.IosApp = exports.ShaCertificate = exports.AndroidApp = exports.ProjectManagement = exports.AppPlatform = void 0;\nexports.getProjectManagement = getProjectManagement;\n/**\r\n * Firebase project management.\r\n *\r\n * @packageDocumentation\r\n */\nconst app_1 = require(\"../app\");\nconst project_management_1 = require(\"./project-management\");\nvar app_metadata_1 = require(\"./app-metadata\");\nObject.defineProperty(exports, \"AppPlatform\", {\n  enumerable: true,\n  get: function () {\n    return app_metadata_1.AppPlatform;\n  }\n});\nvar project_management_2 = require(\"./project-management\");\nObject.defineProperty(exports, \"ProjectManagement\", {\n  enumerable: true,\n  get: function () {\n    return project_management_2.ProjectManagement;\n  }\n});\nvar android_app_1 = require(\"./android-app\");\nObject.defineProperty(exports, \"AndroidApp\", {\n  enumerable: true,\n  get: function () {\n    return android_app_1.AndroidApp;\n  }\n});\nObject.defineProperty(exports, \"ShaCertificate\", {\n  enumerable: true,\n  get: function () {\n    return android_app_1.ShaCertificate;\n  }\n});\nvar ios_app_1 = require(\"./ios-app\");\nObject.defineProperty(exports, \"IosApp\", {\n  enumerable: true,\n  get: function () {\n    return ios_app_1.IosApp;\n  }\n});\n/**\r\n * Gets the {@link ProjectManagement} service for the default app or a given app.\r\n *\r\n * `getProjectManagement()` can be called with no arguments to access the\r\n * default app's `ProjectManagement` service, or as `getProjectManagement(app)` to access\r\n * the `ProjectManagement` service associated with a specific app.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Get the ProjectManagement service for the default app\r\n * const defaultProjectManagement = getProjectManagement();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Get the ProjectManagement service for a given app\r\n * const otherProjectManagement = getProjectManagement(otherApp);\r\n * ```\r\n *\r\n * @param app - Optional app whose `ProjectManagement` service\r\n *     to return. If not provided, the default `ProjectManagement` service will\r\n *     be returned. *\r\n * @returns The default `ProjectManagement` service if no app is provided or the\r\n *   `ProjectManagement` service associated with the provided app.\r\n */\nfunction getProjectManagement(app) {\n  if (typeof app === 'undefined') {\n    app = (0, app_1.getApp)();\n  }\n  const firebaseApp = app;\n  return firebaseApp.getOrInitService('projectManagement', app => new project_management_1.ProjectManagement(app));\n}\nvar error_1 = require(\"../utils/error\");\nObject.defineProperty(exports, \"FirebaseProjectManagementError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.FirebaseProjectManagementError;\n  }\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","FirebaseProjectManagementError","IosApp","ShaCertificate","AndroidApp","ProjectManagement","AppPlatform","getProjectManagement","app_1","require","project_management_1","app_metadata_1","enumerable","get","project_management_2","android_app_1","ios_app_1","app","getApp","firebaseApp","getOrInitService","error_1"],"sources":["C:/Users/yujir/Documents/ynov/app pwa/mypwafinal/my-pwa/node_modules/firebase-admin/lib/project-management/index.js"],"sourcesContent":["/*! firebase-admin v13.0.1 */\r\n\"use strict\";\r\n/*!\r\n * Copyright 2020 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FirebaseProjectManagementError = exports.IosApp = exports.ShaCertificate = exports.AndroidApp = exports.ProjectManagement = exports.AppPlatform = void 0;\r\nexports.getProjectManagement = getProjectManagement;\r\n/**\r\n * Firebase project management.\r\n *\r\n * @packageDocumentation\r\n */\r\nconst app_1 = require(\"../app\");\r\nconst project_management_1 = require(\"./project-management\");\r\nvar app_metadata_1 = require(\"./app-metadata\");\r\nObject.defineProperty(exports, \"AppPlatform\", { enumerable: true, get: function () { return app_metadata_1.AppPlatform; } });\r\nvar project_management_2 = require(\"./project-management\");\r\nObject.defineProperty(exports, \"ProjectManagement\", { enumerable: true, get: function () { return project_management_2.ProjectManagement; } });\r\nvar android_app_1 = require(\"./android-app\");\r\nObject.defineProperty(exports, \"AndroidApp\", { enumerable: true, get: function () { return android_app_1.AndroidApp; } });\r\nObject.defineProperty(exports, \"ShaCertificate\", { enumerable: true, get: function () { return android_app_1.ShaCertificate; } });\r\nvar ios_app_1 = require(\"./ios-app\");\r\nObject.defineProperty(exports, \"IosApp\", { enumerable: true, get: function () { return ios_app_1.IosApp; } });\r\n/**\r\n * Gets the {@link ProjectManagement} service for the default app or a given app.\r\n *\r\n * `getProjectManagement()` can be called with no arguments to access the\r\n * default app's `ProjectManagement` service, or as `getProjectManagement(app)` to access\r\n * the `ProjectManagement` service associated with a specific app.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Get the ProjectManagement service for the default app\r\n * const defaultProjectManagement = getProjectManagement();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Get the ProjectManagement service for a given app\r\n * const otherProjectManagement = getProjectManagement(otherApp);\r\n * ```\r\n *\r\n * @param app - Optional app whose `ProjectManagement` service\r\n *     to return. If not provided, the default `ProjectManagement` service will\r\n *     be returned. *\r\n * @returns The default `ProjectManagement` service if no app is provided or the\r\n *   `ProjectManagement` service associated with the provided app.\r\n */\r\nfunction getProjectManagement(app) {\r\n    if (typeof app === 'undefined') {\r\n        app = (0, app_1.getApp)();\r\n    }\r\n    const firebaseApp = app;\r\n    return firebaseApp.getOrInitService('projectManagement', (app) => new project_management_1.ProjectManagement(app));\r\n}\r\nvar error_1 = require(\"../utils/error\");\r\nObject.defineProperty(exports, \"FirebaseProjectManagementError\", { enumerable: true, get: function () { return error_1.FirebaseProjectManagementError; } });\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}