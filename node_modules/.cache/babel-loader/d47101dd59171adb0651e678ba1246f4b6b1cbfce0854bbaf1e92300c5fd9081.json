{"ast":null,"code":"/*! firebase-admin v13.0.1 */\n\"use strict\";\n\n/*!\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deepCopy = deepCopy;\nexports.deepExtend = deepExtend;\n/**\r\n * Returns a deep copy of an object or array.\r\n *\r\n * @param value - The object or array to deep copy.\r\n * @returns A deep copy of the provided object or array.\r\n */\nfunction deepCopy(value) {\n  return deepExtend(undefined, value);\n}\n/**\r\n * Copies properties from source to target (recursively allows extension of objects and arrays).\r\n * Scalar values in the target are over-written. If target is undefined, an object of the\r\n * appropriate type will be created (and returned).\r\n *\r\n * We recursively copy all child properties of plain objects in the source - so that namespace-like\r\n * objects are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in the source object are\r\n * copied onto it as static properties of the function.\r\n *\r\n * @param target - The value which is being extended.\r\n * @param source - The value whose properties are extending the target.\r\n * @returns The target value.\r\n */\nfunction deepExtend(target, source) {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n  switch (source.constructor) {\n    case Date:\n      {\n        // Treat Dates like scalars; if the target date object had any child\n        // properties - they will be lost!\n        const dateValue = source;\n        return new Date(dateValue.getTime());\n      }\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n  for (const prop in source) {\n    if (!Object.prototype.hasOwnProperty.call(source, prop)) {\n      continue;\n    }\n    target[prop] = deepExtend(target[prop], source[prop]);\n  }\n  return target;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","deepCopy","deepExtend","undefined","target","source","constructor","Date","dateValue","getTime","Array","prop","prototype","hasOwnProperty","call"],"sources":["C:/Users/yujir/Documents/ynov/app pwa/mypwafinal/my-pwa/node_modules/firebase-admin/lib/utils/deep-copy.js"],"sourcesContent":["/*! firebase-admin v13.0.1 */\r\n\"use strict\";\r\n/*!\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.deepCopy = deepCopy;\r\nexports.deepExtend = deepExtend;\r\n/**\r\n * Returns a deep copy of an object or array.\r\n *\r\n * @param value - The object or array to deep copy.\r\n * @returns A deep copy of the provided object or array.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copies properties from source to target (recursively allows extension of objects and arrays).\r\n * Scalar values in the target are over-written. If target is undefined, an object of the\r\n * appropriate type will be created (and returned).\r\n *\r\n * We recursively copy all child properties of plain objects in the source - so that namespace-like\r\n * objects are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in the source object are\r\n * copied onto it as static properties of the function.\r\n *\r\n * @param target - The value which is being extended.\r\n * @param source - The value whose properties are extending the target.\r\n * @returns The target value.\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date: {\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            const dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        }\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (const prop in source) {\r\n        if (!Object.prototype.hasOwnProperty.call(source, prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\n"],"mappings":"AAAA;AACA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,QAAQ,GAAGA,QAAQ;AAC3BF,OAAO,CAACG,UAAU,GAAGA,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,QAAQA,CAACD,KAAK,EAAE;EACrB,OAAOE,UAAU,CAACC,SAAS,EAAEH,KAAK,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,UAAUA,CAACE,MAAM,EAAEC,MAAM,EAAE;EAChC,IAAI,EAAEA,MAAM,YAAYR,MAAM,CAAC,EAAE;IAC7B,OAAOQ,MAAM;EACjB;EACA,QAAQA,MAAM,CAACC,WAAW;IACtB,KAAKC,IAAI;MAAE;QACP;QACA;QACA,MAAMC,SAAS,GAAGH,MAAM;QACxB,OAAO,IAAIE,IAAI,CAACC,SAAS,CAACC,OAAO,CAAC,CAAC,CAAC;MACxC;IACA,KAAKZ,MAAM;MACP,IAAIO,MAAM,KAAKD,SAAS,EAAE;QACtBC,MAAM,GAAG,CAAC,CAAC;MACf;MACA;IACJ,KAAKM,KAAK;MACN;MACAN,MAAM,GAAG,EAAE;MACX;IACJ;MACI;MACA,OAAOC,MAAM;EACrB;EACA,KAAK,MAAMM,IAAI,IAAIN,MAAM,EAAE;IACvB,IAAI,CAACR,MAAM,CAACe,SAAS,CAACC,cAAc,CAACC,IAAI,CAACT,MAAM,EAAEM,IAAI,CAAC,EAAE;MACrD;IACJ;IACAP,MAAM,CAACO,IAAI,CAAC,GAAGT,UAAU,CAACE,MAAM,CAACO,IAAI,CAAC,EAAEN,MAAM,CAACM,IAAI,CAAC,CAAC;EACzD;EACA,OAAOP,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}