{"ast":null,"code":"\"use strict\";\n\n/**\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BundleApiCaller = void 0;\nconst call_1 = require(\"../call\");\nconst googleError_1 = require(\"../googleError\");\n/**\r\n * An implementation of APICaller for bundled calls.\r\n * Uses BundleExecutor to do bundling.\r\n */\nclass BundleApiCaller {\n  constructor(bundler) {\n    this.bundler = bundler;\n  }\n  init(callback) {\n    if (callback) {\n      return new call_1.OngoingCall(callback);\n    }\n    return new call_1.OngoingCallPromise();\n  }\n  wrap(func) {\n    return func;\n  }\n  call(apiCall, argument, settings, status) {\n    if (!settings.isBundling) {\n      throw new googleError_1.GoogleError('Bundling enabled with no isBundling!');\n    }\n    status.call((argument, callback) => {\n      this.bundler.schedule(apiCall, argument, callback);\n      return status;\n    }, argument);\n  }\n  fail(canceller, err) {\n    canceller.callback(err);\n  }\n  result(canceller) {\n    return canceller.promise;\n  }\n}\nexports.BundleApiCaller = BundleApiCaller;","map":{"version":3,"names":["Object","defineProperty","exports","value","BundleApiCaller","call_1","require","googleError_1","constructor","bundler","init","callback","OngoingCall","OngoingCallPromise","wrap","func","call","apiCall","argument","settings","status","isBundling","GoogleError","schedule","fail","canceller","err","result","promise"],"sources":["C:/Users/yujir/Documents/ynov/app pwa/mypwafinal/my-pwa/node_modules/google-gax/build/src/bundlingCalls/bundleApiCaller.js"],"sourcesContent":["\"use strict\";\r\n/**\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BundleApiCaller = void 0;\r\nconst call_1 = require(\"../call\");\r\nconst googleError_1 = require(\"../googleError\");\r\n/**\r\n * An implementation of APICaller for bundled calls.\r\n * Uses BundleExecutor to do bundling.\r\n */\r\nclass BundleApiCaller {\r\n    constructor(bundler) {\r\n        this.bundler = bundler;\r\n    }\r\n    init(callback) {\r\n        if (callback) {\r\n            return new call_1.OngoingCall(callback);\r\n        }\r\n        return new call_1.OngoingCallPromise();\r\n    }\r\n    wrap(func) {\r\n        return func;\r\n    }\r\n    call(apiCall, argument, settings, status) {\r\n        if (!settings.isBundling) {\r\n            throw new googleError_1.GoogleError('Bundling enabled with no isBundling!');\r\n        }\r\n        status.call((argument, callback) => {\r\n            this.bundler.schedule(apiCall, argument, callback);\r\n            return status;\r\n        }, argument);\r\n    }\r\n    fail(canceller, err) {\r\n        canceller.callback(err);\r\n    }\r\n    result(canceller) {\r\n        return canceller.promise;\r\n    }\r\n}\r\nexports.BundleApiCaller = BundleApiCaller;\r\n//# sourceMappingURL=bundleApiCaller.js.map"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,eAAe,GAAG,KAAK,CAAC;AAChC,MAAMC,MAAM,GAAGC,OAAO,CAAC,SAAS,CAAC;AACjC,MAAMC,aAAa,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAC/C;AACA;AACA;AACA;AACA,MAAMF,eAAe,CAAC;EAClBI,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACA,OAAO,GAAGA,OAAO;EAC1B;EACAC,IAAIA,CAACC,QAAQ,EAAE;IACX,IAAIA,QAAQ,EAAE;MACV,OAAO,IAAIN,MAAM,CAACO,WAAW,CAACD,QAAQ,CAAC;IAC3C;IACA,OAAO,IAAIN,MAAM,CAACQ,kBAAkB,CAAC,CAAC;EAC1C;EACAC,IAAIA,CAACC,IAAI,EAAE;IACP,OAAOA,IAAI;EACf;EACAC,IAAIA,CAACC,OAAO,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAE;IACtC,IAAI,CAACD,QAAQ,CAACE,UAAU,EAAE;MACtB,MAAM,IAAId,aAAa,CAACe,WAAW,CAAC,sCAAsC,CAAC;IAC/E;IACAF,MAAM,CAACJ,IAAI,CAAC,CAACE,QAAQ,EAAEP,QAAQ,KAAK;MAChC,IAAI,CAACF,OAAO,CAACc,QAAQ,CAACN,OAAO,EAAEC,QAAQ,EAAEP,QAAQ,CAAC;MAClD,OAAOS,MAAM;IACjB,CAAC,EAAEF,QAAQ,CAAC;EAChB;EACAM,IAAIA,CAACC,SAAS,EAAEC,GAAG,EAAE;IACjBD,SAAS,CAACd,QAAQ,CAACe,GAAG,CAAC;EAC3B;EACAC,MAAMA,CAACF,SAAS,EAAE;IACd,OAAOA,SAAS,CAACG,OAAO;EAC5B;AACJ;AACA1B,OAAO,CAACE,eAAe,GAAGA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}