{"ast":null,"code":"\"use strict\";\n\n/*!\r\n * Copyright 2018 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GeoPoint = void 0;\nconst validate_1 = require(\"./validate\");\n/**\r\n * An immutable object representing a geographic location in Firestore. The\r\n * location is represented as a latitude/longitude pair.\r\n *\r\n * @class\r\n */\nclass GeoPoint {\n  /**\r\n   * Creates a [GeoPoint]{@link GeoPoint}.\r\n   *\r\n   * @param {number} latitude The latitude as a number between -90 and 90.\r\n   * @param {number} longitude The longitude as a number between -180 and 180.\r\n   *\r\n   * @example\r\n   * ```\r\n   * let data = {\r\n   *   google: new Firestore.GeoPoint(37.422, 122.084)\r\n   * };\r\n   *\r\n   * firestore.doc('col/doc').set(data).then(() => {\r\n   *   console.log(`Location is ${data.google.latitude}, ` +\r\n   *     `${data.google.longitude}`);\r\n   * });\r\n   * ```\r\n   */\n  constructor(latitude, longitude) {\n    (0, validate_1.validateNumber)('latitude', latitude, {\n      minValue: -90,\n      maxValue: 90\n    });\n    (0, validate_1.validateNumber)('longitude', longitude, {\n      minValue: -180,\n      maxValue: 180\n    });\n    this._latitude = latitude;\n    this._longitude = longitude;\n  }\n  /**\r\n   * The latitude as a number between -90 and 90.\r\n   *\r\n   * @type {number}\r\n   * @name GeoPoint#latitude\r\n   * @readonly\r\n   */\n  get latitude() {\n    return this._latitude;\n  }\n  /**\r\n   * The longitude as a number between -180 and 180.\r\n   *\r\n   * @type {number}\r\n   * @name GeoPoint#longitude\r\n   * @readonly\r\n   */\n  get longitude() {\n    return this._longitude;\n  }\n  /**\r\n   * Returns true if this `GeoPoint` is equal to the provided value.\r\n   *\r\n   * @param {*} other The value to compare against.\r\n   * @return {boolean} true if this `GeoPoint` is equal to the provided value.\r\n   */\n  isEqual(other) {\n    return this === other || other instanceof GeoPoint && this.latitude === other.latitude && this.longitude === other.longitude;\n  }\n  /**\r\n   * Converts the GeoPoint to a google.type.LatLng proto.\r\n   * @private\r\n   * @internal\r\n   */\n  toProto() {\n    return {\n      geoPointValue: {\n        latitude: this.latitude,\n        longitude: this.longitude\n      }\n    };\n  }\n  /**\r\n   * Converts a google.type.LatLng proto to its GeoPoint representation.\r\n   * @private\r\n   * @internal\r\n   */\n  static fromProto(proto) {\n    return new GeoPoint(proto.latitude || 0, proto.longitude || 0);\n  }\n}\nexports.GeoPoint = GeoPoint;","map":{"version":3,"names":["Object","defineProperty","exports","value","GeoPoint","validate_1","require","constructor","latitude","longitude","validateNumber","minValue","maxValue","_latitude","_longitude","isEqual","other","toProto","geoPointValue","fromProto","proto"],"sources":["C:/Users/yujir/Documents/ynov/app pwa/mypwafinal/my-pwa/node_modules/@google-cloud/firestore/build/src/geo-point.js"],"sourcesContent":["\"use strict\";\r\n/*!\r\n * Copyright 2018 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GeoPoint = void 0;\r\nconst validate_1 = require(\"./validate\");\r\n/**\r\n * An immutable object representing a geographic location in Firestore. The\r\n * location is represented as a latitude/longitude pair.\r\n *\r\n * @class\r\n */\r\nclass GeoPoint {\r\n    /**\r\n     * Creates a [GeoPoint]{@link GeoPoint}.\r\n     *\r\n     * @param {number} latitude The latitude as a number between -90 and 90.\r\n     * @param {number} longitude The longitude as a number between -180 and 180.\r\n     *\r\n     * @example\r\n     * ```\r\n     * let data = {\r\n     *   google: new Firestore.GeoPoint(37.422, 122.084)\r\n     * };\r\n     *\r\n     * firestore.doc('col/doc').set(data).then(() => {\r\n     *   console.log(`Location is ${data.google.latitude}, ` +\r\n     *     `${data.google.longitude}`);\r\n     * });\r\n     * ```\r\n     */\r\n    constructor(latitude, longitude) {\r\n        (0, validate_1.validateNumber)('latitude', latitude, { minValue: -90, maxValue: 90 });\r\n        (0, validate_1.validateNumber)('longitude', longitude, { minValue: -180, maxValue: 180 });\r\n        this._latitude = latitude;\r\n        this._longitude = longitude;\r\n    }\r\n    /**\r\n     * The latitude as a number between -90 and 90.\r\n     *\r\n     * @type {number}\r\n     * @name GeoPoint#latitude\r\n     * @readonly\r\n     */\r\n    get latitude() {\r\n        return this._latitude;\r\n    }\r\n    /**\r\n     * The longitude as a number between -180 and 180.\r\n     *\r\n     * @type {number}\r\n     * @name GeoPoint#longitude\r\n     * @readonly\r\n     */\r\n    get longitude() {\r\n        return this._longitude;\r\n    }\r\n    /**\r\n     * Returns true if this `GeoPoint` is equal to the provided value.\r\n     *\r\n     * @param {*} other The value to compare against.\r\n     * @return {boolean} true if this `GeoPoint` is equal to the provided value.\r\n     */\r\n    isEqual(other) {\r\n        return (this === other ||\r\n            (other instanceof GeoPoint &&\r\n                this.latitude === other.latitude &&\r\n                this.longitude === other.longitude));\r\n    }\r\n    /**\r\n     * Converts the GeoPoint to a google.type.LatLng proto.\r\n     * @private\r\n     * @internal\r\n     */\r\n    toProto() {\r\n        return {\r\n            geoPointValue: {\r\n                latitude: this.latitude,\r\n                longitude: this.longitude,\r\n            },\r\n        };\r\n    }\r\n    /**\r\n     * Converts a google.type.LatLng proto to its GeoPoint representation.\r\n     * @private\r\n     * @internal\r\n     */\r\n    static fromProto(proto) {\r\n        return new GeoPoint(proto.latitude || 0, proto.longitude || 0);\r\n    }\r\n}\r\nexports.GeoPoint = GeoPoint;\r\n//# sourceMappingURL=geo-point.js.map"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,QAAQ,GAAG,KAAK,CAAC;AACzB,MAAMC,UAAU,GAAGC,OAAO,CAAC,YAAY,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,MAAMF,QAAQ,CAAC;EACX;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIG,WAAWA,CAACC,QAAQ,EAAEC,SAAS,EAAE;IAC7B,CAAC,CAAC,EAAEJ,UAAU,CAACK,cAAc,EAAE,UAAU,EAAEF,QAAQ,EAAE;MAAEG,QAAQ,EAAE,CAAC,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC,CAAC;IACrF,CAAC,CAAC,EAAEP,UAAU,CAACK,cAAc,EAAE,WAAW,EAAED,SAAS,EAAE;MAAEE,QAAQ,EAAE,CAAC,GAAG;MAAEC,QAAQ,EAAE;IAAI,CAAC,CAAC;IACzF,IAAI,CAACC,SAAS,GAAGL,QAAQ;IACzB,IAAI,CAACM,UAAU,GAAGL,SAAS;EAC/B;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,IAAID,QAAQA,CAAA,EAAG;IACX,OAAO,IAAI,CAACK,SAAS;EACzB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,IAAIJ,SAASA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACK,UAAU;EAC1B;EACA;AACJ;AACA;AACA;AACA;AACA;EACIC,OAAOA,CAACC,KAAK,EAAE;IACX,OAAQ,IAAI,KAAKA,KAAK,IACjBA,KAAK,YAAYZ,QAAQ,IACtB,IAAI,CAACI,QAAQ,KAAKQ,KAAK,CAACR,QAAQ,IAChC,IAAI,CAACC,SAAS,KAAKO,KAAK,CAACP,SAAU;EAC/C;EACA;AACJ;AACA;AACA;AACA;EACIQ,OAAOA,CAAA,EAAG;IACN,OAAO;MACHC,aAAa,EAAE;QACXV,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,SAAS,EAAE,IAAI,CAACA;MACpB;IACJ,CAAC;EACL;EACA;AACJ;AACA;AACA;AACA;EACI,OAAOU,SAASA,CAACC,KAAK,EAAE;IACpB,OAAO,IAAIhB,QAAQ,CAACgB,KAAK,CAACZ,QAAQ,IAAI,CAAC,EAAEY,KAAK,CAACX,SAAS,IAAI,CAAC,CAAC;EAClE;AACJ;AACAP,OAAO,CAACE,QAAQ,GAAGA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}