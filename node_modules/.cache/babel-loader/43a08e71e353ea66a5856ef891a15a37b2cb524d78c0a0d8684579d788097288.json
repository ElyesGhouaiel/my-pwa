{"ast":null,"code":"\"use strict\";\n\n/**\r\n * Copyright 2024 Google LLC. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CompositeFilterInternal = void 0;\nconst filter_internal_1 = require(\"./filter-internal\");\nclass CompositeFilterInternal extends filter_internal_1.FilterInternal {\n  constructor(filters, operator) {\n    super();\n    this.filters = filters;\n    this.operator = operator;\n    // Memoized list of all field filters that can be found by traversing the tree of filters\n    // contained in this composite filter.\n    this.memoizedFlattenedFilters = null;\n  }\n  getFilters() {\n    return this.filters;\n  }\n  isConjunction() {\n    return this.operator === 'AND';\n  }\n  getFlattenedFilters() {\n    if (this.memoizedFlattenedFilters !== null) {\n      return this.memoizedFlattenedFilters;\n    }\n    this.memoizedFlattenedFilters = this.filters.reduce((allFilters, subfilter) => allFilters.concat(subfilter.getFlattenedFilters()), []);\n    return this.memoizedFlattenedFilters;\n  }\n  toProto() {\n    if (this.filters.length === 1) {\n      return this.filters[0].toProto();\n    }\n    const proto = {\n      compositeFilter: {\n        op: this.operator,\n        filters: this.filters.map(filter => filter.toProto())\n      }\n    };\n    return proto;\n  }\n  isEqual(other) {\n    if (other instanceof CompositeFilterInternal) {\n      const otherFilters = other.getFilters();\n      return this.operator === other.operator && this.getFilters().length === other.getFilters().length && this.getFilters().every((filter, index) => filter.isEqual(otherFilters[index]));\n    } else {\n      return false;\n    }\n  }\n}\nexports.CompositeFilterInternal = CompositeFilterInternal;","map":{"version":3,"names":["Object","defineProperty","exports","value","CompositeFilterInternal","filter_internal_1","require","FilterInternal","constructor","filters","operator","memoizedFlattenedFilters","getFilters","isConjunction","getFlattenedFilters","reduce","allFilters","subfilter","concat","toProto","length","proto","compositeFilter","op","map","filter","isEqual","other","otherFilters","every","index"],"sources":["C:/Users/yujir/Documents/ynov/app pwa/mypwafinal/my-pwa/node_modules/@google-cloud/firestore/build/src/reference/composite-filter-internal.js"],"sourcesContent":["\"use strict\";\r\n/**\r\n * Copyright 2024 Google LLC. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CompositeFilterInternal = void 0;\r\nconst filter_internal_1 = require(\"./filter-internal\");\r\nclass CompositeFilterInternal extends filter_internal_1.FilterInternal {\r\n    constructor(filters, operator) {\r\n        super();\r\n        this.filters = filters;\r\n        this.operator = operator;\r\n        // Memoized list of all field filters that can be found by traversing the tree of filters\r\n        // contained in this composite filter.\r\n        this.memoizedFlattenedFilters = null;\r\n    }\r\n    getFilters() {\r\n        return this.filters;\r\n    }\r\n    isConjunction() {\r\n        return this.operator === 'AND';\r\n    }\r\n    getFlattenedFilters() {\r\n        if (this.memoizedFlattenedFilters !== null) {\r\n            return this.memoizedFlattenedFilters;\r\n        }\r\n        this.memoizedFlattenedFilters = this.filters.reduce((allFilters, subfilter) => allFilters.concat(subfilter.getFlattenedFilters()), []);\r\n        return this.memoizedFlattenedFilters;\r\n    }\r\n    toProto() {\r\n        if (this.filters.length === 1) {\r\n            return this.filters[0].toProto();\r\n        }\r\n        const proto = {\r\n            compositeFilter: {\r\n                op: this.operator,\r\n                filters: this.filters.map(filter => filter.toProto()),\r\n            },\r\n        };\r\n        return proto;\r\n    }\r\n    isEqual(other) {\r\n        if (other instanceof CompositeFilterInternal) {\r\n            const otherFilters = other.getFilters();\r\n            return (this.operator === other.operator &&\r\n                this.getFilters().length === other.getFilters().length &&\r\n                this.getFilters().every((filter, index) => filter.isEqual(otherFilters[index])));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\nexports.CompositeFilterInternal = CompositeFilterInternal;\r\n//# sourceMappingURL=composite-filter-internal.js.map"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,uBAAuB,GAAG,KAAK,CAAC;AACxC,MAAMC,iBAAiB,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACtD,MAAMF,uBAAuB,SAASC,iBAAiB,CAACE,cAAc,CAAC;EACnEC,WAAWA,CAACC,OAAO,EAAEC,QAAQ,EAAE;IAC3B,KAAK,CAAC,CAAC;IACP,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB;IACA;IACA,IAAI,CAACC,wBAAwB,GAAG,IAAI;EACxC;EACAC,UAAUA,CAAA,EAAG;IACT,OAAO,IAAI,CAACH,OAAO;EACvB;EACAI,aAAaA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACH,QAAQ,KAAK,KAAK;EAClC;EACAI,mBAAmBA,CAAA,EAAG;IAClB,IAAI,IAAI,CAACH,wBAAwB,KAAK,IAAI,EAAE;MACxC,OAAO,IAAI,CAACA,wBAAwB;IACxC;IACA,IAAI,CAACA,wBAAwB,GAAG,IAAI,CAACF,OAAO,CAACM,MAAM,CAAC,CAACC,UAAU,EAAEC,SAAS,KAAKD,UAAU,CAACE,MAAM,CAACD,SAAS,CAACH,mBAAmB,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACtI,OAAO,IAAI,CAACH,wBAAwB;EACxC;EACAQ,OAAOA,CAAA,EAAG;IACN,IAAI,IAAI,CAACV,OAAO,CAACW,MAAM,KAAK,CAAC,EAAE;MAC3B,OAAO,IAAI,CAACX,OAAO,CAAC,CAAC,CAAC,CAACU,OAAO,CAAC,CAAC;IACpC;IACA,MAAME,KAAK,GAAG;MACVC,eAAe,EAAE;QACbC,EAAE,EAAE,IAAI,CAACb,QAAQ;QACjBD,OAAO,EAAE,IAAI,CAACA,OAAO,CAACe,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACN,OAAO,CAAC,CAAC;MACxD;IACJ,CAAC;IACD,OAAOE,KAAK;EAChB;EACAK,OAAOA,CAACC,KAAK,EAAE;IACX,IAAIA,KAAK,YAAYvB,uBAAuB,EAAE;MAC1C,MAAMwB,YAAY,GAAGD,KAAK,CAACf,UAAU,CAAC,CAAC;MACvC,OAAQ,IAAI,CAACF,QAAQ,KAAKiB,KAAK,CAACjB,QAAQ,IACpC,IAAI,CAACE,UAAU,CAAC,CAAC,CAACQ,MAAM,KAAKO,KAAK,CAACf,UAAU,CAAC,CAAC,CAACQ,MAAM,IACtD,IAAI,CAACR,UAAU,CAAC,CAAC,CAACiB,KAAK,CAAC,CAACJ,MAAM,EAAEK,KAAK,KAAKL,MAAM,CAACC,OAAO,CAACE,YAAY,CAACE,KAAK,CAAC,CAAC,CAAC;IACvF,CAAC,MACI;MACD,OAAO,KAAK;IAChB;EACJ;AACJ;AACA5B,OAAO,CAACE,uBAAuB,GAAGA,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}