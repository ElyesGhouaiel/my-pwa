{"ast":null,"code":"/*! firebase-admin v13.0.1 */\n\"use strict\";\n\n/*!\r\n * @license\r\n * Copyright 2021 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AppCheck = void 0;\nexports.getAppCheck = getAppCheck;\n/**\r\n * Firebase App Check.\r\n *\r\n * @packageDocumentation\r\n */\nconst app_1 = require(\"../app\");\nconst app_check_1 = require(\"./app-check\");\nvar app_check_2 = require(\"./app-check\");\nObject.defineProperty(exports, \"AppCheck\", {\n  enumerable: true,\n  get: function () {\n    return app_check_2.AppCheck;\n  }\n});\n/**\r\n * Gets the {@link AppCheck} service for the default app or a given app.\r\n *\r\n * `getAppCheck()` can be called with no arguments to access the default\r\n * app's `AppCheck` service or as `getAppCheck(app)` to access the\r\n * `AppCheck` service associated with a specific app.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Get the `AppCheck` service for the default app\r\n * const defaultAppCheck = getAppCheck();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Get the `AppCheck` service for a given app\r\n * const otherAppCheck = getAppCheck(otherApp);\r\n * ```\r\n *\r\n * @param app - Optional app for which to return the `AppCheck` service.\r\n *   If not provided, the default `AppCheck` service is returned.\r\n *\r\n * @returns The default `AppCheck` service if no\r\n *   app is provided, or the `AppCheck` service associated with the provided\r\n *   app.\r\n */\nfunction getAppCheck(app) {\n  if (typeof app === 'undefined') {\n    app = (0, app_1.getApp)();\n  }\n  const firebaseApp = app;\n  return firebaseApp.getOrInitService('appCheck', app => new app_check_1.AppCheck(app));\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","AppCheck","getAppCheck","app_1","require","app_check_1","app_check_2","enumerable","get","app","getApp","firebaseApp","getOrInitService"],"sources":["C:/Users/yujir/Documents/ynov/app pwa/mypwafinal/my-pwa/node_modules/firebase-admin/lib/app-check/index.js"],"sourcesContent":["/*! firebase-admin v13.0.1 */\r\n\"use strict\";\r\n/*!\r\n * @license\r\n * Copyright 2021 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AppCheck = void 0;\r\nexports.getAppCheck = getAppCheck;\r\n/**\r\n * Firebase App Check.\r\n *\r\n * @packageDocumentation\r\n */\r\nconst app_1 = require(\"../app\");\r\nconst app_check_1 = require(\"./app-check\");\r\nvar app_check_2 = require(\"./app-check\");\r\nObject.defineProperty(exports, \"AppCheck\", { enumerable: true, get: function () { return app_check_2.AppCheck; } });\r\n/**\r\n * Gets the {@link AppCheck} service for the default app or a given app.\r\n *\r\n * `getAppCheck()` can be called with no arguments to access the default\r\n * app's `AppCheck` service or as `getAppCheck(app)` to access the\r\n * `AppCheck` service associated with a specific app.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Get the `AppCheck` service for the default app\r\n * const defaultAppCheck = getAppCheck();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Get the `AppCheck` service for a given app\r\n * const otherAppCheck = getAppCheck(otherApp);\r\n * ```\r\n *\r\n * @param app - Optional app for which to return the `AppCheck` service.\r\n *   If not provided, the default `AppCheck` service is returned.\r\n *\r\n * @returns The default `AppCheck` service if no\r\n *   app is provided, or the `AppCheck` service associated with the provided\r\n *   app.\r\n */\r\nfunction getAppCheck(app) {\r\n    if (typeof app === 'undefined') {\r\n        app = (0, app_1.getApp)();\r\n    }\r\n    const firebaseApp = app;\r\n    return firebaseApp.getOrInitService('appCheck', (app) => new app_check_1.AppCheck(app));\r\n}\r\n"],"mappings":"AAAA;AACA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,QAAQ,GAAG,KAAK,CAAC;AACzBF,OAAO,CAACG,WAAW,GAAGA,WAAW;AACjC;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC/B,MAAMC,WAAW,GAAGD,OAAO,CAAC,aAAa,CAAC;AAC1C,IAAIE,WAAW,GAAGF,OAAO,CAAC,aAAa,CAAC;AACxCP,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,UAAU,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,WAAW,CAACL,QAAQ;EAAE;AAAE,CAAC,CAAC;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,WAAWA,CAACO,GAAG,EAAE;EACtB,IAAI,OAAOA,GAAG,KAAK,WAAW,EAAE;IAC5BA,GAAG,GAAG,CAAC,CAAC,EAAEN,KAAK,CAACO,MAAM,EAAE,CAAC;EAC7B;EACA,MAAMC,WAAW,GAAGF,GAAG;EACvB,OAAOE,WAAW,CAACC,gBAAgB,CAAC,UAAU,EAAGH,GAAG,IAAK,IAAIJ,WAAW,CAACJ,QAAQ,CAACQ,GAAG,CAAC,CAAC;AAC3F","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}