{"ast":null,"code":"import React,{useEffect,useState}from'react';import'./App.css';import{initializeApp}from'firebase/app';import{getMessaging,getToken as getFCMToken,onMessage}from'firebase/messaging';import{register}from'./serviceWorkerRegistration';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const firebaseConfig={apiKey:\"AIzaSyDLu_SNw66YIVs8ruwMGwxnv1DDcxuzbKQ\",authDomain:\"test-1ed88.firebaseapp.com\",projectId:\"test-1ed88\",storageBucket:\"test-1ed88.firebasestorage.app\",messagingSenderId:\"240250228794\",appId:\"1:240250228794:web:ddef4fee8b65752e5d6503\",measurementId:\"G-NCX2XWPCS9\"};const app=initializeApp(firebaseConfig);const messaging=getMessaging(app);function App(){const[notification,setNotification]=useState({title:'',body:''});const[fcmToken,setFcmToken]=useState('');const[isInstallable,setIsInstallable]=useState(false);let deferredPrompt;useEffect(()=>{// Enregistrement du service worker\nregister({onUpdate:registration=>console.log('Service Worker updated:',registration),onSuccess:registration=>console.log('Service Worker registered:',registration)});// Demande de permission pour les notifications\nrequestPermission();// Gestion des messages reçus\nconst unsubscribe=onMessage(messaging,payload=>{console.log('Message reçu:',payload);if(payload.notification){new Notification(payload.notification.title,{body:payload.notification.body,icon:payload.notification.icon});}});// Gestion de l'événement beforeinstallprompt\nwindow.addEventListener('beforeinstallprompt',e=>{e.preventDefault();deferredPrompt=e;setIsInstallable(true);// Affichez le bouton d'installation\n});return()=>{unsubscribe();window.removeEventListener('beforeinstallprompt',()=>{});};},[]);const handleInstallClick=()=>{if(deferredPrompt){deferredPrompt.prompt();deferredPrompt.userChoice.then(choiceResult=>{if(choiceResult.outcome==='accepted'){console.log('Utilisateur a accepté l\\'installation');}else{console.log('Utilisateur a refusé l\\'installation');}deferredPrompt=null;setIsInstallable(false);// Masquez le bouton après utilisation\n});}};const requestPermission=async()=>{console.log('Demande de permission...');try{const permission=await Notification.requestPermission();if(permission==='granted'){console.log('Permission accordée.');await fetchFCMToken();}else{console.error('Permission refusée');}}catch(error){console.error('Erreur lors de la demande de permission:',error);}};const fetchFCMToken=async()=>{try{const vapidKey='BIsFRIerqr3JOxS93ZSk5Giq-Rt81E2sdErv5HGKOA-hS8t3mTxtQQr8jwLDqRomJ3STyTNSlbv_SXBL97IdJiA';const token=await getFCMToken(messaging,{vapidKey});if(token){console.log('Token FCM:',token);setFcmToken(token);sendTokenToServer(token);}else{console.log('Aucun token d\\'enregistrement disponible.');}}catch(err){console.error('Une erreur est survenue lors de la récupération du token :',err);}};const sendTokenToServer=async token=>{try{const response=await fetch('http://localhost:3001/api/send-notification',{method:'POST',headers:{'Content-Type':'application/json','apikey':'kiki'},body:JSON.stringify({token})});if(response.ok){console.log('Token envoyé au serveur avec succès');}else{console.error('Erreur lors de l\\'envoi du token au serveur');}}catch(error){console.error('Erreur lors de l\\'envoi du token au serveur:',error);}};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Ma PWA React avec Notifications Push\"}),isInstallable&&/*#__PURE__*/_jsx(\"button\",{onClick:handleInstallClick,children:\"Installer l'application\"}),/*#__PURE__*/_jsx(\"button\",{onClick:requestPermission,children:\"Demander la permission pour les notifications\"}),fcmToken&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Token FCM: \",fcmToken]}),notification.title&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Derni\\xE8re notification :\"}),/*#__PURE__*/_jsx(\"p\",{children:notification.title}),/*#__PURE__*/_jsx(\"p\",{children:notification.body})]})]})});}export default App;","map":{"version":3,"names":["React","useEffect","useState","initializeApp","getMessaging","getToken","getFCMToken","onMessage","register","jsx","_jsx","jsxs","_jsxs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","messaging","App","notification","setNotification","title","body","fcmToken","setFcmToken","isInstallable","setIsInstallable","deferredPrompt","onUpdate","registration","console","log","onSuccess","requestPermission","unsubscribe","payload","Notification","icon","window","addEventListener","e","preventDefault","removeEventListener","handleInstallClick","prompt","userChoice","then","choiceResult","outcome","permission","fetchFCMToken","error","vapidKey","token","sendTokenToServer","err","response","fetch","method","headers","JSON","stringify","ok","className","children","onClick"],"sources":["C:/Users/yujir/Documents/ynov/app pwa/mypwafinal/my-pwa/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getMessaging, getToken as getFCMToken, onMessage } from 'firebase/messaging';\r\nimport { register } from './serviceWorkerRegistration';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDLu_SNw66YIVs8ruwMGwxnv1DDcxuzbKQ\",\r\n  authDomain: \"test-1ed88.firebaseapp.com\",\r\n  projectId: \"test-1ed88\",\r\n  storageBucket: \"test-1ed88.firebasestorage.app\",\r\n  messagingSenderId: \"240250228794\",\r\n  appId: \"1:240250228794:web:ddef4fee8b65752e5d6503\",\r\n  measurementId: \"G-NCX2XWPCS9\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst messaging = getMessaging(app);\r\n\r\nfunction App() {\r\n  const [notification, setNotification] = useState({ title: '', body: '' });\r\n  const [fcmToken, setFcmToken] = useState('');\r\n  const [isInstallable, setIsInstallable] = useState(false);\r\n  let deferredPrompt;\r\n\r\n  useEffect(() => {\r\n    // Enregistrement du service worker\r\n    register({\r\n      onUpdate: registration => console.log('Service Worker updated:', registration),\r\n      onSuccess: registration => console.log('Service Worker registered:', registration)\r\n    });\r\n\r\n    // Demande de permission pour les notifications\r\n    requestPermission();\r\n\r\n    // Gestion des messages reçus\r\n    const unsubscribe = onMessage(messaging, (payload) => {\r\n      console.log('Message reçu:', payload);\r\n      if (payload.notification) {\r\n        new Notification(payload.notification.title, {\r\n          body: payload.notification.body,\r\n          icon: payload.notification.icon\r\n        });\r\n      }\r\n    });\r\n\r\n    // Gestion de l'événement beforeinstallprompt\r\n    window.addEventListener('beforeinstallprompt', (e) => {\r\n      e.preventDefault();\r\n      deferredPrompt = e;\r\n      setIsInstallable(true); // Affichez le bouton d'installation\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n      window.removeEventListener('beforeinstallprompt', () => {});\r\n    };\r\n  }, []);\r\n\r\n  const handleInstallClick = () => {\r\n    if (deferredPrompt) {\r\n      deferredPrompt.prompt();\r\n      deferredPrompt.userChoice.then((choiceResult) => {\r\n        if (choiceResult.outcome === 'accepted') {\r\n          console.log('Utilisateur a accepté l\\'installation');\r\n        } else {\r\n          console.log('Utilisateur a refusé l\\'installation');\r\n        }\r\n        deferredPrompt = null;\r\n        setIsInstallable(false); // Masquez le bouton après utilisation\r\n      });\r\n    }\r\n  };\r\n\r\n  const requestPermission = async () => {\r\n    console.log('Demande de permission...');\r\n    try {\r\n      const permission = await Notification.requestPermission();\r\n      if (permission === 'granted') {\r\n        console.log('Permission accordée.');\r\n        await fetchFCMToken();\r\n      } else {\r\n        console.error('Permission refusée');\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors de la demande de permission:', error);\r\n    }\r\n  };\r\n\r\n  const fetchFCMToken = async () => {\r\n    try {\r\n      const vapidKey = 'BIsFRIerqr3JOxS93ZSk5Giq-Rt81E2sdErv5HGKOA-hS8t3mTxtQQr8jwLDqRomJ3STyTNSlbv_SXBL97IdJiA';\r\n      const token = await getFCMToken(messaging, { vapidKey });\r\n      \r\n      if (token) {\r\n        console.log('Token FCM:', token);\r\n        setFcmToken(token);\r\n        sendTokenToServer(token);\r\n      } else {\r\n        console.log('Aucun token d\\'enregistrement disponible.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Une erreur est survenue lors de la récupération du token :', err);\r\n    }\r\n  };\r\n\r\n  const sendTokenToServer = async (token) => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/api/send-notification', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'apikey': 'kiki'  \r\n        },\r\n        body: JSON.stringify({ token }),\r\n      });\r\n      \r\n      if (response.ok) {\r\n        console.log('Token envoyé au serveur avec succès');\r\n      } else {\r\n        console.error('Erreur lors de l\\'envoi du token au serveur');\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'envoi du token au serveur:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Ma PWA React avec Notifications Push</h1>\r\n        \r\n        {isInstallable && (\r\n          <button onClick={handleInstallClick}>Installer l'application</button>\r\n        )}\r\n        \r\n        <button onClick={requestPermission}>Demander la permission pour les notifications</button>\r\n        \r\n        {fcmToken && <p>Token FCM: {fcmToken}</p>}\r\n        \r\n        {notification.title && (\r\n          <div>\r\n            <h2>Dernière notification :</h2>\r\n            <p>{notification.title}</p>\r\n            <p>{notification.body}</p>\r\n          </div>\r\n        )}\r\n        \r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}