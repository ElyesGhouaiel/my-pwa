{"ast":null,"code":"\"use strict\";\n\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExternalAccountClient = void 0;\nconst baseexternalclient_1 = require(\"./baseexternalclient\");\nconst identitypoolclient_1 = require(\"./identitypoolclient\");\nconst awsclient_1 = require(\"./awsclient\");\nconst pluggable_auth_client_1 = require(\"./pluggable-auth-client\");\n/**\r\n * Dummy class with no constructor. Developers are expected to use fromJSON.\r\n */\nclass ExternalAccountClient {\n  constructor() {\n    throw new Error('ExternalAccountClients should be initialized via: ' + 'ExternalAccountClient.fromJSON(), ' + 'directly via explicit constructors, eg. ' + 'new AwsClient(options), new IdentityPoolClient(options), new' + 'PluggableAuthClientOptions, or via ' + 'new GoogleAuth(options).getClient()');\n  }\n  /**\r\n   * This static method will instantiate the\r\n   * corresponding type of external account credential depending on the\r\n   * underlying credential source.\r\n   * @param options The external account options object typically loaded\r\n   *   from the external account JSON credential file.\r\n   * @param additionalOptions **DEPRECATED, all options are available in the\r\n   *   `options` parameter.** Optional additional behavior customization options.\r\n   *   These currently customize expiration threshold time and whether to retry\r\n   *   on 401/403 API request errors.\r\n   * @return A BaseExternalAccountClient instance or null if the options\r\n   *   provided do not correspond to an external account credential.\r\n   */\n  static fromJSON(options, additionalOptions) {\n    var _a, _b;\n    if (options && options.type === baseexternalclient_1.EXTERNAL_ACCOUNT_TYPE) {\n      if ((_a = options.credential_source) === null || _a === void 0 ? void 0 : _a.environment_id) {\n        return new awsclient_1.AwsClient(options, additionalOptions);\n      } else if ((_b = options.credential_source) === null || _b === void 0 ? void 0 : _b.executable) {\n        return new pluggable_auth_client_1.PluggableAuthClient(options, additionalOptions);\n      } else {\n        return new identitypoolclient_1.IdentityPoolClient(options, additionalOptions);\n      }\n    } else {\n      return null;\n    }\n  }\n}\nexports.ExternalAccountClient = ExternalAccountClient;","map":{"version":3,"names":["Object","defineProperty","exports","value","ExternalAccountClient","baseexternalclient_1","require","identitypoolclient_1","awsclient_1","pluggable_auth_client_1","constructor","Error","fromJSON","options","additionalOptions","_a","_b","type","EXTERNAL_ACCOUNT_TYPE","credential_source","environment_id","AwsClient","executable","PluggableAuthClient","IdentityPoolClient"],"sources":["C:/Users/yujir/Documents/ynov/app pwa/mypwafinal/my-pwa/node_modules/google-auth-library/build/src/auth/externalclient.js"],"sourcesContent":["\"use strict\";\r\n// Copyright 2021 Google LLC\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ExternalAccountClient = void 0;\r\nconst baseexternalclient_1 = require(\"./baseexternalclient\");\r\nconst identitypoolclient_1 = require(\"./identitypoolclient\");\r\nconst awsclient_1 = require(\"./awsclient\");\r\nconst pluggable_auth_client_1 = require(\"./pluggable-auth-client\");\r\n/**\r\n * Dummy class with no constructor. Developers are expected to use fromJSON.\r\n */\r\nclass ExternalAccountClient {\r\n    constructor() {\r\n        throw new Error('ExternalAccountClients should be initialized via: ' +\r\n            'ExternalAccountClient.fromJSON(), ' +\r\n            'directly via explicit constructors, eg. ' +\r\n            'new AwsClient(options), new IdentityPoolClient(options), new' +\r\n            'PluggableAuthClientOptions, or via ' +\r\n            'new GoogleAuth(options).getClient()');\r\n    }\r\n    /**\r\n     * This static method will instantiate the\r\n     * corresponding type of external account credential depending on the\r\n     * underlying credential source.\r\n     * @param options The external account options object typically loaded\r\n     *   from the external account JSON credential file.\r\n     * @param additionalOptions **DEPRECATED, all options are available in the\r\n     *   `options` parameter.** Optional additional behavior customization options.\r\n     *   These currently customize expiration threshold time and whether to retry\r\n     *   on 401/403 API request errors.\r\n     * @return A BaseExternalAccountClient instance or null if the options\r\n     *   provided do not correspond to an external account credential.\r\n     */\r\n    static fromJSON(options, additionalOptions) {\r\n        var _a, _b;\r\n        if (options && options.type === baseexternalclient_1.EXTERNAL_ACCOUNT_TYPE) {\r\n            if ((_a = options.credential_source) === null || _a === void 0 ? void 0 : _a.environment_id) {\r\n                return new awsclient_1.AwsClient(options, additionalOptions);\r\n            }\r\n            else if ((_b = options.credential_source) === null || _b === void 0 ? void 0 : _b.executable) {\r\n                return new pluggable_auth_client_1.PluggableAuthClient(options, additionalOptions);\r\n            }\r\n            else {\r\n                return new identitypoolclient_1.IdentityPoolClient(options, additionalOptions);\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\nexports.ExternalAccountClient = ExternalAccountClient;\r\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,qBAAqB,GAAG,KAAK,CAAC;AACtC,MAAMC,oBAAoB,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAC5D,MAAMC,oBAAoB,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AAC5D,MAAME,WAAW,GAAGF,OAAO,CAAC,aAAa,CAAC;AAC1C,MAAMG,uBAAuB,GAAGH,OAAO,CAAC,yBAAyB,CAAC;AAClE;AACA;AACA;AACA,MAAMF,qBAAqB,CAAC;EACxBM,WAAWA,CAAA,EAAG;IACV,MAAM,IAAIC,KAAK,CAAC,oDAAoD,GAChE,oCAAoC,GACpC,0CAA0C,GAC1C,8DAA8D,GAC9D,qCAAqC,GACrC,qCAAqC,CAAC;EAC9C;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAOC,QAAQA,CAACC,OAAO,EAAEC,iBAAiB,EAAE;IACxC,IAAIC,EAAE,EAAEC,EAAE;IACV,IAAIH,OAAO,IAAIA,OAAO,CAACI,IAAI,KAAKZ,oBAAoB,CAACa,qBAAqB,EAAE;MACxE,IAAI,CAACH,EAAE,GAAGF,OAAO,CAACM,iBAAiB,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACK,cAAc,EAAE;QACzF,OAAO,IAAIZ,WAAW,CAACa,SAAS,CAACR,OAAO,EAAEC,iBAAiB,CAAC;MAChE,CAAC,MACI,IAAI,CAACE,EAAE,GAAGH,OAAO,CAACM,iBAAiB,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACM,UAAU,EAAE;QAC1F,OAAO,IAAIb,uBAAuB,CAACc,mBAAmB,CAACV,OAAO,EAAEC,iBAAiB,CAAC;MACtF,CAAC,MACI;QACD,OAAO,IAAIP,oBAAoB,CAACiB,kBAAkB,CAACX,OAAO,EAAEC,iBAAiB,CAAC;MAClF;IACJ,CAAC,MACI;MACD,OAAO,IAAI;IACf;EACJ;AACJ;AACAZ,OAAO,CAACE,qBAAqB,GAAGA,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}