{"ast":null,"code":"\"use strict\";\n\n/**\r\n * Copyright 2024 Google LLC. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FieldOrder = void 0;\n/**\r\n * A Query order-by field.\r\n *\r\n * @private\r\n * @internal\r\n * @class\r\n */\nclass FieldOrder {\n  /**\r\n   * @param field The name of a document field (member) on which to order query\r\n   * results.\r\n   * @param direction One of 'ASCENDING' (default) or 'DESCENDING' to\r\n   * set the ordering direction to ascending or descending, respectively.\r\n   */\n  constructor(field, direction = 'ASCENDING') {\n    this.field = field;\n    this.direction = direction;\n  }\n  /**\r\n   * Generates the proto representation for this field order.\r\n   * @private\r\n   * @internal\r\n   */\n  toProto() {\n    return {\n      field: {\n        fieldPath: this.field.formattedName\n      },\n      direction: this.direction\n    };\n  }\n}\nexports.FieldOrder = FieldOrder;","map":{"version":3,"names":["Object","defineProperty","exports","value","FieldOrder","constructor","field","direction","toProto","fieldPath","formattedName"],"sources":["C:/Users/yujir/Documents/ynov/app pwa/mypwafinal/my-pwa/node_modules/@google-cloud/firestore/build/src/reference/field-order.js"],"sourcesContent":["\"use strict\";\r\n/**\r\n * Copyright 2024 Google LLC. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FieldOrder = void 0;\r\n/**\r\n * A Query order-by field.\r\n *\r\n * @private\r\n * @internal\r\n * @class\r\n */\r\nclass FieldOrder {\r\n    /**\r\n     * @param field The name of a document field (member) on which to order query\r\n     * results.\r\n     * @param direction One of 'ASCENDING' (default) or 'DESCENDING' to\r\n     * set the ordering direction to ascending or descending, respectively.\r\n     */\r\n    constructor(field, direction = 'ASCENDING') {\r\n        this.field = field;\r\n        this.direction = direction;\r\n    }\r\n    /**\r\n     * Generates the proto representation for this field order.\r\n     * @private\r\n     * @internal\r\n     */\r\n    toProto() {\r\n        return {\r\n            field: {\r\n                fieldPath: this.field.formattedName,\r\n            },\r\n            direction: this.direction,\r\n        };\r\n    }\r\n}\r\nexports.FieldOrder = FieldOrder;\r\n//# sourceMappingURL=field-order.js.map"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAG,KAAK,CAAC;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,UAAU,CAAC;EACb;AACJ;AACA;AACA;AACA;AACA;EACIC,WAAWA,CAACC,KAAK,EAAEC,SAAS,GAAG,WAAW,EAAE;IACxC,IAAI,CAACD,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC9B;EACA;AACJ;AACA;AACA;AACA;EACIC,OAAOA,CAAA,EAAG;IACN,OAAO;MACHF,KAAK,EAAE;QACHG,SAAS,EAAE,IAAI,CAACH,KAAK,CAACI;MAC1B,CAAC;MACDH,SAAS,EAAE,IAAI,CAACA;IACpB,CAAC;EACL;AACJ;AACAL,OAAO,CAACE,UAAU,GAAGA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}