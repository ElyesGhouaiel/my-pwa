{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yujir\\\\Documents\\\\ynov\\\\app pwa\\\\my-pwa\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { initializeApp } from 'firebase/app';\nimport { getMessaging, getToken as getFCMToken, onMessage } from 'firebase/messaging';\nimport { register } from './serviceWorkerRegistration'; // Assurez-vous que ce chemin est correct\nimport { getDatabase, ref, set } from 'firebase/database'; // Importez les fonctions nécessaires pour la base de données\n\n// Configuration Firebase\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDLu_SNw66YIVs8ruwMGwxnv1DDcxuzbKQ\",\n  authDomain: \"test-1ed88.firebaseapp.com\",\n  projectId: \"test-1ed88\",\n  storageBucket: \"test-1ed88.firebasestorage.app\",\n  messagingSenderId: \"240250228794\",\n  appId: \"1:240250228794:web:ddef4fee8b65752e5d6503\",\n  measurementId: \"G-NCX2XWPCS9\"\n};\n\n// Initialisation de Firebase\nconst app = initializeApp(firebaseConfig);\nconst messaging = getMessaging(app);\nconst database = getDatabase(app); // Initialisez la base de données\n\nfunction App() {\n  _s();\n  const [notification, setNotification] = useState({\n    title: '',\n    body: ''\n  });\n\n  // Enregistrement du service worker\n  useEffect(() => {\n    register({\n      onUpdate: registration => {\n        console.log('Service Worker updated:', registration);\n      },\n      onSuccess: registration => {\n        console.log('Service Worker registered:', registration);\n      }\n    });\n  }, []);\n\n  // Demande de permission pour les notifications\n  const requestPermission = async () => {\n    console.log('Demande de permission...');\n    try {\n      const permission = await Notification.requestPermission();\n      if (permission === 'granted') {\n        console.log('Permission accordée.');\n        await fetchFCMToken(); // Appel à la fonction pour récupérer le token FCM\n      } else {\n        console.error('Permission refusée');\n      }\n    } catch (error) {\n      console.error('Erreur lors de la demande de permission:', error);\n    }\n  };\n\n  // Récupération du token FCM et envoi à Firebase\n  const fetchFCMToken = async () => {\n    try {\n      const vapidKey = 'BIsFRIerqr3JOxS93ZSk5Giq-Rt81E2sdErv5HGKOA-hS8t3mTxtQQr8jwLDqRomJ3STyTNSlbv_SXBL97IdJiA';\n      const token = await getFCMToken(messaging, {\n        vapidKey\n      });\n      if (token) {\n        console.log('Token FCM:', token);\n        await sendTokenToFirebase(token); // Envoi du token à Firebase\n      } else {\n        console.log('Aucun token d\\'enregistrement disponible.');\n      }\n    } catch (err) {\n      console.error('Une erreur est survenue lors de la récupération du token :', err);\n    }\n  };\n\n  // Fonction pour envoyer le token à Firebase\n  const sendTokenToFirebase = async token => {\n    const userId = 'DUl7qfqc3CP7nAxl2vckvtdVqH33'; // Remplacez par l'ID utilisateur approprié ou récupérez-le dynamiquement\n    try {\n      await set(ref(database, 'users/' + userId + '/fcmToken'), token); // Enregistre le token sous l'utilisateur spécifié\n      console.log('Token envoyé à Firebase avec succès.');\n    } catch (error) {\n      console.error('Erreur lors de l\\'envoi du token à Firebase :', error);\n    }\n  };\n\n  // Gestion des messages reçus lorsque l'application est au premier plan\n  useEffect(() => {\n    requestPermission(); // Demande de permission lors du premier rendu\n\n    const unsubscribe = onMessage(messaging, payload => {\n      console.log('Message reçu:', payload);\n      setNotification({\n        title: payload.notification.title,\n        body: payload.notification.body\n      });\n    });\n    return () => unsubscribe(); // Nettoyage à la désinscription\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ma PWA React avec Notifications Push\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: requestPermission,\n        children: \"Demander la permission pour les notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), notification.title && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Derni\\xE8re notification :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: notification.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: notification.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"N4TqdSfilpzNWnpSEr9JxP0+d4I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","initializeApp","getMessaging","getToken","getFCMToken","onMessage","register","getDatabase","ref","set","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","messaging","database","App","_s","notification","setNotification","title","body","onUpdate","registration","console","log","onSuccess","requestPermission","permission","Notification","fetchFCMToken","error","vapidKey","token","sendTokenToFirebase","err","userId","unsubscribe","payload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/yujir/Documents/ynov/app pwa/my-pwa/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { initializeApp } from 'firebase/app';\nimport { getMessaging, getToken as getFCMToken, onMessage } from 'firebase/messaging';\nimport { register } from './serviceWorkerRegistration'; // Assurez-vous que ce chemin est correct\nimport { getDatabase, ref, set } from 'firebase/database'; // Importez les fonctions nécessaires pour la base de données\n\n// Configuration Firebase\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDLu_SNw66YIVs8ruwMGwxnv1DDcxuzbKQ\",\n  authDomain: \"test-1ed88.firebaseapp.com\",\n  projectId: \"test-1ed88\",\n  storageBucket: \"test-1ed88.firebasestorage.app\",\n  messagingSenderId: \"240250228794\",\n  appId: \"1:240250228794:web:ddef4fee8b65752e5d6503\",\n  measurementId: \"G-NCX2XWPCS9\"\n};\n\n// Initialisation de Firebase\nconst app = initializeApp(firebaseConfig);\nconst messaging = getMessaging(app);\nconst database = getDatabase(app); // Initialisez la base de données\n\nfunction App() {\n  const [notification, setNotification] = useState({ title: '', body: '' });\n\n  // Enregistrement du service worker\n  useEffect(() => {\n    register({\n      onUpdate: registration => {\n        console.log('Service Worker updated:', registration);\n      },\n      onSuccess: registration => {\n        console.log('Service Worker registered:', registration);\n      }\n    });\n  }, []);\n\n  // Demande de permission pour les notifications\n  const requestPermission = async () => {\n    console.log('Demande de permission...');\n    try {\n      const permission = await Notification.requestPermission();\n      if (permission === 'granted') {\n        console.log('Permission accordée.');\n        await fetchFCMToken(); // Appel à la fonction pour récupérer le token FCM\n      } else {\n        console.error('Permission refusée');\n      }\n    } catch (error) {\n      console.error('Erreur lors de la demande de permission:', error);\n    }\n  };\n\n  // Récupération du token FCM et envoi à Firebase\n  const fetchFCMToken = async () => {\n    try {\n      const vapidKey = 'BIsFRIerqr3JOxS93ZSk5Giq-Rt81E2sdErv5HGKOA-hS8t3mTxtQQr8jwLDqRomJ3STyTNSlbv_SXBL97IdJiA';\n      const token = await getFCMToken(messaging, { vapidKey });\n      \n      if (token) {\n        console.log('Token FCM:', token);\n        await sendTokenToFirebase(token); // Envoi du token à Firebase\n      } else {\n        console.log('Aucun token d\\'enregistrement disponible.');\n      }\n    } catch (err) {\n      console.error('Une erreur est survenue lors de la récupération du token :', err);\n    }\n  };\n\n  // Fonction pour envoyer le token à Firebase\n  const sendTokenToFirebase = async (token) => {\n    const userId = 'DUl7qfqc3CP7nAxl2vckvtdVqH33'; // Remplacez par l'ID utilisateur approprié ou récupérez-le dynamiquement\n    try {\n      await set(ref(database, 'users/' + userId + '/fcmToken'), token); // Enregistre le token sous l'utilisateur spécifié\n      console.log('Token envoyé à Firebase avec succès.');\n    } catch (error) {\n      console.error('Erreur lors de l\\'envoi du token à Firebase :', error);\n    }\n  };\n\n  // Gestion des messages reçus lorsque l'application est au premier plan\n  useEffect(() => {\n    requestPermission(); // Demande de permission lors du premier rendu\n\n    const unsubscribe = onMessage(messaging, (payload) => {\n      console.log('Message reçu:', payload);\n      setNotification({\n        title: payload.notification.title,\n        body: payload.notification.body\n      });\n    });\n\n    return () => unsubscribe(); // Nettoyage à la désinscription\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Ma PWA React avec Notifications Push</h1>\n        <button onClick={requestPermission}>Demander la permission pour les notifications</button>\n        {notification.title && (\n          <div>\n            <h2>Dernière notification :</h2>\n            <p>{notification.title}</p>\n            <p>{notification.body}</p>\n          </div>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}