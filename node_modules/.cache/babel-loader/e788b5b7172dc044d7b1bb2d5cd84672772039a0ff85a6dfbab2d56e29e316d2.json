{"ast":null,"code":"import { decode as decodeBase64URL } from '../runtime/base64url.js';\nimport { fromSPKI, fromPKCS8, fromX509 } from '../runtime/asn1.js';\nimport asKeyObject from '../runtime/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nexport async function importSPKI(spki, alg, options) {\n  if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n    throw new TypeError('\"spki\" must be SPKI formatted string');\n  }\n  return fromSPKI(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n  if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n    throw new TypeError('\"x509\" must be X.509 formatted string');\n  }\n  return fromX509(x509, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n  if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n    throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n  }\n  return fromPKCS8(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg, octAsKeyObject) {\n  var _a;\n  if (!isObject(jwk)) {\n    throw new TypeError('JWK must be an object');\n  }\n  alg || (alg = jwk.alg);\n  switch (jwk.kty) {\n    case 'oct':\n      if (typeof jwk.k !== 'string' || !jwk.k) {\n        throw new TypeError('missing \"k\" (Key Value) Parameter value');\n      }\n      octAsKeyObject !== null && octAsKeyObject !== void 0 ? octAsKeyObject : octAsKeyObject = jwk.ext !== true;\n      if (octAsKeyObject) {\n        return asKeyObject({\n          ...jwk,\n          alg,\n          ext: (_a = jwk.ext) !== null && _a !== void 0 ? _a : false\n        });\n      }\n      return decodeBase64URL(jwk.k);\n    case 'RSA':\n      if (jwk.oth !== undefined) {\n        throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n      }\n    case 'EC':\n    case 'OKP':\n      return asKeyObject({\n        ...jwk,\n        alg\n      });\n    default:\n      throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n  }\n}","map":{"version":3,"names":["decode","decodeBase64URL","fromSPKI","fromPKCS8","fromX509","asKeyObject","JOSENotSupported","isObject","importSPKI","spki","alg","options","indexOf","TypeError","importX509","x509","importPKCS8","pkcs8","importJWK","jwk","octAsKeyObject","_a","kty","k","ext","oth","undefined"],"sources":["C:/Users/yujir/Documents/ynov/app pwa/mypwafinal/my-pwa/node_modules/jose/dist/browser/key/import.js"],"sourcesContent":["import { decode as decodeBase64URL } from '../runtime/base64url.js';\r\nimport { fromSPKI, fromPKCS8, fromX509 } from '../runtime/asn1.js';\r\nimport asKeyObject from '../runtime/jwk_to_key.js';\r\nimport { JOSENotSupported } from '../util/errors.js';\r\nimport isObject from '../lib/is_object.js';\r\nexport async function importSPKI(spki, alg, options) {\r\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\r\n        throw new TypeError('\"spki\" must be SPKI formatted string');\r\n    }\r\n    return fromSPKI(spki, alg, options);\r\n}\r\nexport async function importX509(x509, alg, options) {\r\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\r\n        throw new TypeError('\"x509\" must be X.509 formatted string');\r\n    }\r\n    return fromX509(x509, alg, options);\r\n}\r\nexport async function importPKCS8(pkcs8, alg, options) {\r\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\r\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\r\n    }\r\n    return fromPKCS8(pkcs8, alg, options);\r\n}\r\nexport async function importJWK(jwk, alg, octAsKeyObject) {\r\n    var _a;\r\n    if (!isObject(jwk)) {\r\n        throw new TypeError('JWK must be an object');\r\n    }\r\n    alg || (alg = jwk.alg);\r\n    switch (jwk.kty) {\r\n        case 'oct':\r\n            if (typeof jwk.k !== 'string' || !jwk.k) {\r\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\r\n            }\r\n            octAsKeyObject !== null && octAsKeyObject !== void 0 ? octAsKeyObject : (octAsKeyObject = jwk.ext !== true);\r\n            if (octAsKeyObject) {\r\n                return asKeyObject({ ...jwk, alg, ext: (_a = jwk.ext) !== null && _a !== void 0 ? _a : false });\r\n            }\r\n            return decodeBase64URL(jwk.k);\r\n        case 'RSA':\r\n            if (jwk.oth !== undefined) {\r\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\r\n            }\r\n        case 'EC':\r\n        case 'OKP':\r\n            return asKeyObject({ ...jwk, alg });\r\n        default:\r\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,MAAM,IAAIC,eAAe,QAAQ,yBAAyB;AACnE,SAASC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,oBAAoB;AAClE,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,gBAAgB,QAAQ,mBAAmB;AACpD,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAO,eAAeC,UAAUA,CAACC,IAAI,EAAEC,GAAG,EAAEC,OAAO,EAAE;EACjD,IAAI,OAAOF,IAAI,KAAK,QAAQ,IAAIA,IAAI,CAACG,OAAO,CAAC,4BAA4B,CAAC,KAAK,CAAC,EAAE;IAC9E,MAAM,IAAIC,SAAS,CAAC,sCAAsC,CAAC;EAC/D;EACA,OAAOX,QAAQ,CAACO,IAAI,EAAEC,GAAG,EAAEC,OAAO,CAAC;AACvC;AACA,OAAO,eAAeG,UAAUA,CAACC,IAAI,EAAEL,GAAG,EAAEC,OAAO,EAAE;EACjD,IAAI,OAAOI,IAAI,KAAK,QAAQ,IAAIA,IAAI,CAACH,OAAO,CAAC,6BAA6B,CAAC,KAAK,CAAC,EAAE;IAC/E,MAAM,IAAIC,SAAS,CAAC,uCAAuC,CAAC;EAChE;EACA,OAAOT,QAAQ,CAACW,IAAI,EAAEL,GAAG,EAAEC,OAAO,CAAC;AACvC;AACA,OAAO,eAAeK,WAAWA,CAACC,KAAK,EAAEP,GAAG,EAAEC,OAAO,EAAE;EACnD,IAAI,OAAOM,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACL,OAAO,CAAC,6BAA6B,CAAC,KAAK,CAAC,EAAE;IACjF,MAAM,IAAIC,SAAS,CAAC,yCAAyC,CAAC;EAClE;EACA,OAAOV,SAAS,CAACc,KAAK,EAAEP,GAAG,EAAEC,OAAO,CAAC;AACzC;AACA,OAAO,eAAeO,SAASA,CAACC,GAAG,EAAET,GAAG,EAAEU,cAAc,EAAE;EACtD,IAAIC,EAAE;EACN,IAAI,CAACd,QAAQ,CAACY,GAAG,CAAC,EAAE;IAChB,MAAM,IAAIN,SAAS,CAAC,uBAAuB,CAAC;EAChD;EACAH,GAAG,KAAKA,GAAG,GAAGS,GAAG,CAACT,GAAG,CAAC;EACtB,QAAQS,GAAG,CAACG,GAAG;IACX,KAAK,KAAK;MACN,IAAI,OAAOH,GAAG,CAACI,CAAC,KAAK,QAAQ,IAAI,CAACJ,GAAG,CAACI,CAAC,EAAE;QACrC,MAAM,IAAIV,SAAS,CAAC,yCAAyC,CAAC;MAClE;MACAO,cAAc,KAAK,IAAI,IAAIA,cAAc,KAAK,KAAK,CAAC,GAAGA,cAAc,GAAIA,cAAc,GAAGD,GAAG,CAACK,GAAG,KAAK,IAAK;MAC3G,IAAIJ,cAAc,EAAE;QAChB,OAAOf,WAAW,CAAC;UAAE,GAAGc,GAAG;UAAET,GAAG;UAAEc,GAAG,EAAE,CAACH,EAAE,GAAGF,GAAG,CAACK,GAAG,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG;QAAM,CAAC,CAAC;MACnG;MACA,OAAOpB,eAAe,CAACkB,GAAG,CAACI,CAAC,CAAC;IACjC,KAAK,KAAK;MACN,IAAIJ,GAAG,CAACM,GAAG,KAAKC,SAAS,EAAE;QACvB,MAAM,IAAIpB,gBAAgB,CAAC,oEAAoE,CAAC;MACpG;IACJ,KAAK,IAAI;IACT,KAAK,KAAK;MACN,OAAOD,WAAW,CAAC;QAAE,GAAGc,GAAG;QAAET;MAAI,CAAC,CAAC;IACvC;MACI,MAAM,IAAIJ,gBAAgB,CAAC,8CAA8C,CAAC;EAClF;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}