{"ast":null,"code":"/*! firebase-admin v13.0.1 */\n\"use strict\";\n\n/*!\r\n * Copyright 2020 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RemoteConfig = exports.PercentConditionOperator = exports.CustomSignalOperator = void 0;\nexports.getRemoteConfig = getRemoteConfig;\n/**\r\n * Firebase Remote Config.\r\n *\r\n * @packageDocumentation\r\n */\nconst app_1 = require(\"../app\");\nconst remote_config_1 = require(\"./remote-config\");\nvar remote_config_api_1 = require(\"./remote-config-api\");\nObject.defineProperty(exports, \"CustomSignalOperator\", {\n  enumerable: true,\n  get: function () {\n    return remote_config_api_1.CustomSignalOperator;\n  }\n});\nObject.defineProperty(exports, \"PercentConditionOperator\", {\n  enumerable: true,\n  get: function () {\n    return remote_config_api_1.PercentConditionOperator;\n  }\n});\nvar remote_config_2 = require(\"./remote-config\");\nObject.defineProperty(exports, \"RemoteConfig\", {\n  enumerable: true,\n  get: function () {\n    return remote_config_2.RemoteConfig;\n  }\n});\n/**\r\n * Gets the {@link RemoteConfig} service for the default app or a given app.\r\n *\r\n * `getRemoteConfig()` can be called with no arguments to access the default\r\n * app's `RemoteConfig` service or as `getRemoteConfig(app)` to access the\r\n * `RemoteConfig` service associated with a specific app.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Get the `RemoteConfig` service for the default app\r\n * const defaultRemoteConfig = getRemoteConfig();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Get the `RemoteConfig` service for a given app\r\n * const otherRemoteConfig = getRemoteConfig(otherApp);\r\n * ```\r\n *\r\n * @param app - Optional app for which to return the `RemoteConfig` service.\r\n *   If not provided, the default `RemoteConfig` service is returned.\r\n *\r\n * @returns The default `RemoteConfig` service if no\r\n *   app is provided, or the `RemoteConfig` service associated with the provided\r\n *   app.\r\n */\nfunction getRemoteConfig(app) {\n  if (typeof app === 'undefined') {\n    app = (0, app_1.getApp)();\n  }\n  const firebaseApp = app;\n  return firebaseApp.getOrInitService('remoteConfig', app => new remote_config_1.RemoteConfig(app));\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","RemoteConfig","PercentConditionOperator","CustomSignalOperator","getRemoteConfig","app_1","require","remote_config_1","remote_config_api_1","enumerable","get","remote_config_2","app","getApp","firebaseApp","getOrInitService"],"sources":["C:/Users/yujir/Documents/ynov/app pwa/mypwafinal/my-pwa/node_modules/firebase-admin/lib/remote-config/index.js"],"sourcesContent":["/*! firebase-admin v13.0.1 */\r\n\"use strict\";\r\n/*!\r\n * Copyright 2020 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RemoteConfig = exports.PercentConditionOperator = exports.CustomSignalOperator = void 0;\r\nexports.getRemoteConfig = getRemoteConfig;\r\n/**\r\n * Firebase Remote Config.\r\n *\r\n * @packageDocumentation\r\n */\r\nconst app_1 = require(\"../app\");\r\nconst remote_config_1 = require(\"./remote-config\");\r\nvar remote_config_api_1 = require(\"./remote-config-api\");\r\nObject.defineProperty(exports, \"CustomSignalOperator\", { enumerable: true, get: function () { return remote_config_api_1.CustomSignalOperator; } });\r\nObject.defineProperty(exports, \"PercentConditionOperator\", { enumerable: true, get: function () { return remote_config_api_1.PercentConditionOperator; } });\r\nvar remote_config_2 = require(\"./remote-config\");\r\nObject.defineProperty(exports, \"RemoteConfig\", { enumerable: true, get: function () { return remote_config_2.RemoteConfig; } });\r\n/**\r\n * Gets the {@link RemoteConfig} service for the default app or a given app.\r\n *\r\n * `getRemoteConfig()` can be called with no arguments to access the default\r\n * app's `RemoteConfig` service or as `getRemoteConfig(app)` to access the\r\n * `RemoteConfig` service associated with a specific app.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Get the `RemoteConfig` service for the default app\r\n * const defaultRemoteConfig = getRemoteConfig();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Get the `RemoteConfig` service for a given app\r\n * const otherRemoteConfig = getRemoteConfig(otherApp);\r\n * ```\r\n *\r\n * @param app - Optional app for which to return the `RemoteConfig` service.\r\n *   If not provided, the default `RemoteConfig` service is returned.\r\n *\r\n * @returns The default `RemoteConfig` service if no\r\n *   app is provided, or the `RemoteConfig` service associated with the provided\r\n *   app.\r\n */\r\nfunction getRemoteConfig(app) {\r\n    if (typeof app === 'undefined') {\r\n        app = (0, app_1.getApp)();\r\n    }\r\n    const firebaseApp = app;\r\n    return firebaseApp.getOrInitService('remoteConfig', (app) => new remote_config_1.RemoteConfig(app));\r\n}\r\n"],"mappings":"AAAA;AACA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAGF,OAAO,CAACG,wBAAwB,GAAGH,OAAO,CAACI,oBAAoB,GAAG,KAAK,CAAC;AAC/FJ,OAAO,CAACK,eAAe,GAAGA,eAAe;AACzC;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC/B,MAAMC,eAAe,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAClD,IAAIE,mBAAmB,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AACxDT,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,sBAAsB,EAAE;EAAEU,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,mBAAmB,CAACL,oBAAoB;EAAE;AAAE,CAAC,CAAC;AACnJN,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,0BAA0B,EAAE;EAAEU,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,mBAAmB,CAACN,wBAAwB;EAAE;AAAE,CAAC,CAAC;AAC3J,IAAIS,eAAe,GAAGL,OAAO,CAAC,iBAAiB,CAAC;AAChDT,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,cAAc,EAAE;EAAEU,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOC,eAAe,CAACV,YAAY;EAAE;AAAE,CAAC,CAAC;AAC/H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,eAAeA,CAACQ,GAAG,EAAE;EAC1B,IAAI,OAAOA,GAAG,KAAK,WAAW,EAAE;IAC5BA,GAAG,GAAG,CAAC,CAAC,EAAEP,KAAK,CAACQ,MAAM,EAAE,CAAC;EAC7B;EACA,MAAMC,WAAW,GAAGF,GAAG;EACvB,OAAOE,WAAW,CAACC,gBAAgB,CAAC,cAAc,EAAGH,GAAG,IAAK,IAAIL,eAAe,CAACN,YAAY,CAACW,GAAG,CAAC,CAAC;AACvG","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}