{"ast":null,"code":"/*! firebase-admin v13.0.1 */\n\"use strict\";\n\n/*!\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Auth = void 0;\nconst auth_api_request_1 = require(\"./auth-api-request\");\nconst tenant_manager_1 = require(\"./tenant-manager\");\nconst base_auth_1 = require(\"./base-auth\");\nconst project_config_manager_1 = require(\"./project-config-manager\");\n/**\r\n * Auth service bound to the provided app.\r\n * An Auth instance can have multiple tenants.\r\n */\nclass Auth extends base_auth_1.BaseAuth {\n  /**\r\n   * @param app - The app for this Auth service.\r\n   * @constructor\r\n   * @internal\r\n   */\n  constructor(app) {\n    super(app, new auth_api_request_1.AuthRequestHandler(app));\n    this.app_ = app;\n    this.tenantManager_ = new tenant_manager_1.TenantManager(app);\n    this.projectConfigManager_ = new project_config_manager_1.ProjectConfigManager(app);\n  }\n  /**\r\n   * Returns the app associated with this Auth instance.\r\n   *\r\n   * @returns The app associated with this Auth instance.\r\n   */\n  get app() {\n    return this.app_;\n  }\n  /**\r\n   * Returns the tenant manager instance associated with the current project.\r\n   *\r\n   * @returns The tenant manager instance associated with the current project.\r\n   */\n  tenantManager() {\n    return this.tenantManager_;\n  }\n  /**\r\n   * Returns the project config manager instance associated with the current project.\r\n   *\r\n   * @returns The project config manager instance associated with the current project.\r\n   */\n  projectConfigManager() {\n    return this.projectConfigManager_;\n  }\n}\nexports.Auth = Auth;","map":{"version":3,"names":["Object","defineProperty","exports","value","Auth","auth_api_request_1","require","tenant_manager_1","base_auth_1","project_config_manager_1","BaseAuth","constructor","app","AuthRequestHandler","app_","tenantManager_","TenantManager","projectConfigManager_","ProjectConfigManager","tenantManager","projectConfigManager"],"sources":["C:/Users/yujir/Documents/ynov/app pwa/mypwafinal/my-pwa/node_modules/firebase-admin/lib/auth/auth.js"],"sourcesContent":["/*! firebase-admin v13.0.1 */\r\n\"use strict\";\r\n/*!\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Auth = void 0;\r\nconst auth_api_request_1 = require(\"./auth-api-request\");\r\nconst tenant_manager_1 = require(\"./tenant-manager\");\r\nconst base_auth_1 = require(\"./base-auth\");\r\nconst project_config_manager_1 = require(\"./project-config-manager\");\r\n/**\r\n * Auth service bound to the provided app.\r\n * An Auth instance can have multiple tenants.\r\n */\r\nclass Auth extends base_auth_1.BaseAuth {\r\n    /**\r\n     * @param app - The app for this Auth service.\r\n     * @constructor\r\n     * @internal\r\n     */\r\n    constructor(app) {\r\n        super(app, new auth_api_request_1.AuthRequestHandler(app));\r\n        this.app_ = app;\r\n        this.tenantManager_ = new tenant_manager_1.TenantManager(app);\r\n        this.projectConfigManager_ = new project_config_manager_1.ProjectConfigManager(app);\r\n    }\r\n    /**\r\n     * Returns the app associated with this Auth instance.\r\n     *\r\n     * @returns The app associated with this Auth instance.\r\n     */\r\n    get app() {\r\n        return this.app_;\r\n    }\r\n    /**\r\n     * Returns the tenant manager instance associated with the current project.\r\n     *\r\n     * @returns The tenant manager instance associated with the current project.\r\n     */\r\n    tenantManager() {\r\n        return this.tenantManager_;\r\n    }\r\n    /**\r\n     * Returns the project config manager instance associated with the current project.\r\n     *\r\n     * @returns The project config manager instance associated with the current project.\r\n     */\r\n    projectConfigManager() {\r\n        return this.projectConfigManager_;\r\n    }\r\n}\r\nexports.Auth = Auth;\r\n"],"mappings":"AAAA;AACA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,IAAI,GAAG,KAAK,CAAC;AACrB,MAAMC,kBAAkB,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACxD,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AACpD,MAAME,WAAW,GAAGF,OAAO,CAAC,aAAa,CAAC;AAC1C,MAAMG,wBAAwB,GAAGH,OAAO,CAAC,0BAA0B,CAAC;AACpE;AACA;AACA;AACA;AACA,MAAMF,IAAI,SAASI,WAAW,CAACE,QAAQ,CAAC;EACpC;AACJ;AACA;AACA;AACA;EACIC,WAAWA,CAACC,GAAG,EAAE;IACb,KAAK,CAACA,GAAG,EAAE,IAAIP,kBAAkB,CAACQ,kBAAkB,CAACD,GAAG,CAAC,CAAC;IAC1D,IAAI,CAACE,IAAI,GAAGF,GAAG;IACf,IAAI,CAACG,cAAc,GAAG,IAAIR,gBAAgB,CAACS,aAAa,CAACJ,GAAG,CAAC;IAC7D,IAAI,CAACK,qBAAqB,GAAG,IAAIR,wBAAwB,CAACS,oBAAoB,CAACN,GAAG,CAAC;EACvF;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIA,GAAGA,CAAA,EAAG;IACN,OAAO,IAAI,CAACE,IAAI;EACpB;EACA;AACJ;AACA;AACA;AACA;EACIK,aAAaA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACJ,cAAc;EAC9B;EACA;AACJ;AACA;AACA;AACA;EACIK,oBAAoBA,CAAA,EAAG;IACnB,OAAO,IAAI,CAACH,qBAAqB;EACrC;AACJ;AACAf,OAAO,CAACE,IAAI,GAAGA,IAAI","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}