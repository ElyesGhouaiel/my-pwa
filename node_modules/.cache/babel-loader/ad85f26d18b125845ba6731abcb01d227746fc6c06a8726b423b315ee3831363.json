{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yujir\\\\Documents\\\\ynov\\\\app pwa\\\\mypwafinal\\\\my-pwa\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { initializeApp } from 'firebase/app';\nimport { getMessaging, getToken as getFCMToken, onMessage } from 'firebase/messaging';\nimport { register } from './serviceWorkerRegistration'; // Assurez-vous que ce chemin est correct\n\n// Configuration Firebase\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDLu_SNw66YIVs8ruwMGwxnv1DDcxuzbKQ\",\n  authDomain: \"test-1ed88.firebaseapp.com\",\n  projectId: \"test-1ed88\",\n  storageBucket: \"test-1ed88.firebasestorage.app\",\n  messagingSenderId: \"240250228794\",\n  appId: \"1:240250228794:web:ddef4fee8b65752e5d6503\",\n  measurementId: \"G-NCX2XWPCS9\"\n};\n\n// Initialisation de Firebase\nconst app = initializeApp(firebaseConfig);\nconst messaging = getMessaging(app);\nfunction App() {\n  _s();\n  const [notification, setNotification] = useState({\n    title: '',\n    body: ''\n  });\n\n  // Enregistrement du service worker\n  useEffect(() => {\n    register({\n      onUpdate: registration => {\n        console.log('Service Worker updated:', registration);\n      },\n      onSuccess: registration => {\n        console.log('Service Worker registered:', registration);\n      }\n    });\n  }, []);\n\n  // Demande de permission pour les notifications\n  const requestPermission = async () => {\n    console.log('Demande de permission...');\n    try {\n      const permission = await Notification.requestPermission();\n      if (permission === 'granted') {\n        console.log('Permission accordée.');\n        const Token = await fetchFCMToken(); // Appel à la fonction pour récupérer le token FCM\n\n        if (Token) {\n          const message = {\n            notification: {\n              title: 'Test d\\'envoi de notification',\n              body: 'Corps de la notification'\n            },\n            token: Token // Remplacez par le token FCM du destinataire\n          };\n          try {\n            const response = await app.messaging().send(message);\n            console.log('Notification envoyée avec succès:', response);\n          } catch (error) {\n            console.error('Erreur lors de l\\'envoi de la notification:', error);\n          }\n        }\n      } else {\n        console.error('Permission refusée');\n      }\n    } catch (error) {\n      console.error('Erreur lors de la demande de permission:', error);\n    }\n  };\n\n  // Récupération du token FCM\n  const fetchFCMToken = async () => {\n    try {\n      const vapidKey = 'BIsFRIerqr3JOxS93ZSk5Giq-Rt81E2sdErv5HGKOA-hS8t3mTxtQQr8jwLDqRomJ3STyTNSlbv_SXBL97IdJiA';\n      const token = await getFCMToken(messaging, {\n        vapidKey\n      });\n      if (token) {\n        console.log('Token FCM:', token);\n        return token;\n        // Envoyez ce token à votre serveur ici\n      } else {\n        console.log('Aucun token d\\'enregistrement disponible.');\n      }\n    } catch (err) {\n      console.error('Une erreur est survenue lors de la récupération du token :', err);\n    }\n  };\n\n  // Gestion des messages reçus lorsque l'application est au premier plan\n  useEffect(() => {\n    requestPermission(); // Demande de permission lors du premier rendu\n\n    const unsubscribe = onMessage(messaging, payload => {\n      console.log('Message reçu:', payload);\n      setNotification({\n        title: payload.notification.title,\n        body: payload.notification.body\n      });\n    });\n    return () => unsubscribe(); // Nettoyage à la désinscription\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ma PWA React avec Notifications Push\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: requestPermission,\n        children: \"Demander la permission pour les notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), notification.title && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Derni\\xE8re notification :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: notification.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: notification.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"N4TqdSfilpzNWnpSEr9JxP0+d4I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","initializeApp","getMessaging","getToken","getFCMToken","onMessage","register","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","messaging","App","_s","notification","setNotification","title","body","onUpdate","registration","console","log","onSuccess","requestPermission","permission","Notification","Token","fetchFCMToken","message","token","response","send","error","vapidKey","err","unsubscribe","payload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/yujir/Documents/ynov/app pwa/mypwafinal/my-pwa/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getMessaging, getToken as getFCMToken, onMessage } from 'firebase/messaging';\r\nimport { register } from './serviceWorkerRegistration'; // Assurez-vous que ce chemin est correct\r\n\r\n\r\n// Configuration Firebase\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDLu_SNw66YIVs8ruwMGwxnv1DDcxuzbKQ\",\r\n  authDomain: \"test-1ed88.firebaseapp.com\",\r\n  projectId: \"test-1ed88\",\r\n  storageBucket: \"test-1ed88.firebasestorage.app\",\r\n  messagingSenderId: \"240250228794\",\r\n  appId: \"1:240250228794:web:ddef4fee8b65752e5d6503\",\r\n  measurementId: \"G-NCX2XWPCS9\"\r\n};\r\n\r\n// Initialisation de Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst messaging = getMessaging(app);\r\n\r\nfunction App() {\r\n  const [notification, setNotification] = useState({ title: '', body: '' });\r\n\r\n  // Enregistrement du service worker\r\n  useEffect(() => {\r\n    register({\r\n      onUpdate: registration => {\r\n        console.log('Service Worker updated:', registration);\r\n      },\r\n      onSuccess: registration => {\r\n        console.log('Service Worker registered:', registration);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // Demande de permission pour les notifications\r\n  const requestPermission = async () => {\r\n    console.log('Demande de permission...');\r\n    try {\r\n      const permission = await Notification.requestPermission();\r\n      if (permission === 'granted') {\r\n        console.log('Permission accordée.');\r\n      const Token=  await fetchFCMToken(); // Appel à la fonction pour récupérer le token FCM\r\n\r\n      if (Token) {\r\n        const message = {\r\n          notification: {\r\n            title: 'Test d\\'envoi de notification',\r\n            body: 'Corps de la notification',\r\n          },\r\n          token: Token, // Remplacez par le token FCM du destinataire\r\n        };\r\n      \r\n        try {\r\n          const response = await app.messaging().send(message);\r\n          console.log('Notification envoyée avec succès:', response);\r\n        } catch (error) {\r\n          console.error('Erreur lors de l\\'envoi de la notification:', error);\r\n        }\r\n        \r\n      \r\n      }\r\n      } else {\r\n        console.error('Permission refusée');\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors de la demande de permission:', error);\r\n    }\r\n  };\r\n\r\n  // Récupération du token FCM\r\n  const fetchFCMToken = async () => {\r\n    try {\r\n      const vapidKey = 'BIsFRIerqr3JOxS93ZSk5Giq-Rt81E2sdErv5HGKOA-hS8t3mTxtQQr8jwLDqRomJ3STyTNSlbv_SXBL97IdJiA';\r\n      const token = await getFCMToken(messaging, { vapidKey });\r\n      \r\n      if (token) {\r\n        console.log('Token FCM:', token);\r\n        return token;\r\n        // Envoyez ce token à votre serveur ici\r\n      } else {\r\n        console.log('Aucun token d\\'enregistrement disponible.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Une erreur est survenue lors de la récupération du token :', err);\r\n    }\r\n  };\r\n\r\n  // Gestion des messages reçus lorsque l'application est au premier plan\r\n  useEffect(() => {\r\n    requestPermission(); // Demande de permission lors du premier rendu\r\n\r\n    const unsubscribe = onMessage(messaging, (payload) => {\r\n      console.log('Message reçu:', payload);\r\n      setNotification({\r\n        title: payload.notification.title,\r\n        body: payload.notification.body\r\n      });\r\n    });\r\n\r\n    return () => unsubscribe(); // Nettoyage à la désinscription\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Ma PWA React avec Notifications Push</h1>\r\n        <button onClick={requestPermission}>Demander la permission pour les notifications</button>\r\n        {notification.title && (\r\n          <div>\r\n            <h2>Dernière notification :</h2>\r\n            <p>{notification.title}</p>\r\n            <p>{notification.body}</p>\r\n          </div>\r\n        )}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}