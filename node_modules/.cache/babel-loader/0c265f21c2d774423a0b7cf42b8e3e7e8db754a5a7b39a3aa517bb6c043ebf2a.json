{"ast":null,"code":"\"use strict\";\n\n/*!\r\n * Copyright 2018 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Deferred = void 0;\nexports.autoId = autoId;\nexports.requestTag = requestTag;\nexports.isObject = isObject;\nexports.isPlainObject = isPlainObject;\nexports.isEmpty = isEmpty;\nexports.isFunction = isFunction;\nexports.isPermanentRpcError = isPermanentRpcError;\nexports.getRetryCodes = getRetryCodes;\nexports.getTotalTimeout = getTotalTimeout;\nexports.getRetryParams = getRetryParams;\nexports.silencePromise = silencePromise;\nexports.wrapError = wrapError;\nexports.tryGetPreferRestEnvironmentVariable = tryGetPreferRestEnvironmentVariable;\nexports.mapToArray = mapToArray;\nexports.isArrayEqual = isArrayEqual;\nexports.isPrimitiveArrayEqual = isPrimitiveArrayEqual;\nconst crypto_1 = require(\"crypto\");\nconst gapicConfig = require(\"./v1/firestore_client_config.json\");\n/**\r\n * A Promise implementation that supports deferred resolution.\r\n * @private\r\n * @internal\r\n */\nclass Deferred {\n  constructor() {\n    this.resolve = () => {};\n    this.reject = () => {};\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n}\nexports.Deferred = Deferred;\n/**\r\n * Generate a unique client-side identifier.\r\n *\r\n * Used for the creation of new documents.\r\n *\r\n * @private\r\n * @internal\r\n * @returns {string} A unique 20-character wide identifier.\r\n */\nfunction autoId() {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let autoId = '';\n  while (autoId.length < 20) {\n    const bytes = (0, crypto_1.randomBytes)(40);\n    bytes.forEach(b => {\n      // Length of `chars` is 62. We only take bytes between 0 and 62*4-1\n      // (both inclusive). The value is then evenly mapped to indices of `char`\n      // via a modulo operation.\n      const maxValue = 62 * 4 - 1;\n      if (autoId.length < 20 && b <= maxValue) {\n        autoId += chars.charAt(b % 62);\n      }\n    });\n  }\n  return autoId;\n}\n/**\r\n * Generate a short and semi-random client-side identifier.\r\n *\r\n * Used for the creation of request tags.\r\n *\r\n * @private\r\n * @internal\r\n * @returns {string} A random 5-character wide identifier.\r\n */\nfunction requestTag() {\n  return autoId().substr(0, 5);\n}\n/**\r\n * Determines whether `value` is a JavaScript object.\r\n *\r\n * @private\r\n * @internal\r\n */\nfunction isObject(value) {\n  return Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\r\n * Verifies that 'obj' is a plain JavaScript object that can be encoded as a\r\n * 'Map' in Firestore.\r\n *\r\n * @private\r\n * @internal\r\n * @param input The argument to verify.\r\n * @returns 'true' if the input can be a treated as a plain object.\r\n */\nfunction isPlainObject(input) {\n  return isObject(input) && (Object.getPrototypeOf(input) === Object.prototype || Object.getPrototypeOf(input) === null || input.constructor.name === 'Object');\n}\n/**\r\n * Returns whether `value` has no custom properties.\r\n *\r\n * @private\r\n * @internal\r\n */\nfunction isEmpty(value) {\n  return Object.keys(value).length === 0;\n}\n/**\r\n * Determines whether `value` is a JavaScript function.\r\n *\r\n * @private\r\n * @internal\r\n */\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\r\n * Determines whether the provided error is considered permanent for the given\r\n * RPC.\r\n *\r\n * @private\r\n * @internal\r\n */\nfunction isPermanentRpcError(err, methodName) {\n  if (err.code !== undefined) {\n    const retryCodes = getRetryCodes(methodName);\n    return retryCodes.indexOf(err.code) === -1;\n  } else {\n    return false;\n  }\n}\nlet serviceConfig;\n/**\r\n * Lazy-loads the service config when first accessed.\r\n * @private\r\n * @internal\r\n **/\nfunction getServiceConfig(methodName) {\n  if (!serviceConfig) {\n    serviceConfig = require('google-gax/build/src/fallback').constructSettings('google.firestore.v1.Firestore', gapicConfig, {}, require('google-gax/build/src/status').Status);\n  }\n  return serviceConfig[methodName];\n}\n/**\r\n * Returns the list of retryable error codes specified in the service\r\n * configuration.\r\n * @private\r\n * @internal\r\n */\nfunction getRetryCodes(methodName) {\n  var _a, _b, _c;\n  return (_c = (_b = (_a = getServiceConfig(methodName)) === null || _a === void 0 ? void 0 : _a.retry) === null || _b === void 0 ? void 0 : _b.retryCodes) !== null && _c !== void 0 ? _c : [];\n}\n/**\r\n * Gets the total timeout in milliseconds from the retry settings in\r\n * the service config for the given RPC. If the total timeout is not\r\n * set, then `0` is returned.\r\n *\r\n * @private\r\n * @internal\r\n */\nfunction getTotalTimeout(methodName) {\n  var _a, _b, _c, _d;\n  return (_d = (_c = (_b = (_a = getServiceConfig(methodName)) === null || _a === void 0 ? void 0 : _a.retry) === null || _b === void 0 ? void 0 : _b.backoffSettings) === null || _c === void 0 ? void 0 : _c.totalTimeoutMillis) !== null && _d !== void 0 ? _d : 0;\n}\n/**\r\n * Returns the backoff setting from the service configuration.\r\n * @private\r\n * @internal\r\n */\nfunction getRetryParams(methodName) {\n  var _a, _b, _c;\n  return (_c = (_b = (_a = getServiceConfig(methodName)) === null || _a === void 0 ? void 0 : _a.retry) === null || _b === void 0 ? void 0 : _b.backoffSettings) !== null && _c !== void 0 ? _c : require('google-gax/build/src/fallback').createDefaultBackoffSettings();\n}\n/**\r\n * Returns a promise with a void return type. The returned promise swallows all\r\n * errors and never throws.\r\n *\r\n * This is primarily used to wait for a promise to complete when the result of\r\n * the promise will be discarded.\r\n *\r\n * @private\r\n * @internal\r\n */\nfunction silencePromise(promise) {\n  return promise.then(() => {}, () => {});\n}\n/**\r\n * Wraps the provided error in a new error that includes the provided stack.\r\n *\r\n * Used to preserve stack traces across async calls.\r\n * @private\r\n * @internal\r\n */\nfunction wrapError(err, stack) {\n  err.stack += '\\nCaused by: ' + stack;\n  return err;\n}\n/**\r\n * Parses the value of the environment variable FIRESTORE_PREFER_REST, and\r\n * returns a value indicating if the environment variable enables or disables\r\n * preferRest.\r\n *\r\n * This function will warn to the console if the environment variable is set\r\n * to an unsupported value.\r\n *\r\n * @return `true` if the environment variable enables `preferRest`,\r\n * `false` if the environment variable disables `preferRest`, or `undefined`\r\n * if the environment variable is not set or is set to an unsupported value.\r\n *\r\n * @internal\r\n * @private\r\n */\nfunction tryGetPreferRestEnvironmentVariable() {\n  var _a;\n  const rawValue = (_a = process.env.FIRESTORE_PREFER_REST) === null || _a === void 0 ? void 0 : _a.trim().toLowerCase();\n  if (rawValue === undefined) {\n    return undefined;\n  } else if (rawValue === '1' || rawValue === 'true') {\n    return true;\n  } else if (rawValue === '0' || rawValue === 'false') {\n    return false;\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn(`An unsupported value was specified for the environment variable FIRESTORE_PREFER_REST. Value ${rawValue} is unsupported.`);\n    return undefined;\n  }\n}\n/**\r\n * Returns an array of values that are calculated by performing the given `fn`\r\n * on all keys in the given `obj` dictionary.\r\n *\r\n * @private\r\n * @internal\r\n */\nfunction mapToArray(obj, fn) {\n  const result = [];\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      result.push(fn(obj[key], key, obj));\n    }\n  }\n  return result;\n}\n/**\r\n * Verifies equality for an array of objects using the `isEqual` interface.\r\n *\r\n * @private\r\n * @internal\r\n * @param left Array of objects supporting `isEqual`.\r\n * @param right Array of objects supporting `isEqual`.\r\n * @return True if arrays are equal.\r\n */\nfunction isArrayEqual(left, right) {\n  if (left.length !== right.length) {\n    return false;\n  }\n  for (let i = 0; i < left.length; ++i) {\n    if (!left[i].isEqual(right[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\r\n * Verifies equality for an array of primitives.\r\n *\r\n * @private\r\n * @internal\r\n * @param left Array of primitives.\r\n * @param right Array of primitives.\r\n * @return True if arrays are equal.\r\n */\nfunction isPrimitiveArrayEqual(left, right) {\n  if (left.length !== right.length) {\n    return false;\n  }\n  for (let i = 0; i < left.length; ++i) {\n    if (left[i] !== right[i]) {\n      return false;\n    }\n  }\n  return true;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","Deferred","autoId","requestTag","isObject","isPlainObject","isEmpty","isFunction","isPermanentRpcError","getRetryCodes","getTotalTimeout","getRetryParams","silencePromise","wrapError","tryGetPreferRestEnvironmentVariable","mapToArray","isArrayEqual","isPrimitiveArrayEqual","crypto_1","require","gapicConfig","constructor","resolve","reject","promise","Promise","chars","length","bytes","randomBytes","forEach","b","maxValue","charAt","substr","prototype","toString","call","input","getPrototypeOf","name","keys","err","methodName","code","undefined","retryCodes","indexOf","serviceConfig","getServiceConfig","constructSettings","Status","_a","_b","_c","retry","_d","backoffSettings","totalTimeoutMillis","createDefaultBackoffSettings","then","stack","rawValue","process","env","FIRESTORE_PREFER_REST","trim","toLowerCase","console","warn","obj","fn","result","key","hasOwnProperty","push","left","right","i","isEqual"],"sources":["C:/Users/yujir/Documents/ynov/app pwa/mypwafinal/my-pwa/node_modules/@google-cloud/firestore/build/src/util.js"],"sourcesContent":["\"use strict\";\r\n/*!\r\n * Copyright 2018 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Deferred = void 0;\r\nexports.autoId = autoId;\r\nexports.requestTag = requestTag;\r\nexports.isObject = isObject;\r\nexports.isPlainObject = isPlainObject;\r\nexports.isEmpty = isEmpty;\r\nexports.isFunction = isFunction;\r\nexports.isPermanentRpcError = isPermanentRpcError;\r\nexports.getRetryCodes = getRetryCodes;\r\nexports.getTotalTimeout = getTotalTimeout;\r\nexports.getRetryParams = getRetryParams;\r\nexports.silencePromise = silencePromise;\r\nexports.wrapError = wrapError;\r\nexports.tryGetPreferRestEnvironmentVariable = tryGetPreferRestEnvironmentVariable;\r\nexports.mapToArray = mapToArray;\r\nexports.isArrayEqual = isArrayEqual;\r\nexports.isPrimitiveArrayEqual = isPrimitiveArrayEqual;\r\nconst crypto_1 = require(\"crypto\");\r\nconst gapicConfig = require(\"./v1/firestore_client_config.json\");\r\n/**\r\n * A Promise implementation that supports deferred resolution.\r\n * @private\r\n * @internal\r\n */\r\nclass Deferred {\r\n    constructor() {\r\n        this.resolve = () => { };\r\n        this.reject = () => { };\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n    }\r\n}\r\nexports.Deferred = Deferred;\r\n/**\r\n * Generate a unique client-side identifier.\r\n *\r\n * Used for the creation of new documents.\r\n *\r\n * @private\r\n * @internal\r\n * @returns {string} A unique 20-character wide identifier.\r\n */\r\nfunction autoId() {\r\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    let autoId = '';\r\n    while (autoId.length < 20) {\r\n        const bytes = (0, crypto_1.randomBytes)(40);\r\n        bytes.forEach(b => {\r\n            // Length of `chars` is 62. We only take bytes between 0 and 62*4-1\r\n            // (both inclusive). The value is then evenly mapped to indices of `char`\r\n            // via a modulo operation.\r\n            const maxValue = 62 * 4 - 1;\r\n            if (autoId.length < 20 && b <= maxValue) {\r\n                autoId += chars.charAt(b % 62);\r\n            }\r\n        });\r\n    }\r\n    return autoId;\r\n}\r\n/**\r\n * Generate a short and semi-random client-side identifier.\r\n *\r\n * Used for the creation of request tags.\r\n *\r\n * @private\r\n * @internal\r\n * @returns {string} A random 5-character wide identifier.\r\n */\r\nfunction requestTag() {\r\n    return autoId().substr(0, 5);\r\n}\r\n/**\r\n * Determines whether `value` is a JavaScript object.\r\n *\r\n * @private\r\n * @internal\r\n */\r\nfunction isObject(value) {\r\n    return Object.prototype.toString.call(value) === '[object Object]';\r\n}\r\n/**\r\n * Verifies that 'obj' is a plain JavaScript object that can be encoded as a\r\n * 'Map' in Firestore.\r\n *\r\n * @private\r\n * @internal\r\n * @param input The argument to verify.\r\n * @returns 'true' if the input can be a treated as a plain object.\r\n */\r\nfunction isPlainObject(input) {\r\n    return (isObject(input) &&\r\n        (Object.getPrototypeOf(input) === Object.prototype ||\r\n            Object.getPrototypeOf(input) === null ||\r\n            input.constructor.name === 'Object'));\r\n}\r\n/**\r\n * Returns whether `value` has no custom properties.\r\n *\r\n * @private\r\n * @internal\r\n */\r\nfunction isEmpty(value) {\r\n    return Object.keys(value).length === 0;\r\n}\r\n/**\r\n * Determines whether `value` is a JavaScript function.\r\n *\r\n * @private\r\n * @internal\r\n */\r\nfunction isFunction(value) {\r\n    return typeof value === 'function';\r\n}\r\n/**\r\n * Determines whether the provided error is considered permanent for the given\r\n * RPC.\r\n *\r\n * @private\r\n * @internal\r\n */\r\nfunction isPermanentRpcError(err, methodName) {\r\n    if (err.code !== undefined) {\r\n        const retryCodes = getRetryCodes(methodName);\r\n        return retryCodes.indexOf(err.code) === -1;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nlet serviceConfig;\r\n/**\r\n * Lazy-loads the service config when first accessed.\r\n * @private\r\n * @internal\r\n **/\r\nfunction getServiceConfig(methodName) {\r\n    if (!serviceConfig) {\r\n        serviceConfig = require('google-gax/build/src/fallback').constructSettings('google.firestore.v1.Firestore', gapicConfig, {}, require('google-gax/build/src/status').Status);\r\n    }\r\n    return serviceConfig[methodName];\r\n}\r\n/**\r\n * Returns the list of retryable error codes specified in the service\r\n * configuration.\r\n * @private\r\n * @internal\r\n */\r\nfunction getRetryCodes(methodName) {\r\n    var _a, _b, _c;\r\n    return (_c = (_b = (_a = getServiceConfig(methodName)) === null || _a === void 0 ? void 0 : _a.retry) === null || _b === void 0 ? void 0 : _b.retryCodes) !== null && _c !== void 0 ? _c : [];\r\n}\r\n/**\r\n * Gets the total timeout in milliseconds from the retry settings in\r\n * the service config for the given RPC. If the total timeout is not\r\n * set, then `0` is returned.\r\n *\r\n * @private\r\n * @internal\r\n */\r\nfunction getTotalTimeout(methodName) {\r\n    var _a, _b, _c, _d;\r\n    return ((_d = (_c = (_b = (_a = getServiceConfig(methodName)) === null || _a === void 0 ? void 0 : _a.retry) === null || _b === void 0 ? void 0 : _b.backoffSettings) === null || _c === void 0 ? void 0 : _c.totalTimeoutMillis) !== null && _d !== void 0 ? _d : 0);\r\n}\r\n/**\r\n * Returns the backoff setting from the service configuration.\r\n * @private\r\n * @internal\r\n */\r\nfunction getRetryParams(methodName) {\r\n    var _a, _b, _c;\r\n    return ((_c = (_b = (_a = getServiceConfig(methodName)) === null || _a === void 0 ? void 0 : _a.retry) === null || _b === void 0 ? void 0 : _b.backoffSettings) !== null && _c !== void 0 ? _c : require('google-gax/build/src/fallback').createDefaultBackoffSettings());\r\n}\r\n/**\r\n * Returns a promise with a void return type. The returned promise swallows all\r\n * errors and never throws.\r\n *\r\n * This is primarily used to wait for a promise to complete when the result of\r\n * the promise will be discarded.\r\n *\r\n * @private\r\n * @internal\r\n */\r\nfunction silencePromise(promise) {\r\n    return promise.then(() => { }, () => { });\r\n}\r\n/**\r\n * Wraps the provided error in a new error that includes the provided stack.\r\n *\r\n * Used to preserve stack traces across async calls.\r\n * @private\r\n * @internal\r\n */\r\nfunction wrapError(err, stack) {\r\n    err.stack += '\\nCaused by: ' + stack;\r\n    return err;\r\n}\r\n/**\r\n * Parses the value of the environment variable FIRESTORE_PREFER_REST, and\r\n * returns a value indicating if the environment variable enables or disables\r\n * preferRest.\r\n *\r\n * This function will warn to the console if the environment variable is set\r\n * to an unsupported value.\r\n *\r\n * @return `true` if the environment variable enables `preferRest`,\r\n * `false` if the environment variable disables `preferRest`, or `undefined`\r\n * if the environment variable is not set or is set to an unsupported value.\r\n *\r\n * @internal\r\n * @private\r\n */\r\nfunction tryGetPreferRestEnvironmentVariable() {\r\n    var _a;\r\n    const rawValue = (_a = process.env.FIRESTORE_PREFER_REST) === null || _a === void 0 ? void 0 : _a.trim().toLowerCase();\r\n    if (rawValue === undefined) {\r\n        return undefined;\r\n    }\r\n    else if (rawValue === '1' || rawValue === 'true') {\r\n        return true;\r\n    }\r\n    else if (rawValue === '0' || rawValue === 'false') {\r\n        return false;\r\n    }\r\n    else {\r\n        // eslint-disable-next-line no-console\r\n        console.warn(`An unsupported value was specified for the environment variable FIRESTORE_PREFER_REST. Value ${rawValue} is unsupported.`);\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Returns an array of values that are calculated by performing the given `fn`\r\n * on all keys in the given `obj` dictionary.\r\n *\r\n * @private\r\n * @internal\r\n */\r\nfunction mapToArray(obj, fn) {\r\n    const result = [];\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            result.push(fn(obj[key], key, obj));\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Verifies equality for an array of objects using the `isEqual` interface.\r\n *\r\n * @private\r\n * @internal\r\n * @param left Array of objects supporting `isEqual`.\r\n * @param right Array of objects supporting `isEqual`.\r\n * @return True if arrays are equal.\r\n */\r\nfunction isArrayEqual(left, right) {\r\n    if (left.length !== right.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < left.length; ++i) {\r\n        if (!left[i].isEqual(right[i])) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Verifies equality for an array of primitives.\r\n *\r\n * @private\r\n * @internal\r\n * @param left Array of primitives.\r\n * @param right Array of primitives.\r\n * @return True if arrays are equal.\r\n */\r\nfunction isPrimitiveArrayEqual(left, right) {\r\n    if (left.length !== right.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < left.length; ++i) {\r\n        if (left[i] !== right[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n//# sourceMappingURL=util.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}