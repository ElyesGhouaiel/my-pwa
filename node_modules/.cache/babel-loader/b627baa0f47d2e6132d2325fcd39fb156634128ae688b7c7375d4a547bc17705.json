{"ast":null,"code":"import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = value => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n  if (typeof audPayload === 'string') {\n    return audOption.includes(audPayload);\n  }\n  if (Array.isArray(audPayload)) {\n    return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n  }\n  return false;\n};\nexport default (protectedHeader, encodedPayload, options = {}) => {\n  const {\n    typ\n  } = options;\n  if (typ && (typeof protectedHeader.typ !== 'string' || normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n    throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', 'typ', 'check_failed');\n  }\n  let payload;\n  try {\n    payload = JSON.parse(decoder.decode(encodedPayload));\n  } catch (_a) {}\n  if (!isObject(payload)) {\n    throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n  }\n  const {\n    requiredClaims = [],\n    issuer,\n    subject,\n    audience,\n    maxTokenAge\n  } = options;\n  if (maxTokenAge !== undefined) requiredClaims.push('iat');\n  if (audience !== undefined) requiredClaims.push('aud');\n  if (subject !== undefined) requiredClaims.push('sub');\n  if (issuer !== undefined) requiredClaims.push('iss');\n  for (const claim of new Set(requiredClaims.reverse())) {\n    if (!(claim in payload)) {\n      throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, claim, 'missing');\n    }\n  }\n  if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n    throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', 'iss', 'check_failed');\n  }\n  if (subject && payload.sub !== subject) {\n    throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', 'sub', 'check_failed');\n  }\n  if (audience && !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n    throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', 'aud', 'check_failed');\n  }\n  let tolerance;\n  switch (typeof options.clockTolerance) {\n    case 'string':\n      tolerance = secs(options.clockTolerance);\n      break;\n    case 'number':\n      tolerance = options.clockTolerance;\n      break;\n    case 'undefined':\n      tolerance = 0;\n      break;\n    default:\n      throw new TypeError('Invalid clockTolerance option type');\n  }\n  const {\n    currentDate\n  } = options;\n  const now = epoch(currentDate || new Date());\n  if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n    throw new JWTClaimValidationFailed('\"iat\" claim must be a number', 'iat', 'invalid');\n  }\n  if (payload.nbf !== undefined) {\n    if (typeof payload.nbf !== 'number') {\n      throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', 'nbf', 'invalid');\n    }\n    if (payload.nbf > now + tolerance) {\n      throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', 'nbf', 'check_failed');\n    }\n  }\n  if (payload.exp !== undefined) {\n    if (typeof payload.exp !== 'number') {\n      throw new JWTClaimValidationFailed('\"exp\" claim must be a number', 'exp', 'invalid');\n    }\n    if (payload.exp <= now - tolerance) {\n      throw new JWTExpired('\"exp\" claim timestamp check failed', 'exp', 'check_failed');\n    }\n  }\n  if (maxTokenAge) {\n    const age = now - payload.iat;\n    const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n    if (age - tolerance > max) {\n      throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', 'iat', 'check_failed');\n    }\n    if (age < 0 - tolerance) {\n      throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed');\n    }\n  }\n  return payload;\n};","map":{"version":3,"names":["JWTClaimValidationFailed","JWTExpired","JWTInvalid","decoder","epoch","secs","isObject","normalizeTyp","value","toLowerCase","replace","checkAudiencePresence","audPayload","audOption","includes","Array","isArray","some","Set","prototype","has","bind","protectedHeader","encodedPayload","options","typ","payload","JSON","parse","decode","_a","requiredClaims","issuer","subject","audience","maxTokenAge","undefined","push","claim","reverse","iss","sub","aud","tolerance","clockTolerance","TypeError","currentDate","now","Date","iat","nbf","exp","age","max"],"sources":["C:/Users/yujir/Documents/ynov/app pwa/mypwafinal/my-pwa/node_modules/jose/dist/browser/lib/jwt_claims_set.js"],"sourcesContent":["import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\r\nimport { decoder } from './buffer_utils.js';\r\nimport epoch from './epoch.js';\r\nimport secs from './secs.js';\r\nimport isObject from './is_object.js';\r\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\r\nconst checkAudiencePresence = (audPayload, audOption) => {\r\n    if (typeof audPayload === 'string') {\r\n        return audOption.includes(audPayload);\r\n    }\r\n    if (Array.isArray(audPayload)) {\r\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\r\n    }\r\n    return false;\r\n};\r\nexport default (protectedHeader, encodedPayload, options = {}) => {\r\n    const { typ } = options;\r\n    if (typ &&\r\n        (typeof protectedHeader.typ !== 'string' ||\r\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\r\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', 'typ', 'check_failed');\r\n    }\r\n    let payload;\r\n    try {\r\n        payload = JSON.parse(decoder.decode(encodedPayload));\r\n    }\r\n    catch (_a) {\r\n    }\r\n    if (!isObject(payload)) {\r\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\r\n    }\r\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\r\n    if (maxTokenAge !== undefined)\r\n        requiredClaims.push('iat');\r\n    if (audience !== undefined)\r\n        requiredClaims.push('aud');\r\n    if (subject !== undefined)\r\n        requiredClaims.push('sub');\r\n    if (issuer !== undefined)\r\n        requiredClaims.push('iss');\r\n    for (const claim of new Set(requiredClaims.reverse())) {\r\n        if (!(claim in payload)) {\r\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, claim, 'missing');\r\n        }\r\n    }\r\n    if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\r\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', 'iss', 'check_failed');\r\n    }\r\n    if (subject && payload.sub !== subject) {\r\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', 'sub', 'check_failed');\r\n    }\r\n    if (audience &&\r\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\r\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', 'aud', 'check_failed');\r\n    }\r\n    let tolerance;\r\n    switch (typeof options.clockTolerance) {\r\n        case 'string':\r\n            tolerance = secs(options.clockTolerance);\r\n            break;\r\n        case 'number':\r\n            tolerance = options.clockTolerance;\r\n            break;\r\n        case 'undefined':\r\n            tolerance = 0;\r\n            break;\r\n        default:\r\n            throw new TypeError('Invalid clockTolerance option type');\r\n    }\r\n    const { currentDate } = options;\r\n    const now = epoch(currentDate || new Date());\r\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\r\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', 'iat', 'invalid');\r\n    }\r\n    if (payload.nbf !== undefined) {\r\n        if (typeof payload.nbf !== 'number') {\r\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', 'nbf', 'invalid');\r\n        }\r\n        if (payload.nbf > now + tolerance) {\r\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', 'nbf', 'check_failed');\r\n        }\r\n    }\r\n    if (payload.exp !== undefined) {\r\n        if (typeof payload.exp !== 'number') {\r\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', 'exp', 'invalid');\r\n        }\r\n        if (payload.exp <= now - tolerance) {\r\n            throw new JWTExpired('\"exp\" claim timestamp check failed', 'exp', 'check_failed');\r\n        }\r\n    }\r\n    if (maxTokenAge) {\r\n        const age = now - payload.iat;\r\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\r\n        if (age - tolerance > max) {\r\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', 'iat', 'check_failed');\r\n        }\r\n        if (age < 0 - tolerance) {\r\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed');\r\n        }\r\n    }\r\n    return payload;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}