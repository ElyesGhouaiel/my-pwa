{"ast":null,"code":"\"use strict\";\n\n/*!\r\n * Copyright 2024 Google LLC. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExplainResults = exports.ExplainMetrics = exports.ExecutionStats = exports.PlanSummary = void 0;\n/**\r\n * PlanSummary contains information about the planning stage of a query.\r\n *\r\n * @class PlanSummary\r\n */\nclass PlanSummary {\n  /**\r\n   * @private\r\n   * @internal\r\n   */\n  constructor(indexesUsed) {\n    this.indexesUsed = indexesUsed;\n  }\n  /**\r\n   * @private\r\n   * @internal\r\n   */\n  static _fromProto(plan, serializer) {\n    const indexes = [];\n    if (plan && plan.indexesUsed) {\n      for (const index of plan.indexesUsed) {\n        indexes.push(serializer.decodeGoogleProtobufStruct(index));\n      }\n    }\n    return new PlanSummary(indexes);\n  }\n}\nexports.PlanSummary = PlanSummary;\n/**\r\n *  ExecutionStats contains information about the execution of a query.\r\n *\r\n * @class ExecutionStats\r\n */\nclass ExecutionStats {\n  /**\r\n   * @private\r\n   * @internal\r\n   */\n  constructor(resultsReturned, executionDuration, readOperations, debugStats) {\n    this.resultsReturned = resultsReturned;\n    this.executionDuration = executionDuration;\n    this.readOperations = readOperations;\n    this.debugStats = debugStats;\n  }\n  /**\r\n   * @private\r\n   * @internal\r\n   */\n  static _fromProto(stats, serializer) {\n    var _a, _b;\n    if (stats) {\n      return new ExecutionStats(Number(stats.resultsReturned), {\n        seconds: Number((_a = stats.executionDuration) === null || _a === void 0 ? void 0 : _a.seconds),\n        nanoseconds: Number((_b = stats.executionDuration) === null || _b === void 0 ? void 0 : _b.nanos)\n      }, Number(stats.readOperations), serializer.decodeGoogleProtobufStruct(stats.debugStats));\n    }\n    return null;\n  }\n}\nexports.ExecutionStats = ExecutionStats;\n/**\r\n * ExplainMetrics contains information about planning and execution of a query.\r\n *\r\n * @class ExplainMetrics\r\n */\nclass ExplainMetrics {\n  /**\r\n   * @private\r\n   * @internal\r\n   */\n  constructor(planSummary, executionStats) {\n    this.planSummary = planSummary;\n    this.executionStats = executionStats;\n  }\n  /**\r\n   * @private\r\n   * @internal\r\n   */\n  static _fromProto(metrics, serializer) {\n    return new ExplainMetrics(PlanSummary._fromProto(metrics.planSummary, serializer), ExecutionStats._fromProto(metrics.executionStats, serializer));\n  }\n}\nexports.ExplainMetrics = ExplainMetrics;\n/**\r\n * ExplainResults contains information about planning, execution, and results\r\n * of a query.\r\n *\r\n * @class ExplainResults\r\n */\nclass ExplainResults {\n  /**\r\n   * @private\r\n   * @internal\r\n   */\n  constructor(metrics, snapshot) {\n    this.metrics = metrics;\n    this.snapshot = snapshot;\n  }\n}\nexports.ExplainResults = ExplainResults;","map":{"version":3,"names":["Object","defineProperty","exports","value","ExplainResults","ExplainMetrics","ExecutionStats","PlanSummary","constructor","indexesUsed","_fromProto","plan","serializer","indexes","index","push","decodeGoogleProtobufStruct","resultsReturned","executionDuration","readOperations","debugStats","stats","_a","_b","Number","seconds","nanoseconds","nanos","planSummary","executionStats","metrics","snapshot"],"sources":["C:/Users/yujir/Documents/ynov/app pwa/mypwafinal/my-pwa/node_modules/@google-cloud/firestore/build/src/query-profile.js"],"sourcesContent":["\"use strict\";\r\n/*!\r\n * Copyright 2024 Google LLC. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ExplainResults = exports.ExplainMetrics = exports.ExecutionStats = exports.PlanSummary = void 0;\r\n/**\r\n * PlanSummary contains information about the planning stage of a query.\r\n *\r\n * @class PlanSummary\r\n */\r\nclass PlanSummary {\r\n    /**\r\n     * @private\r\n     * @internal\r\n     */\r\n    constructor(indexesUsed) {\r\n        this.indexesUsed = indexesUsed;\r\n    }\r\n    /**\r\n     * @private\r\n     * @internal\r\n     */\r\n    static _fromProto(plan, serializer) {\r\n        const indexes = [];\r\n        if (plan && plan.indexesUsed) {\r\n            for (const index of plan.indexesUsed) {\r\n                indexes.push(serializer.decodeGoogleProtobufStruct(index));\r\n            }\r\n        }\r\n        return new PlanSummary(indexes);\r\n    }\r\n}\r\nexports.PlanSummary = PlanSummary;\r\n/**\r\n *  ExecutionStats contains information about the execution of a query.\r\n *\r\n * @class ExecutionStats\r\n */\r\nclass ExecutionStats {\r\n    /**\r\n     * @private\r\n     * @internal\r\n     */\r\n    constructor(resultsReturned, executionDuration, readOperations, debugStats) {\r\n        this.resultsReturned = resultsReturned;\r\n        this.executionDuration = executionDuration;\r\n        this.readOperations = readOperations;\r\n        this.debugStats = debugStats;\r\n    }\r\n    /**\r\n     * @private\r\n     * @internal\r\n     */\r\n    static _fromProto(stats, serializer) {\r\n        var _a, _b;\r\n        if (stats) {\r\n            return new ExecutionStats(Number(stats.resultsReturned), {\r\n                seconds: Number((_a = stats.executionDuration) === null || _a === void 0 ? void 0 : _a.seconds),\r\n                nanoseconds: Number((_b = stats.executionDuration) === null || _b === void 0 ? void 0 : _b.nanos),\r\n            }, Number(stats.readOperations), serializer.decodeGoogleProtobufStruct(stats.debugStats));\r\n        }\r\n        return null;\r\n    }\r\n}\r\nexports.ExecutionStats = ExecutionStats;\r\n/**\r\n * ExplainMetrics contains information about planning and execution of a query.\r\n *\r\n * @class ExplainMetrics\r\n */\r\nclass ExplainMetrics {\r\n    /**\r\n     * @private\r\n     * @internal\r\n     */\r\n    constructor(planSummary, executionStats) {\r\n        this.planSummary = planSummary;\r\n        this.executionStats = executionStats;\r\n    }\r\n    /**\r\n     * @private\r\n     * @internal\r\n     */\r\n    static _fromProto(metrics, serializer) {\r\n        return new ExplainMetrics(PlanSummary._fromProto(metrics.planSummary, serializer), ExecutionStats._fromProto(metrics.executionStats, serializer));\r\n    }\r\n}\r\nexports.ExplainMetrics = ExplainMetrics;\r\n/**\r\n * ExplainResults contains information about planning, execution, and results\r\n * of a query.\r\n *\r\n * @class ExplainResults\r\n */\r\nclass ExplainResults {\r\n    /**\r\n     * @private\r\n     * @internal\r\n     */\r\n    constructor(metrics, snapshot) {\r\n        this.metrics = metrics;\r\n        this.snapshot = snapshot;\r\n    }\r\n}\r\nexports.ExplainResults = ExplainResults;\r\n//# sourceMappingURL=query-profile.js.map"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,cAAc,GAAGF,OAAO,CAACG,cAAc,GAAGH,OAAO,CAACI,cAAc,GAAGJ,OAAO,CAACK,WAAW,GAAG,KAAK,CAAC;AACvG;AACA;AACA;AACA;AACA;AACA,MAAMA,WAAW,CAAC;EACd;AACJ;AACA;AACA;EACIC,WAAWA,CAACC,WAAW,EAAE;IACrB,IAAI,CAACA,WAAW,GAAGA,WAAW;EAClC;EACA;AACJ;AACA;AACA;EACI,OAAOC,UAAUA,CAACC,IAAI,EAAEC,UAAU,EAAE;IAChC,MAAMC,OAAO,GAAG,EAAE;IAClB,IAAIF,IAAI,IAAIA,IAAI,CAACF,WAAW,EAAE;MAC1B,KAAK,MAAMK,KAAK,IAAIH,IAAI,CAACF,WAAW,EAAE;QAClCI,OAAO,CAACE,IAAI,CAACH,UAAU,CAACI,0BAA0B,CAACF,KAAK,CAAC,CAAC;MAC9D;IACJ;IACA,OAAO,IAAIP,WAAW,CAACM,OAAO,CAAC;EACnC;AACJ;AACAX,OAAO,CAACK,WAAW,GAAGA,WAAW;AACjC;AACA;AACA;AACA;AACA;AACA,MAAMD,cAAc,CAAC;EACjB;AACJ;AACA;AACA;EACIE,WAAWA,CAACS,eAAe,EAAEC,iBAAiB,EAAEC,cAAc,EAAEC,UAAU,EAAE;IACxE,IAAI,CAACH,eAAe,GAAGA,eAAe;IACtC,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,UAAU,GAAGA,UAAU;EAChC;EACA;AACJ;AACA;AACA;EACI,OAAOV,UAAUA,CAACW,KAAK,EAAET,UAAU,EAAE;IACjC,IAAIU,EAAE,EAAEC,EAAE;IACV,IAAIF,KAAK,EAAE;MACP,OAAO,IAAIf,cAAc,CAACkB,MAAM,CAACH,KAAK,CAACJ,eAAe,CAAC,EAAE;QACrDQ,OAAO,EAAED,MAAM,CAAC,CAACF,EAAE,GAAGD,KAAK,CAACH,iBAAiB,MAAM,IAAI,IAAII,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,OAAO,CAAC;QAC/FC,WAAW,EAAEF,MAAM,CAAC,CAACD,EAAE,GAAGF,KAAK,CAACH,iBAAiB,MAAM,IAAI,IAAIK,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACI,KAAK;MACpG,CAAC,EAAEH,MAAM,CAACH,KAAK,CAACF,cAAc,CAAC,EAAEP,UAAU,CAACI,0BAA0B,CAACK,KAAK,CAACD,UAAU,CAAC,CAAC;IAC7F;IACA,OAAO,IAAI;EACf;AACJ;AACAlB,OAAO,CAACI,cAAc,GAAGA,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA,MAAMD,cAAc,CAAC;EACjB;AACJ;AACA;AACA;EACIG,WAAWA,CAACoB,WAAW,EAAEC,cAAc,EAAE;IACrC,IAAI,CAACD,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,cAAc,GAAGA,cAAc;EACxC;EACA;AACJ;AACA;AACA;EACI,OAAOnB,UAAUA,CAACoB,OAAO,EAAElB,UAAU,EAAE;IACnC,OAAO,IAAIP,cAAc,CAACE,WAAW,CAACG,UAAU,CAACoB,OAAO,CAACF,WAAW,EAAEhB,UAAU,CAAC,EAAEN,cAAc,CAACI,UAAU,CAACoB,OAAO,CAACD,cAAc,EAAEjB,UAAU,CAAC,CAAC;EACrJ;AACJ;AACAV,OAAO,CAACG,cAAc,GAAGA,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,MAAMD,cAAc,CAAC;EACjB;AACJ;AACA;AACA;EACII,WAAWA,CAACsB,OAAO,EAAEC,QAAQ,EAAE;IAC3B,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EAC5B;AACJ;AACA7B,OAAO,CAACE,cAAc,GAAGA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}