{"ast":null,"code":"\"use strict\";\n\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FirestoreAdminClient = void 0;\nconst jsonProtos = require(\"../../protos/admin_v1.json\");\n/**\r\n * Client JSON configuration object, loaded from\r\n * `src/v1/firestore_admin_client_config.json`.\r\n * This file defines retry strategy and timeouts for all API methods in this library.\r\n */\nconst gapicConfig = require(\"./firestore_admin_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\r\n *  The Cloud Firestore Admin API.\r\n *\r\n *  This API provides several administrative services for Cloud Firestore.\r\n *\r\n *  Project, Database, Namespace, Collection, Collection Group, and Document are\r\n *  used as defined in the Google Cloud Firestore API.\r\n *\r\n *  Operation: An Operation represents work being performed in the background.\r\n *\r\n *  The index service manages Cloud Firestore indexes.\r\n *\r\n *  Index creation is performed asynchronously.\r\n *  An Operation resource is created for each such asynchronous operation.\r\n *  The state of the operation (including any errors encountered)\r\n *  may be queried via the Operation resource.\r\n *\r\n *  The Operations collection provides a record of actions performed for the\r\n *  specified Project (including any Operations in progress). Operations are not\r\n *  created directly but through calls on other collections or resources.\r\n *\r\n *  An Operation that is done may be deleted so that it is no longer listed as\r\n *  part of the Operation collection. Operations are garbage collected after\r\n *  30 days. By default, ListOperations will only return in progress and failed\r\n *  operations. To list completed operation, issue a ListOperations request with\r\n *  the filter `done: true`.\r\n *\r\n *  Operations are created by service `FirestoreAdmin`, but are accessed via\r\n *  service `google.longrunning.Operations`.\r\n * @class\r\n * @memberof v1\r\n */\nclass FirestoreAdminClient {\n  /**\r\n   * Construct an instance of FirestoreAdminClient.\r\n   *\r\n   * @param {object} [options] - The configuration object.\r\n   * The options accepted by the constructor are described in detail\r\n   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\r\n   * The common options are:\r\n   * @param {object} [options.credentials] - Credentials object.\r\n   * @param {string} [options.credentials.client_email]\r\n   * @param {string} [options.credentials.private_key]\r\n   * @param {string} [options.email] - Account email address. Required when\r\n   *     using a .pem or .p12 keyFilename.\r\n   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\r\n   *     .p12 key downloaded from the Google Developers Console. If you provide\r\n   *     a path to a JSON file, the projectId option below is not necessary.\r\n   *     NOTE: .pem and .p12 require you to specify options.email as well.\r\n   * @param {number} [options.port] - The port on which to connect to\r\n   *     the remote host.\r\n   * @param {string} [options.projectId] - The project ID from the Google\r\n   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\r\n   *     the environment variable GCLOUD_PROJECT for your project ID. If your\r\n   *     app is running in an environment which supports\r\n   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\r\n   *     your project ID will be detected automatically.\r\n   * @param {string} [options.apiEndpoint] - The domain name of the\r\n   *     API remote host.\r\n   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\r\n   *     Follows the structure of {@link gapicConfig}.\r\n   * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\r\n   *     For more information, please check the\r\n   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\r\n   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\r\n   *     need to avoid loading the default gRPC version and want to use the fallback\r\n   *     HTTP implementation. Load only fallback version and pass it to the constructor:\r\n   *     ```\r\n   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\r\n   *     const client = new FirestoreAdminClient({fallback: true}, gax);\r\n   *     ```\r\n   */\n  constructor(opts, gaxInstance) {\n    var _a, _b, _c, _d, _e;\n    this._terminated = false;\n    this.descriptors = {\n      page: {},\n      stream: {},\n      longrunning: {},\n      batching: {}\n    };\n    // Ensure that options include all the required fields.\n    const staticMembers = this.constructor;\n    if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) && (opts === null || opts === void 0 ? void 0 : opts.universeDomain) && (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\n      throw new Error('Please set either universe_domain or universeDomain, but not both.');\n    }\n    const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object' ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN'] : undefined;\n    this._universeDomain = (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\n    this._servicePath = 'firestore.' + this._universeDomain;\n    const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\n    this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n    const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n    const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\n    const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function';\n    opts = Object.assign({\n      servicePath,\n      port,\n      clientConfig,\n      fallback\n    }, opts);\n    // Request numeric enum values if REST transport is used.\n    opts.numericEnums = true;\n    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n    if (servicePath !== this._servicePath && !('scopes' in opts)) {\n      opts['scopes'] = staticMembers.scopes;\n    }\n    // Load google-gax module synchronously if needed\n    if (!gaxInstance) {\n      gaxInstance = require('google-gax');\n    }\n    // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n    // Save options to use in initialize() method.\n    this._opts = opts;\n    // Save the auth object to the client, for use by other methods.\n    this.auth = this._gaxGrpc.auth;\n    // Set useJWTAccessWithScope on the auth object.\n    this.auth.useJWTAccessWithScope = true;\n    // Set defaultServicePath on the auth object.\n    this.auth.defaultServicePath = this._servicePath;\n    // Set the default scopes in auth client if needed.\n    if (servicePath === this._servicePath) {\n      this.auth.defaultScopes = staticMembers.scopes;\n    }\n    this.locationsClient = new this._gaxModule.LocationsClient(this._gaxGrpc, opts);\n    // Determine the client header string.\n    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n    if (typeof process === 'object' && 'versions' in process) {\n      clientHeader.push(`gl-node/${process.versions.node}`);\n    } else {\n      clientHeader.push(`gl-web/${this._gaxModule.version}`);\n    }\n    if (!opts.fallback) {\n      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n    } else {\n      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n    }\n    if (opts.libName && opts.libVersion) {\n      clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n    }\n    // Load the applicable protos.\n    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n    // This API contains \"path templates\"; forward-slash-separated\n    // identifiers to uniquely identify resources within the API.\n    // Create useful helper objects for these.\n    this.pathTemplates = {\n      backupPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/backups/{backup}'),\n      backupSchedulePathTemplate: new this._gaxModule.PathTemplate('projects/{project}/databases/{database}/backupSchedules/{backup_schedule}'),\n      collectionGroupPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/databases/{database}/collectionGroups/{collection}'),\n      databasePathTemplate: new this._gaxModule.PathTemplate('projects/{project}/databases/{database}'),\n      fieldPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/databases/{database}/collectionGroups/{collection}/fields/{field}'),\n      indexPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/databases/{database}/collectionGroups/{collection}/indexes/{index}'),\n      locationPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}'),\n      projectPathTemplate: new this._gaxModule.PathTemplate('projects/{project}')\n    };\n    // Some of the methods on this service return \"paged\" results,\n    // (e.g. 50 results at a time, with tokens to get subsequent\n    // pages). Denote the keys used for pagination and results.\n    this.descriptors.page = {\n      listIndexes: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'indexes'),\n      listFields: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'fields')\n    };\n    const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);\n    // This API contains \"long-running operations\", which return a\n    // an Operation object that allows for tracking of the operation,\n    // rather than holding a request open.\n    const lroOptions = {\n      auth: this.auth,\n      grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined\n    };\n    if (opts.fallback) {\n      lroOptions.protoJson = protoFilesRoot;\n      lroOptions.httpRules = [{\n        selector: 'google.longrunning.Operations.CancelOperation',\n        post: '/v1/{name=projects/*/databases/*/operations/*}:cancel',\n        body: '*'\n      }, {\n        selector: 'google.longrunning.Operations.DeleteOperation',\n        delete: '/v1/{name=projects/*/databases/*/operations/*}'\n      }, {\n        selector: 'google.longrunning.Operations.GetOperation',\n        get: '/v1/{name=projects/*/databases/*/operations/*}'\n      }, {\n        selector: 'google.longrunning.Operations.ListOperations',\n        get: '/v1/{name=projects/*/databases/*}/operations'\n      }];\n    }\n    this.operationsClient = this._gaxModule.lro(lroOptions).operationsClient(opts);\n    const createIndexResponse = protoFilesRoot.lookup('.google.firestore.admin.v1.Index');\n    const createIndexMetadata = protoFilesRoot.lookup('.google.firestore.admin.v1.IndexOperationMetadata');\n    const updateFieldResponse = protoFilesRoot.lookup('.google.firestore.admin.v1.Field');\n    const updateFieldMetadata = protoFilesRoot.lookup('.google.firestore.admin.v1.FieldOperationMetadata');\n    const exportDocumentsResponse = protoFilesRoot.lookup('.google.firestore.admin.v1.ExportDocumentsResponse');\n    const exportDocumentsMetadata = protoFilesRoot.lookup('.google.firestore.admin.v1.ExportDocumentsMetadata');\n    const importDocumentsResponse = protoFilesRoot.lookup('.google.protobuf.Empty');\n    const importDocumentsMetadata = protoFilesRoot.lookup('.google.firestore.admin.v1.ImportDocumentsMetadata');\n    const bulkDeleteDocumentsResponse = protoFilesRoot.lookup('.google.firestore.admin.v1.BulkDeleteDocumentsResponse');\n    const bulkDeleteDocumentsMetadata = protoFilesRoot.lookup('.google.firestore.admin.v1.BulkDeleteDocumentsMetadata');\n    const createDatabaseResponse = protoFilesRoot.lookup('.google.firestore.admin.v1.Database');\n    const createDatabaseMetadata = protoFilesRoot.lookup('.google.firestore.admin.v1.CreateDatabaseMetadata');\n    const updateDatabaseResponse = protoFilesRoot.lookup('.google.firestore.admin.v1.Database');\n    const updateDatabaseMetadata = protoFilesRoot.lookup('.google.firestore.admin.v1.UpdateDatabaseMetadata');\n    const deleteDatabaseResponse = protoFilesRoot.lookup('.google.firestore.admin.v1.Database');\n    const deleteDatabaseMetadata = protoFilesRoot.lookup('.google.firestore.admin.v1.DeleteDatabaseMetadata');\n    const restoreDatabaseResponse = protoFilesRoot.lookup('.google.firestore.admin.v1.Database');\n    const restoreDatabaseMetadata = protoFilesRoot.lookup('.google.firestore.admin.v1.RestoreDatabaseMetadata');\n    this.descriptors.longrunning = {\n      createIndex: new this._gaxModule.LongrunningDescriptor(this.operationsClient, createIndexResponse.decode.bind(createIndexResponse), createIndexMetadata.decode.bind(createIndexMetadata)),\n      updateField: new this._gaxModule.LongrunningDescriptor(this.operationsClient, updateFieldResponse.decode.bind(updateFieldResponse), updateFieldMetadata.decode.bind(updateFieldMetadata)),\n      exportDocuments: new this._gaxModule.LongrunningDescriptor(this.operationsClient, exportDocumentsResponse.decode.bind(exportDocumentsResponse), exportDocumentsMetadata.decode.bind(exportDocumentsMetadata)),\n      importDocuments: new this._gaxModule.LongrunningDescriptor(this.operationsClient, importDocumentsResponse.decode.bind(importDocumentsResponse), importDocumentsMetadata.decode.bind(importDocumentsMetadata)),\n      bulkDeleteDocuments: new this._gaxModule.LongrunningDescriptor(this.operationsClient, bulkDeleteDocumentsResponse.decode.bind(bulkDeleteDocumentsResponse), bulkDeleteDocumentsMetadata.decode.bind(bulkDeleteDocumentsMetadata)),\n      createDatabase: new this._gaxModule.LongrunningDescriptor(this.operationsClient, createDatabaseResponse.decode.bind(createDatabaseResponse), createDatabaseMetadata.decode.bind(createDatabaseMetadata)),\n      updateDatabase: new this._gaxModule.LongrunningDescriptor(this.operationsClient, updateDatabaseResponse.decode.bind(updateDatabaseResponse), updateDatabaseMetadata.decode.bind(updateDatabaseMetadata)),\n      deleteDatabase: new this._gaxModule.LongrunningDescriptor(this.operationsClient, deleteDatabaseResponse.decode.bind(deleteDatabaseResponse), deleteDatabaseMetadata.decode.bind(deleteDatabaseMetadata)),\n      restoreDatabase: new this._gaxModule.LongrunningDescriptor(this.operationsClient, restoreDatabaseResponse.decode.bind(restoreDatabaseResponse), restoreDatabaseMetadata.decode.bind(restoreDatabaseMetadata))\n    };\n    // Put together the default options sent with requests.\n    this._defaults = this._gaxGrpc.constructSettings('google.firestore.admin.v1.FirestoreAdmin', gapicConfig, opts.clientConfig || {}, {\n      'x-goog-api-client': clientHeader.join(' ')\n    });\n    // Set up a dictionary of \"inner API calls\"; the core implementation\n    // of calling the API is handled in `google-gax`, with this code\n    // merely providing the destination and request information.\n    this.innerApiCalls = {};\n    // Add a warn function to the client constructor so it can be easily tested.\n    this.warn = this._gaxModule.warn;\n  }\n  /**\r\n   * Initialize the client.\r\n   * Performs asynchronous operations (such as authentication) and prepares the client.\r\n   * This function will be called automatically when any class method is called for the\r\n   * first time, but if you need to initialize it before calling an actual method,\r\n   * feel free to call initialize() directly.\r\n   *\r\n   * You can await on this method if you want to make sure the client is initialized.\r\n   *\r\n   * @returns {Promise} A promise that resolves to an authenticated service stub.\r\n   */\n  initialize() {\n    // If the client stub promise is already initialized, return immediately.\n    if (this.firestoreAdminStub) {\n      return this.firestoreAdminStub;\n    }\n    // Put together the \"service stub\" for\n    // google.firestore.admin.v1.FirestoreAdmin.\n    this.firestoreAdminStub = this._gaxGrpc.createStub(this._opts.fallback ? this._protos.lookupService('google.firestore.admin.v1.FirestoreAdmin') :\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this._protos.google.firestore.admin.v1.FirestoreAdmin, this._opts, this._providedCustomServicePath);\n    // Iterate over each of the methods that the service provides\n    // and create an API call method for each.\n    const firestoreAdminStubMethods = ['createIndex', 'listIndexes', 'getIndex', 'deleteIndex', 'getField', 'updateField', 'listFields', 'exportDocuments', 'importDocuments', 'bulkDeleteDocuments', 'createDatabase', 'getDatabase', 'listDatabases', 'updateDatabase', 'deleteDatabase', 'getBackup', 'listBackups', 'deleteBackup', 'restoreDatabase', 'createBackupSchedule', 'getBackupSchedule', 'listBackupSchedules', 'updateBackupSchedule', 'deleteBackupSchedule'];\n    for (const methodName of firestoreAdminStubMethods) {\n      const callPromise = this.firestoreAdminStub.then(stub => (...args) => {\n        if (this._terminated) {\n          return Promise.reject('The client has already been closed.');\n        }\n        const func = stub[methodName];\n        return func.apply(stub, args);\n      }, err => () => {\n        throw err;\n      });\n      const descriptor = this.descriptors.page[methodName] || this.descriptors.longrunning[methodName] || undefined;\n      const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n      this.innerApiCalls[methodName] = apiCall;\n    }\n    return this.firestoreAdminStub;\n  }\n  /**\r\n   * The DNS address for this API service.\r\n   * @deprecated Use the apiEndpoint method of the client instance.\r\n   * @returns {string} The DNS address for this service.\r\n   */\n  static get servicePath() {\n    if (typeof process === 'object' && typeof process.emitWarning === 'function') {\n      process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\n    }\n    return 'firestore.googleapis.com';\n  }\n  /**\r\n   * The DNS address for this API service - same as servicePath.\r\n   * @deprecated Use the apiEndpoint method of the client instance.\r\n   * @returns {string} The DNS address for this service.\r\n   */\n  static get apiEndpoint() {\n    if (typeof process === 'object' && typeof process.emitWarning === 'function') {\n      process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\n    }\n    return 'firestore.googleapis.com';\n  }\n  /**\r\n   * The DNS address for this API service.\r\n   * @returns {string} The DNS address for this service.\r\n   */\n  get apiEndpoint() {\n    return this._servicePath;\n  }\n  get universeDomain() {\n    return this._universeDomain;\n  }\n  /**\r\n   * The port for this API service.\r\n   * @returns {number} The default port for this service.\r\n   */\n  static get port() {\n    return 443;\n  }\n  /**\r\n   * The scopes needed to make gRPC calls for every method defined\r\n   * in this service.\r\n   * @returns {string[]} List of default scopes.\r\n   */\n  static get scopes() {\n    return ['https://www.googleapis.com/auth/cloud-platform', 'https://www.googleapis.com/auth/datastore'];\n  }\n  /**\r\n   * Return the project ID used by this class.\r\n   * @returns {Promise} A promise that resolves to string containing the project ID.\r\n   */\n  getProjectId(callback) {\n    if (callback) {\n      this.auth.getProjectId(callback);\n      return;\n    }\n    return this.auth.getProjectId();\n  }\n  getIndex(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getIndex(request, options, callback);\n  }\n  deleteIndex(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.deleteIndex(request, options, callback);\n  }\n  getField(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getField(request, options, callback);\n  }\n  getDatabase(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getDatabase(request, options, callback);\n  }\n  listDatabases(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listDatabases(request, options, callback);\n  }\n  getBackup(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getBackup(request, options, callback);\n  }\n  listBackups(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listBackups(request, options, callback);\n  }\n  deleteBackup(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.deleteBackup(request, options, callback);\n  }\n  createBackupSchedule(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.createBackupSchedule(request, options, callback);\n  }\n  getBackupSchedule(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getBackupSchedule(request, options, callback);\n  }\n  listBackupSchedules(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listBackupSchedules(request, options, callback);\n  }\n  updateBackupSchedule(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      'backup_schedule.name': (_a = request.backupSchedule.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.updateBackupSchedule(request, options, callback);\n  }\n  deleteBackupSchedule(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.deleteBackupSchedule(request, options, callback);\n  }\n  createIndex(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.createIndex(request, options, callback);\n  }\n  /**\r\n   * Check the status of the long running operation returned by `createIndex()`.\r\n   * @param {String} name\r\n   *   The operation name that will be passed.\r\n   * @returns {Promise} - The promise which resolves to an object.\r\n   *   The decoded operation object has result and metadata field to get information from.\r\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\r\n   *   for more details and examples.\r\n   * @example <caption>include:samples/generated/v1/firestore_admin.create_index.js</caption>\r\n   * region_tag:firestore_v1_generated_FirestoreAdmin_CreateIndex_async\r\n   */\n  async checkCreateIndexProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.createIndex, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  updateField(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      'field.name': (_a = request.field.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.updateField(request, options, callback);\n  }\n  /**\r\n   * Check the status of the long running operation returned by `updateField()`.\r\n   * @param {String} name\r\n   *   The operation name that will be passed.\r\n   * @returns {Promise} - The promise which resolves to an object.\r\n   *   The decoded operation object has result and metadata field to get information from.\r\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\r\n   *   for more details and examples.\r\n   * @example <caption>include:samples/generated/v1/firestore_admin.update_field.js</caption>\r\n   * region_tag:firestore_v1_generated_FirestoreAdmin_UpdateField_async\r\n   */\n  async checkUpdateFieldProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.updateField, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  exportDocuments(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.exportDocuments(request, options, callback);\n  }\n  /**\r\n   * Check the status of the long running operation returned by `exportDocuments()`.\r\n   * @param {String} name\r\n   *   The operation name that will be passed.\r\n   * @returns {Promise} - The promise which resolves to an object.\r\n   *   The decoded operation object has result and metadata field to get information from.\r\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\r\n   *   for more details and examples.\r\n   * @example <caption>include:samples/generated/v1/firestore_admin.export_documents.js</caption>\r\n   * region_tag:firestore_v1_generated_FirestoreAdmin_ExportDocuments_async\r\n   */\n  async checkExportDocumentsProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.exportDocuments, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  importDocuments(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.importDocuments(request, options, callback);\n  }\n  /**\r\n   * Check the status of the long running operation returned by `importDocuments()`.\r\n   * @param {String} name\r\n   *   The operation name that will be passed.\r\n   * @returns {Promise} - The promise which resolves to an object.\r\n   *   The decoded operation object has result and metadata field to get information from.\r\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\r\n   *   for more details and examples.\r\n   * @example <caption>include:samples/generated/v1/firestore_admin.import_documents.js</caption>\r\n   * region_tag:firestore_v1_generated_FirestoreAdmin_ImportDocuments_async\r\n   */\n  async checkImportDocumentsProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.importDocuments, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  bulkDeleteDocuments(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.bulkDeleteDocuments(request, options, callback);\n  }\n  /**\r\n   * Check the status of the long running operation returned by `bulkDeleteDocuments()`.\r\n   * @param {String} name\r\n   *   The operation name that will be passed.\r\n   * @returns {Promise} - The promise which resolves to an object.\r\n   *   The decoded operation object has result and metadata field to get information from.\r\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\r\n   *   for more details and examples.\r\n   * @example <caption>include:samples/generated/v1/firestore_admin.bulk_delete_documents.js</caption>\r\n   * region_tag:firestore_v1_generated_FirestoreAdmin_BulkDeleteDocuments_async\r\n   */\n  async checkBulkDeleteDocumentsProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.bulkDeleteDocuments, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  createDatabase(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.createDatabase(request, options, callback);\n  }\n  /**\r\n   * Check the status of the long running operation returned by `createDatabase()`.\r\n   * @param {String} name\r\n   *   The operation name that will be passed.\r\n   * @returns {Promise} - The promise which resolves to an object.\r\n   *   The decoded operation object has result and metadata field to get information from.\r\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\r\n   *   for more details and examples.\r\n   * @example <caption>include:samples/generated/v1/firestore_admin.create_database.js</caption>\r\n   * region_tag:firestore_v1_generated_FirestoreAdmin_CreateDatabase_async\r\n   */\n  async checkCreateDatabaseProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.createDatabase, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  updateDatabase(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      'database.name': (_a = request.database.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.updateDatabase(request, options, callback);\n  }\n  /**\r\n   * Check the status of the long running operation returned by `updateDatabase()`.\r\n   * @param {String} name\r\n   *   The operation name that will be passed.\r\n   * @returns {Promise} - The promise which resolves to an object.\r\n   *   The decoded operation object has result and metadata field to get information from.\r\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\r\n   *   for more details and examples.\r\n   * @example <caption>include:samples/generated/v1/firestore_admin.update_database.js</caption>\r\n   * region_tag:firestore_v1_generated_FirestoreAdmin_UpdateDatabase_async\r\n   */\n  async checkUpdateDatabaseProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.updateDatabase, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  deleteDatabase(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.deleteDatabase(request, options, callback);\n  }\n  /**\r\n   * Check the status of the long running operation returned by `deleteDatabase()`.\r\n   * @param {String} name\r\n   *   The operation name that will be passed.\r\n   * @returns {Promise} - The promise which resolves to an object.\r\n   *   The decoded operation object has result and metadata field to get information from.\r\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\r\n   *   for more details and examples.\r\n   * @example <caption>include:samples/generated/v1/firestore_admin.delete_database.js</caption>\r\n   * region_tag:firestore_v1_generated_FirestoreAdmin_DeleteDatabase_async\r\n   */\n  async checkDeleteDatabaseProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.deleteDatabase, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  restoreDatabase(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.restoreDatabase(request, options, callback);\n  }\n  /**\r\n   * Check the status of the long running operation returned by `restoreDatabase()`.\r\n   * @param {String} name\r\n   *   The operation name that will be passed.\r\n   * @returns {Promise} - The promise which resolves to an object.\r\n   *   The decoded operation object has result and metadata field to get information from.\r\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\r\n   *   for more details and examples.\r\n   * @example <caption>include:samples/generated/v1/firestore_admin.restore_database.js</caption>\r\n   * region_tag:firestore_v1_generated_FirestoreAdmin_RestoreDatabase_async\r\n   */\n  async checkRestoreDatabaseProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.restoreDatabase, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  listIndexes(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listIndexes(request, options, callback);\n  }\n  /**\r\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\r\n   * @param {Object} request\r\n   *   The request object that will be sent.\r\n   * @param {string} request.parent\r\n   *   Required. A parent name of the form\r\n   *   `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`\r\n   * @param {string} request.filter\r\n   *   The filter to apply to list results.\r\n   * @param {number} request.pageSize\r\n   *   The number of results to return.\r\n   * @param {string} request.pageToken\r\n   *   A page token, returned from a previous call to\r\n   *   {@link protos.google.firestore.admin.v1.FirestoreAdmin.ListIndexes|FirestoreAdmin.ListIndexes},\r\n   *   that may be used to get the next page of results.\r\n   * @param {object} [options]\r\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\r\n   * @returns {Stream}\r\n   *   An object stream which emits an object representing {@link protos.google.firestore.admin.v1.Index|Index} on 'data' event.\r\n   *   The client library will perform auto-pagination by default: it will call the API as many\r\n   *   times as needed. Note that it can affect your quota.\r\n   *   We recommend using `listIndexesAsync()`\r\n   *   method described below for async iteration which you can stop as needed.\r\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\r\n   *   for more details and examples.\r\n   */\n  listIndexesStream(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listIndexes'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listIndexes.createStream(this.innerApiCalls.listIndexes, request, callSettings);\n  }\n  /**\r\n   * Equivalent to `listIndexes`, but returns an iterable object.\r\n   *\r\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\r\n   * @param {Object} request\r\n   *   The request object that will be sent.\r\n   * @param {string} request.parent\r\n   *   Required. A parent name of the form\r\n   *   `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`\r\n   * @param {string} request.filter\r\n   *   The filter to apply to list results.\r\n   * @param {number} request.pageSize\r\n   *   The number of results to return.\r\n   * @param {string} request.pageToken\r\n   *   A page token, returned from a previous call to\r\n   *   {@link protos.google.firestore.admin.v1.FirestoreAdmin.ListIndexes|FirestoreAdmin.ListIndexes},\r\n   *   that may be used to get the next page of results.\r\n   * @param {object} [options]\r\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\r\n   * @returns {Object}\r\n   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\r\n   *   When you iterate the returned iterable, each element will be an object representing\r\n   *   {@link protos.google.firestore.admin.v1.Index|Index}. The API will be called under the hood as needed, once per the page,\r\n   *   so you can stop the iteration when you don't need more results.\r\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\r\n   *   for more details and examples.\r\n   * @example <caption>include:samples/generated/v1/firestore_admin.list_indexes.js</caption>\r\n   * region_tag:firestore_v1_generated_FirestoreAdmin_ListIndexes_async\r\n   */\n  listIndexesAsync(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listIndexes'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listIndexes.asyncIterate(this.innerApiCalls['listIndexes'], request, callSettings);\n  }\n  listFields(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listFields(request, options, callback);\n  }\n  /**\r\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\r\n   * @param {Object} request\r\n   *   The request object that will be sent.\r\n   * @param {string} request.parent\r\n   *   Required. A parent name of the form\r\n   *   `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`\r\n   * @param {string} request.filter\r\n   *   The filter to apply to list results. Currently,\r\n   *   {@link protos.google.firestore.admin.v1.FirestoreAdmin.ListFields|FirestoreAdmin.ListFields}\r\n   *   only supports listing fields that have been explicitly overridden. To issue\r\n   *   this query, call\r\n   *   {@link protos.google.firestore.admin.v1.FirestoreAdmin.ListFields|FirestoreAdmin.ListFields}\r\n   *   with a filter that includes `indexConfig.usesAncestorConfig:false` or\r\n   *   `ttlConfig:*`.\r\n   * @param {number} request.pageSize\r\n   *   The number of results to return.\r\n   * @param {string} request.pageToken\r\n   *   A page token, returned from a previous call to\r\n   *   {@link protos.google.firestore.admin.v1.FirestoreAdmin.ListFields|FirestoreAdmin.ListFields},\r\n   *   that may be used to get the next page of results.\r\n   * @param {object} [options]\r\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\r\n   * @returns {Stream}\r\n   *   An object stream which emits an object representing {@link protos.google.firestore.admin.v1.Field|Field} on 'data' event.\r\n   *   The client library will perform auto-pagination by default: it will call the API as many\r\n   *   times as needed. Note that it can affect your quota.\r\n   *   We recommend using `listFieldsAsync()`\r\n   *   method described below for async iteration which you can stop as needed.\r\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\r\n   *   for more details and examples.\r\n   */\n  listFieldsStream(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listFields'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listFields.createStream(this.innerApiCalls.listFields, request, callSettings);\n  }\n  /**\r\n   * Equivalent to `listFields`, but returns an iterable object.\r\n   *\r\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\r\n   * @param {Object} request\r\n   *   The request object that will be sent.\r\n   * @param {string} request.parent\r\n   *   Required. A parent name of the form\r\n   *   `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`\r\n   * @param {string} request.filter\r\n   *   The filter to apply to list results. Currently,\r\n   *   {@link protos.google.firestore.admin.v1.FirestoreAdmin.ListFields|FirestoreAdmin.ListFields}\r\n   *   only supports listing fields that have been explicitly overridden. To issue\r\n   *   this query, call\r\n   *   {@link protos.google.firestore.admin.v1.FirestoreAdmin.ListFields|FirestoreAdmin.ListFields}\r\n   *   with a filter that includes `indexConfig.usesAncestorConfig:false` or\r\n   *   `ttlConfig:*`.\r\n   * @param {number} request.pageSize\r\n   *   The number of results to return.\r\n   * @param {string} request.pageToken\r\n   *   A page token, returned from a previous call to\r\n   *   {@link protos.google.firestore.admin.v1.FirestoreAdmin.ListFields|FirestoreAdmin.ListFields},\r\n   *   that may be used to get the next page of results.\r\n   * @param {object} [options]\r\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\r\n   * @returns {Object}\r\n   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\r\n   *   When you iterate the returned iterable, each element will be an object representing\r\n   *   {@link protos.google.firestore.admin.v1.Field|Field}. The API will be called under the hood as needed, once per the page,\r\n   *   so you can stop the iteration when you don't need more results.\r\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\r\n   *   for more details and examples.\r\n   * @example <caption>include:samples/generated/v1/firestore_admin.list_fields.js</caption>\r\n   * region_tag:firestore_v1_generated_FirestoreAdmin_ListFields_async\r\n   */\n  listFieldsAsync(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listFields'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listFields.asyncIterate(this.innerApiCalls['listFields'], request, callSettings);\n  }\n  /**\r\n   * Gets information about a location.\r\n   *\r\n   * @param {Object} request\r\n   *   The request object that will be sent.\r\n   * @param {string} request.name\r\n   *   Resource name for the location.\r\n   * @param {object} [options]\r\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html | CallOptions} for more details.\r\n   * @returns {Promise} - The promise which resolves to an array.\r\n   *   The first element of the array is an object representing {@link google.cloud.location.Location | Location}.\r\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }\r\n   *   for more details and examples.\r\n   * @example\r\n   * ```\r\n   * const [response] = await client.getLocation(request);\r\n   * ```\r\n   */\n  getLocation(request, options, callback) {\n    return this.locationsClient.getLocation(request, options, callback);\n  }\n  /**\r\n   * Lists information about the supported locations for this service. Returns an iterable object.\r\n   *\r\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\r\n   * @param {Object} request\r\n   *   The request object that will be sent.\r\n   * @param {string} request.name\r\n   *   The resource that owns the locations collection, if applicable.\r\n   * @param {string} request.filter\r\n   *   The standard list filter.\r\n   * @param {number} request.pageSize\r\n   *   The standard list page size.\r\n   * @param {string} request.pageToken\r\n   *   The standard list page token.\r\n   * @param {object} [options]\r\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\r\n   * @returns {Object}\r\n   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\r\n   *   When you iterate the returned iterable, each element will be an object representing\r\n   *   {@link google.cloud.location.Location | Location}. The API will be called under the hood as needed, once per the page,\r\n   *   so you can stop the iteration when you don't need more results.\r\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\r\n   *   for more details and examples.\r\n   * @example\r\n   * ```\r\n   * const iterable = client.listLocationsAsync(request);\r\n   * for await (const response of iterable) {\r\n   *   // process response\r\n   * }\r\n   * ```\r\n   */\n  listLocationsAsync(request, options) {\n    return this.locationsClient.listLocationsAsync(request, options);\n  }\n  /**\r\n   * Gets the latest state of a long-running operation.  Clients can use this\r\n   * method to poll the operation result at intervals as recommended by the API\r\n   * service.\r\n   *\r\n   * @param {Object} request - The request object that will be sent.\r\n   * @param {string} request.name - The name of the operation resource.\r\n   * @param {Object=} options\r\n   *   Optional parameters. You can override the default settings for this call,\r\n   *   e.g, timeout, retries, paginations, etc. See {@link\r\n   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\r\n   *   for the details.\r\n   * @param {function(?Error, ?Object)=} callback\r\n   *   The function which will be called with the result of the API call.\r\n   *\r\n   *   The second parameter to the callback is an object representing\r\n   *   {@link google.longrunning.Operation | google.longrunning.Operation}.\r\n   * @return {Promise} - The promise which resolves to an array.\r\n   *   The first element of the array is an object representing\r\n   * {@link google.longrunning.Operation | google.longrunning.Operation}.\r\n   * The promise has a method named \"cancel\" which cancels the ongoing API call.\r\n   *\r\n   * @example\r\n   * ```\r\n   * const client = longrunning.operationsClient();\r\n   * const name = '';\r\n   * const [response] = await client.getOperation({name});\r\n   * // doThingsWith(response)\r\n   * ```\r\n   */\n  getOperation(request, options, callback) {\n    return this.operationsClient.getOperation(request, options, callback);\n  }\n  /**\r\n   * Lists operations that match the specified filter in the request. If the\r\n   * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.\r\n   *\r\n   * For-await-of syntax is used with the iterable to recursively get response element on-demand.\r\n   *\r\n   * @param {Object} request - The request object that will be sent.\r\n   * @param {string} request.name - The name of the operation collection.\r\n   * @param {string} request.filter - The standard list filter.\r\n   * @param {number=} request.pageSize -\r\n   *   The maximum number of resources contained in the underlying API\r\n   *   response. If page streaming is performed per-resource, this\r\n   *   parameter does not affect the return value. If page streaming is\r\n   *   performed per-page, this determines the maximum number of\r\n   *   resources in a page.\r\n   * @param {Object=} options\r\n   *   Optional parameters. You can override the default settings for this call,\r\n   *   e.g, timeout, retries, paginations, etc. See {@link\r\n   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\r\n   *   details.\r\n   * @returns {Object}\r\n   *   An iterable Object that conforms to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | iteration protocols}.\r\n   *\r\n   * @example\r\n   * ```\r\n   * const client = longrunning.operationsClient();\r\n   * for await (const response of client.listOperationsAsync(request));\r\n   * // doThingsWith(response)\r\n   * ```\r\n   */\n  listOperationsAsync(request, options) {\n    return this.operationsClient.listOperationsAsync(request, options);\n  }\n  /**\r\n   * Starts asynchronous cancellation on a long-running operation.  The server\r\n   * makes a best effort to cancel the operation, but success is not\r\n   * guaranteed.  If the server doesn't support this method, it returns\r\n   * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use\r\n   * {@link Operations.GetOperation} or\r\n   * other methods to check whether the cancellation succeeded or whether the\r\n   * operation completed despite cancellation. On successful cancellation,\r\n   * the operation is not deleted; instead, it becomes an operation with\r\n   * an {@link Operation.error} value with a {@link google.rpc.Status.code} of\r\n   * 1, corresponding to `Code.CANCELLED`.\r\n   *\r\n   * @param {Object} request - The request object that will be sent.\r\n   * @param {string} request.name - The name of the operation resource to be cancelled.\r\n   * @param {Object=} options\r\n   *   Optional parameters. You can override the default settings for this call,\r\n   * e.g, timeout, retries, paginations, etc. See {@link\r\n   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\r\n   * details.\r\n   * @param {function(?Error)=} callback\r\n   *   The function which will be called with the result of the API call.\r\n   * @return {Promise} - The promise which resolves when API call finishes.\r\n   *   The promise has a method named \"cancel\" which cancels the ongoing API\r\n   * call.\r\n   *\r\n   * @example\r\n   * ```\r\n   * const client = longrunning.operationsClient();\r\n   * await client.cancelOperation({name: ''});\r\n   * ```\r\n   */\n  cancelOperation(request, options, callback) {\n    return this.operationsClient.cancelOperation(request, options, callback);\n  }\n  /**\r\n   * Deletes a long-running operation. This method indicates that the client is\r\n   * no longer interested in the operation result. It does not cancel the\r\n   * operation. If the server doesn't support this method, it returns\r\n   * `google.rpc.Code.UNIMPLEMENTED`.\r\n   *\r\n   * @param {Object} request - The request object that will be sent.\r\n   * @param {string} request.name - The name of the operation resource to be deleted.\r\n   * @param {Object=} options\r\n   *   Optional parameters. You can override the default settings for this call,\r\n   * e.g, timeout, retries, paginations, etc. See {@link\r\n   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\r\n   * for the details.\r\n   * @param {function(?Error)=} callback\r\n   *   The function which will be called with the result of the API call.\r\n   * @return {Promise} - The promise which resolves when API call finishes.\r\n   *   The promise has a method named \"cancel\" which cancels the ongoing API\r\n   * call.\r\n   *\r\n   * @example\r\n   * ```\r\n   * const client = longrunning.operationsClient();\r\n   * await client.deleteOperation({name: ''});\r\n   * ```\r\n   */\n  deleteOperation(request, options, callback) {\n    return this.operationsClient.deleteOperation(request, options, callback);\n  }\n  // --------------------\n  // -- Path templates --\n  // --------------------\n  /**\r\n   * Return a fully-qualified backup resource name string.\r\n   *\r\n   * @param {string} project\r\n   * @param {string} location\r\n   * @param {string} backup\r\n   * @returns {string} Resource name string.\r\n   */\n  backupPath(project, location, backup) {\n    return this.pathTemplates.backupPathTemplate.render({\n      project: project,\n      location: location,\n      backup: backup\n    });\n  }\n  /**\r\n   * Parse the project from Backup resource.\r\n   *\r\n   * @param {string} backupName\r\n   *   A fully-qualified path representing Backup resource.\r\n   * @returns {string} A string representing the project.\r\n   */\n  matchProjectFromBackupName(backupName) {\n    return this.pathTemplates.backupPathTemplate.match(backupName).project;\n  }\n  /**\r\n   * Parse the location from Backup resource.\r\n   *\r\n   * @param {string} backupName\r\n   *   A fully-qualified path representing Backup resource.\r\n   * @returns {string} A string representing the location.\r\n   */\n  matchLocationFromBackupName(backupName) {\n    return this.pathTemplates.backupPathTemplate.match(backupName).location;\n  }\n  /**\r\n   * Parse the backup from Backup resource.\r\n   *\r\n   * @param {string} backupName\r\n   *   A fully-qualified path representing Backup resource.\r\n   * @returns {string} A string representing the backup.\r\n   */\n  matchBackupFromBackupName(backupName) {\n    return this.pathTemplates.backupPathTemplate.match(backupName).backup;\n  }\n  /**\r\n   * Return a fully-qualified backupSchedule resource name string.\r\n   *\r\n   * @param {string} project\r\n   * @param {string} database\r\n   * @param {string} backup_schedule\r\n   * @returns {string} Resource name string.\r\n   */\n  backupSchedulePath(project, database, backupSchedule) {\n    return this.pathTemplates.backupSchedulePathTemplate.render({\n      project: project,\n      database: database,\n      backup_schedule: backupSchedule\n    });\n  }\n  /**\r\n   * Parse the project from BackupSchedule resource.\r\n   *\r\n   * @param {string} backupScheduleName\r\n   *   A fully-qualified path representing BackupSchedule resource.\r\n   * @returns {string} A string representing the project.\r\n   */\n  matchProjectFromBackupScheduleName(backupScheduleName) {\n    return this.pathTemplates.backupSchedulePathTemplate.match(backupScheduleName).project;\n  }\n  /**\r\n   * Parse the database from BackupSchedule resource.\r\n   *\r\n   * @param {string} backupScheduleName\r\n   *   A fully-qualified path representing BackupSchedule resource.\r\n   * @returns {string} A string representing the database.\r\n   */\n  matchDatabaseFromBackupScheduleName(backupScheduleName) {\n    return this.pathTemplates.backupSchedulePathTemplate.match(backupScheduleName).database;\n  }\n  /**\r\n   * Parse the backup_schedule from BackupSchedule resource.\r\n   *\r\n   * @param {string} backupScheduleName\r\n   *   A fully-qualified path representing BackupSchedule resource.\r\n   * @returns {string} A string representing the backup_schedule.\r\n   */\n  matchBackupScheduleFromBackupScheduleName(backupScheduleName) {\n    return this.pathTemplates.backupSchedulePathTemplate.match(backupScheduleName).backup_schedule;\n  }\n  /**\r\n   * Return a fully-qualified collectionGroup resource name string.\r\n   *\r\n   * @param {string} project\r\n   * @param {string} database\r\n   * @param {string} collection\r\n   * @returns {string} Resource name string.\r\n   */\n  collectionGroupPath(project, database, collection) {\n    return this.pathTemplates.collectionGroupPathTemplate.render({\n      project: project,\n      database: database,\n      collection: collection\n    });\n  }\n  /**\r\n   * Parse the project from CollectionGroup resource.\r\n   *\r\n   * @param {string} collectionGroupName\r\n   *   A fully-qualified path representing CollectionGroup resource.\r\n   * @returns {string} A string representing the project.\r\n   */\n  matchProjectFromCollectionGroupName(collectionGroupName) {\n    return this.pathTemplates.collectionGroupPathTemplate.match(collectionGroupName).project;\n  }\n  /**\r\n   * Parse the database from CollectionGroup resource.\r\n   *\r\n   * @param {string} collectionGroupName\r\n   *   A fully-qualified path representing CollectionGroup resource.\r\n   * @returns {string} A string representing the database.\r\n   */\n  matchDatabaseFromCollectionGroupName(collectionGroupName) {\n    return this.pathTemplates.collectionGroupPathTemplate.match(collectionGroupName).database;\n  }\n  /**\r\n   * Parse the collection from CollectionGroup resource.\r\n   *\r\n   * @param {string} collectionGroupName\r\n   *   A fully-qualified path representing CollectionGroup resource.\r\n   * @returns {string} A string representing the collection.\r\n   */\n  matchCollectionFromCollectionGroupName(collectionGroupName) {\n    return this.pathTemplates.collectionGroupPathTemplate.match(collectionGroupName).collection;\n  }\n  /**\r\n   * Return a fully-qualified database resource name string.\r\n   *\r\n   * @param {string} project\r\n   * @param {string} database\r\n   * @returns {string} Resource name string.\r\n   */\n  databasePath(project, database) {\n    return this.pathTemplates.databasePathTemplate.render({\n      project: project,\n      database: database\n    });\n  }\n  /**\r\n   * Parse the project from Database resource.\r\n   *\r\n   * @param {string} databaseName\r\n   *   A fully-qualified path representing Database resource.\r\n   * @returns {string} A string representing the project.\r\n   */\n  matchProjectFromDatabaseName(databaseName) {\n    return this.pathTemplates.databasePathTemplate.match(databaseName).project;\n  }\n  /**\r\n   * Parse the database from Database resource.\r\n   *\r\n   * @param {string} databaseName\r\n   *   A fully-qualified path representing Database resource.\r\n   * @returns {string} A string representing the database.\r\n   */\n  matchDatabaseFromDatabaseName(databaseName) {\n    return this.pathTemplates.databasePathTemplate.match(databaseName).database;\n  }\n  /**\r\n   * Return a fully-qualified field resource name string.\r\n   *\r\n   * @param {string} project\r\n   * @param {string} database\r\n   * @param {string} collection\r\n   * @param {string} field\r\n   * @returns {string} Resource name string.\r\n   */\n  fieldPath(project, database, collection, field) {\n    return this.pathTemplates.fieldPathTemplate.render({\n      project: project,\n      database: database,\n      collection: collection,\n      field: field\n    });\n  }\n  /**\r\n   * Parse the project from Field resource.\r\n   *\r\n   * @param {string} fieldName\r\n   *   A fully-qualified path representing Field resource.\r\n   * @returns {string} A string representing the project.\r\n   */\n  matchProjectFromFieldName(fieldName) {\n    return this.pathTemplates.fieldPathTemplate.match(fieldName).project;\n  }\n  /**\r\n   * Parse the database from Field resource.\r\n   *\r\n   * @param {string} fieldName\r\n   *   A fully-qualified path representing Field resource.\r\n   * @returns {string} A string representing the database.\r\n   */\n  matchDatabaseFromFieldName(fieldName) {\n    return this.pathTemplates.fieldPathTemplate.match(fieldName).database;\n  }\n  /**\r\n   * Parse the collection from Field resource.\r\n   *\r\n   * @param {string} fieldName\r\n   *   A fully-qualified path representing Field resource.\r\n   * @returns {string} A string representing the collection.\r\n   */\n  matchCollectionFromFieldName(fieldName) {\n    return this.pathTemplates.fieldPathTemplate.match(fieldName).collection;\n  }\n  /**\r\n   * Parse the field from Field resource.\r\n   *\r\n   * @param {string} fieldName\r\n   *   A fully-qualified path representing Field resource.\r\n   * @returns {string} A string representing the field.\r\n   */\n  matchFieldFromFieldName(fieldName) {\n    return this.pathTemplates.fieldPathTemplate.match(fieldName).field;\n  }\n  /**\r\n   * Return a fully-qualified index resource name string.\r\n   *\r\n   * @param {string} project\r\n   * @param {string} database\r\n   * @param {string} collection\r\n   * @param {string} index\r\n   * @returns {string} Resource name string.\r\n   */\n  indexPath(project, database, collection, index) {\n    return this.pathTemplates.indexPathTemplate.render({\n      project: project,\n      database: database,\n      collection: collection,\n      index: index\n    });\n  }\n  /**\r\n   * Parse the project from Index resource.\r\n   *\r\n   * @param {string} indexName\r\n   *   A fully-qualified path representing Index resource.\r\n   * @returns {string} A string representing the project.\r\n   */\n  matchProjectFromIndexName(indexName) {\n    return this.pathTemplates.indexPathTemplate.match(indexName).project;\n  }\n  /**\r\n   * Parse the database from Index resource.\r\n   *\r\n   * @param {string} indexName\r\n   *   A fully-qualified path representing Index resource.\r\n   * @returns {string} A string representing the database.\r\n   */\n  matchDatabaseFromIndexName(indexName) {\n    return this.pathTemplates.indexPathTemplate.match(indexName).database;\n  }\n  /**\r\n   * Parse the collection from Index resource.\r\n   *\r\n   * @param {string} indexName\r\n   *   A fully-qualified path representing Index resource.\r\n   * @returns {string} A string representing the collection.\r\n   */\n  matchCollectionFromIndexName(indexName) {\n    return this.pathTemplates.indexPathTemplate.match(indexName).collection;\n  }\n  /**\r\n   * Parse the index from Index resource.\r\n   *\r\n   * @param {string} indexName\r\n   *   A fully-qualified path representing Index resource.\r\n   * @returns {string} A string representing the index.\r\n   */\n  matchIndexFromIndexName(indexName) {\n    return this.pathTemplates.indexPathTemplate.match(indexName).index;\n  }\n  /**\r\n   * Return a fully-qualified location resource name string.\r\n   *\r\n   * @param {string} project\r\n   * @param {string} location\r\n   * @returns {string} Resource name string.\r\n   */\n  locationPath(project, location) {\n    return this.pathTemplates.locationPathTemplate.render({\n      project: project,\n      location: location\n    });\n  }\n  /**\r\n   * Parse the project from Location resource.\r\n   *\r\n   * @param {string} locationName\r\n   *   A fully-qualified path representing Location resource.\r\n   * @returns {string} A string representing the project.\r\n   */\n  matchProjectFromLocationName(locationName) {\n    return this.pathTemplates.locationPathTemplate.match(locationName).project;\n  }\n  /**\r\n   * Parse the location from Location resource.\r\n   *\r\n   * @param {string} locationName\r\n   *   A fully-qualified path representing Location resource.\r\n   * @returns {string} A string representing the location.\r\n   */\n  matchLocationFromLocationName(locationName) {\n    return this.pathTemplates.locationPathTemplate.match(locationName).location;\n  }\n  /**\r\n   * Return a fully-qualified project resource name string.\r\n   *\r\n   * @param {string} project\r\n   * @returns {string} Resource name string.\r\n   */\n  projectPath(project) {\n    return this.pathTemplates.projectPathTemplate.render({\n      project: project\n    });\n  }\n  /**\r\n   * Parse the project from Project resource.\r\n   *\r\n   * @param {string} projectName\r\n   *   A fully-qualified path representing Project resource.\r\n   * @returns {string} A string representing the project.\r\n   */\n  matchProjectFromProjectName(projectName) {\n    return this.pathTemplates.projectPathTemplate.match(projectName).project;\n  }\n  /**\r\n   * Terminate the gRPC channel and close the client.\r\n   *\r\n   * The client will no longer be usable and all future behavior is undefined.\r\n   * @returns {Promise} A promise that resolves when the client is closed.\r\n   */\n  close() {\n    if (this.firestoreAdminStub && !this._terminated) {\n      return this.firestoreAdminStub.then(stub => {\n        this._terminated = true;\n        stub.close();\n        this.locationsClient.close();\n        this.operationsClient.close();\n      });\n    }\n    return Promise.resolve();\n  }\n}\nexports.FirestoreAdminClient = FirestoreAdminClient;","map":{"version":3,"names":["Object","defineProperty","exports","value","FirestoreAdminClient","jsonProtos","require","gapicConfig","version","constructor","opts","gaxInstance","_a","_b","_c","_d","_e","_terminated","descriptors","page","stream","longrunning","batching","staticMembers","universe_domain","universeDomain","Error","universeDomainEnvVar","process","env","undefined","_universeDomain","_servicePath","servicePath","apiEndpoint","_providedCustomServicePath","port","clientConfig","fallback","window","fetch","assign","numericEnums","scopes","_gaxModule","_gaxGrpc","GrpcClient","_opts","auth","useJWTAccessWithScope","defaultServicePath","defaultScopes","locationsClient","LocationsClient","clientHeader","push","versions","node","grpcVersion","libName","libVersion","_protos","loadProtoJSON","pathTemplates","backupPathTemplate","PathTemplate","backupSchedulePathTemplate","collectionGroupPathTemplate","databasePathTemplate","fieldPathTemplate","indexPathTemplate","locationPathTemplate","projectPathTemplate","listIndexes","PageDescriptor","listFields","protoFilesRoot","protobuf","Root","fromJSON","lroOptions","grpc","protoJson","httpRules","selector","post","body","delete","get","operationsClient","lro","createIndexResponse","lookup","createIndexMetadata","updateFieldResponse","updateFieldMetadata","exportDocumentsResponse","exportDocumentsMetadata","importDocumentsResponse","importDocumentsMetadata","bulkDeleteDocumentsResponse","bulkDeleteDocumentsMetadata","createDatabaseResponse","createDatabaseMetadata","updateDatabaseResponse","updateDatabaseMetadata","deleteDatabaseResponse","deleteDatabaseMetadata","restoreDatabaseResponse","restoreDatabaseMetadata","createIndex","LongrunningDescriptor","decode","bind","updateField","exportDocuments","importDocuments","bulkDeleteDocuments","createDatabase","updateDatabase","deleteDatabase","restoreDatabase","_defaults","constructSettings","join","innerApiCalls","warn","initialize","firestoreAdminStub","createStub","lookupService","google","firestore","admin","v1","FirestoreAdmin","firestoreAdminStubMethods","methodName","callPromise","then","stub","args","Promise","reject","func","apply","err","descriptor","apiCall","createApiCall","emitWarning","getProjectId","callback","getIndex","request","optionsOrCallback","options","otherArgs","headers","routingHeader","fromParams","name","deleteIndex","getField","getDatabase","listDatabases","parent","getBackup","listBackups","deleteBackup","createBackupSchedule","getBackupSchedule","listBackupSchedules","updateBackupSchedule","backupSchedule","deleteBackupSchedule","checkCreateIndexProgress","operationsProtos","GetOperationRequest","operation","getOperation","decodeOperation","Operation","createDefaultBackoffSettings","field","checkUpdateFieldProgress","checkExportDocumentsProgress","checkImportDocumentsProgress","checkBulkDeleteDocumentsProgress","checkCreateDatabaseProgress","database","checkUpdateDatabaseProgress","checkDeleteDatabaseProgress","checkRestoreDatabaseProgress","listIndexesStream","defaultCallSettings","callSettings","merge","createStream","listIndexesAsync","asyncIterate","listFieldsStream","listFieldsAsync","getLocation","listLocationsAsync","listOperationsAsync","cancelOperation","deleteOperation","backupPath","project","location","backup","render","matchProjectFromBackupName","backupName","match","matchLocationFromBackupName","matchBackupFromBackupName","backupSchedulePath","backup_schedule","matchProjectFromBackupScheduleName","backupScheduleName","matchDatabaseFromBackupScheduleName","matchBackupScheduleFromBackupScheduleName","collectionGroupPath","collection","matchProjectFromCollectionGroupName","collectionGroupName","matchDatabaseFromCollectionGroupName","matchCollectionFromCollectionGroupName","databasePath","matchProjectFromDatabaseName","databaseName","matchDatabaseFromDatabaseName","fieldPath","matchProjectFromFieldName","fieldName","matchDatabaseFromFieldName","matchCollectionFromFieldName","matchFieldFromFieldName","indexPath","index","matchProjectFromIndexName","indexName","matchDatabaseFromIndexName","matchCollectionFromIndexName","matchIndexFromIndexName","locationPath","matchProjectFromLocationName","locationName","matchLocationFromLocationName","projectPath","matchProjectFromProjectName","projectName","close","resolve"],"sources":["C:/Users/yujir/Documents/ynov/app pwa/mypwafinal/my-pwa/node_modules/@google-cloud/firestore/build/src/v1/firestore_admin_client.js"],"sourcesContent":["\"use strict\";\r\n// Copyright 2024 Google LLC\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     https://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n//\r\n// ** This file is automatically generated by gapic-generator-typescript. **\r\n// ** https://github.com/googleapis/gapic-generator-typescript **\r\n// ** All changes to this file may be overwritten. **\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FirestoreAdminClient = void 0;\r\nconst jsonProtos = require(\"../../protos/admin_v1.json\");\r\n/**\r\n * Client JSON configuration object, loaded from\r\n * `src/v1/firestore_admin_client_config.json`.\r\n * This file defines retry strategy and timeouts for all API methods in this library.\r\n */\r\nconst gapicConfig = require(\"./firestore_admin_client_config.json\");\r\nconst version = require('../../../package.json').version;\r\n/**\r\n *  The Cloud Firestore Admin API.\r\n *\r\n *  This API provides several administrative services for Cloud Firestore.\r\n *\r\n *  Project, Database, Namespace, Collection, Collection Group, and Document are\r\n *  used as defined in the Google Cloud Firestore API.\r\n *\r\n *  Operation: An Operation represents work being performed in the background.\r\n *\r\n *  The index service manages Cloud Firestore indexes.\r\n *\r\n *  Index creation is performed asynchronously.\r\n *  An Operation resource is created for each such asynchronous operation.\r\n *  The state of the operation (including any errors encountered)\r\n *  may be queried via the Operation resource.\r\n *\r\n *  The Operations collection provides a record of actions performed for the\r\n *  specified Project (including any Operations in progress). Operations are not\r\n *  created directly but through calls on other collections or resources.\r\n *\r\n *  An Operation that is done may be deleted so that it is no longer listed as\r\n *  part of the Operation collection. Operations are garbage collected after\r\n *  30 days. By default, ListOperations will only return in progress and failed\r\n *  operations. To list completed operation, issue a ListOperations request with\r\n *  the filter `done: true`.\r\n *\r\n *  Operations are created by service `FirestoreAdmin`, but are accessed via\r\n *  service `google.longrunning.Operations`.\r\n * @class\r\n * @memberof v1\r\n */\r\nclass FirestoreAdminClient {\r\n    /**\r\n     * Construct an instance of FirestoreAdminClient.\r\n     *\r\n     * @param {object} [options] - The configuration object.\r\n     * The options accepted by the constructor are described in detail\r\n     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\r\n     * The common options are:\r\n     * @param {object} [options.credentials] - Credentials object.\r\n     * @param {string} [options.credentials.client_email]\r\n     * @param {string} [options.credentials.private_key]\r\n     * @param {string} [options.email] - Account email address. Required when\r\n     *     using a .pem or .p12 keyFilename.\r\n     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\r\n     *     .p12 key downloaded from the Google Developers Console. If you provide\r\n     *     a path to a JSON file, the projectId option below is not necessary.\r\n     *     NOTE: .pem and .p12 require you to specify options.email as well.\r\n     * @param {number} [options.port] - The port on which to connect to\r\n     *     the remote host.\r\n     * @param {string} [options.projectId] - The project ID from the Google\r\n     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\r\n     *     the environment variable GCLOUD_PROJECT for your project ID. If your\r\n     *     app is running in an environment which supports\r\n     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\r\n     *     your project ID will be detected automatically.\r\n     * @param {string} [options.apiEndpoint] - The domain name of the\r\n     *     API remote host.\r\n     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\r\n     *     Follows the structure of {@link gapicConfig}.\r\n     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\r\n     *     For more information, please check the\r\n     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\r\n     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\r\n     *     need to avoid loading the default gRPC version and want to use the fallback\r\n     *     HTTP implementation. Load only fallback version and pass it to the constructor:\r\n     *     ```\r\n     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\r\n     *     const client = new FirestoreAdminClient({fallback: true}, gax);\r\n     *     ```\r\n     */\r\n    constructor(opts, gaxInstance) {\r\n        var _a, _b, _c, _d, _e;\r\n        this._terminated = false;\r\n        this.descriptors = {\r\n            page: {},\r\n            stream: {},\r\n            longrunning: {},\r\n            batching: {},\r\n        };\r\n        // Ensure that options include all the required fields.\r\n        const staticMembers = this.constructor;\r\n        if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) &&\r\n            (opts === null || opts === void 0 ? void 0 : opts.universeDomain) &&\r\n            (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\r\n            throw new Error('Please set either universe_domain or universeDomain, but not both.');\r\n        }\r\n        const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object'\r\n            ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN']\r\n            : undefined;\r\n        this._universeDomain =\r\n            (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\r\n        this._servicePath = 'firestore.' + this._universeDomain;\r\n        const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\r\n        this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\r\n        const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\r\n        const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\r\n        const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : (typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function');\r\n        opts = Object.assign({ servicePath, port, clientConfig, fallback }, opts);\r\n        // Request numeric enum values if REST transport is used.\r\n        opts.numericEnums = true;\r\n        // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\r\n        if (servicePath !== this._servicePath && !('scopes' in opts)) {\r\n            opts['scopes'] = staticMembers.scopes;\r\n        }\r\n        // Load google-gax module synchronously if needed\r\n        if (!gaxInstance) {\r\n            gaxInstance = require('google-gax');\r\n        }\r\n        // Choose either gRPC or proto-over-HTTP implementation of google-gax.\r\n        this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\r\n        // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\r\n        this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\r\n        // Save options to use in initialize() method.\r\n        this._opts = opts;\r\n        // Save the auth object to the client, for use by other methods.\r\n        this.auth = this._gaxGrpc.auth;\r\n        // Set useJWTAccessWithScope on the auth object.\r\n        this.auth.useJWTAccessWithScope = true;\r\n        // Set defaultServicePath on the auth object.\r\n        this.auth.defaultServicePath = this._servicePath;\r\n        // Set the default scopes in auth client if needed.\r\n        if (servicePath === this._servicePath) {\r\n            this.auth.defaultScopes = staticMembers.scopes;\r\n        }\r\n        this.locationsClient = new this._gaxModule.LocationsClient(this._gaxGrpc, opts);\r\n        // Determine the client header string.\r\n        const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\r\n        if (typeof process === 'object' && 'versions' in process) {\r\n            clientHeader.push(`gl-node/${process.versions.node}`);\r\n        }\r\n        else {\r\n            clientHeader.push(`gl-web/${this._gaxModule.version}`);\r\n        }\r\n        if (!opts.fallback) {\r\n            clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\r\n        }\r\n        else {\r\n            clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\r\n        }\r\n        if (opts.libName && opts.libVersion) {\r\n            clientHeader.push(`${opts.libName}/${opts.libVersion}`);\r\n        }\r\n        // Load the applicable protos.\r\n        this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\r\n        // This API contains \"path templates\"; forward-slash-separated\r\n        // identifiers to uniquely identify resources within the API.\r\n        // Create useful helper objects for these.\r\n        this.pathTemplates = {\r\n            backupPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/backups/{backup}'),\r\n            backupSchedulePathTemplate: new this._gaxModule.PathTemplate('projects/{project}/databases/{database}/backupSchedules/{backup_schedule}'),\r\n            collectionGroupPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/databases/{database}/collectionGroups/{collection}'),\r\n            databasePathTemplate: new this._gaxModule.PathTemplate('projects/{project}/databases/{database}'),\r\n            fieldPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/databases/{database}/collectionGroups/{collection}/fields/{field}'),\r\n            indexPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/databases/{database}/collectionGroups/{collection}/indexes/{index}'),\r\n            locationPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}'),\r\n            projectPathTemplate: new this._gaxModule.PathTemplate('projects/{project}'),\r\n        };\r\n        // Some of the methods on this service return \"paged\" results,\r\n        // (e.g. 50 results at a time, with tokens to get subsequent\r\n        // pages). Denote the keys used for pagination and results.\r\n        this.descriptors.page = {\r\n            listIndexes: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'indexes'),\r\n            listFields: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'fields'),\r\n        };\r\n        const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);\r\n        // This API contains \"long-running operations\", which return a\r\n        // an Operation object that allows for tracking of the operation,\r\n        // rather than holding a request open.\r\n        const lroOptions = {\r\n            auth: this.auth,\r\n            grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,\r\n        };\r\n        if (opts.fallback) {\r\n            lroOptions.protoJson = protoFilesRoot;\r\n            lroOptions.httpRules = [\r\n                {\r\n                    selector: 'google.longrunning.Operations.CancelOperation',\r\n                    post: '/v1/{name=projects/*/databases/*/operations/*}:cancel',\r\n                    body: '*',\r\n                },\r\n                {\r\n                    selector: 'google.longrunning.Operations.DeleteOperation',\r\n                    delete: '/v1/{name=projects/*/databases/*/operations/*}',\r\n                },\r\n                {\r\n                    selector: 'google.longrunning.Operations.GetOperation',\r\n                    get: '/v1/{name=projects/*/databases/*/operations/*}',\r\n                },\r\n                {\r\n                    selector: 'google.longrunning.Operations.ListOperations',\r\n                    get: '/v1/{name=projects/*/databases/*}/operations',\r\n                },\r\n            ];\r\n        }\r\n        this.operationsClient = this._gaxModule\r\n            .lro(lroOptions)\r\n            .operationsClient(opts);\r\n        const createIndexResponse = protoFilesRoot.lookup('.google.firestore.admin.v1.Index');\r\n        const createIndexMetadata = protoFilesRoot.lookup('.google.firestore.admin.v1.IndexOperationMetadata');\r\n        const updateFieldResponse = protoFilesRoot.lookup('.google.firestore.admin.v1.Field');\r\n        const updateFieldMetadata = protoFilesRoot.lookup('.google.firestore.admin.v1.FieldOperationMetadata');\r\n        const exportDocumentsResponse = protoFilesRoot.lookup('.google.firestore.admin.v1.ExportDocumentsResponse');\r\n        const exportDocumentsMetadata = protoFilesRoot.lookup('.google.firestore.admin.v1.ExportDocumentsMetadata');\r\n        const importDocumentsResponse = protoFilesRoot.lookup('.google.protobuf.Empty');\r\n        const importDocumentsMetadata = protoFilesRoot.lookup('.google.firestore.admin.v1.ImportDocumentsMetadata');\r\n        const bulkDeleteDocumentsResponse = protoFilesRoot.lookup('.google.firestore.admin.v1.BulkDeleteDocumentsResponse');\r\n        const bulkDeleteDocumentsMetadata = protoFilesRoot.lookup('.google.firestore.admin.v1.BulkDeleteDocumentsMetadata');\r\n        const createDatabaseResponse = protoFilesRoot.lookup('.google.firestore.admin.v1.Database');\r\n        const createDatabaseMetadata = protoFilesRoot.lookup('.google.firestore.admin.v1.CreateDatabaseMetadata');\r\n        const updateDatabaseResponse = protoFilesRoot.lookup('.google.firestore.admin.v1.Database');\r\n        const updateDatabaseMetadata = protoFilesRoot.lookup('.google.firestore.admin.v1.UpdateDatabaseMetadata');\r\n        const deleteDatabaseResponse = protoFilesRoot.lookup('.google.firestore.admin.v1.Database');\r\n        const deleteDatabaseMetadata = protoFilesRoot.lookup('.google.firestore.admin.v1.DeleteDatabaseMetadata');\r\n        const restoreDatabaseResponse = protoFilesRoot.lookup('.google.firestore.admin.v1.Database');\r\n        const restoreDatabaseMetadata = protoFilesRoot.lookup('.google.firestore.admin.v1.RestoreDatabaseMetadata');\r\n        this.descriptors.longrunning = {\r\n            createIndex: new this._gaxModule.LongrunningDescriptor(this.operationsClient, createIndexResponse.decode.bind(createIndexResponse), createIndexMetadata.decode.bind(createIndexMetadata)),\r\n            updateField: new this._gaxModule.LongrunningDescriptor(this.operationsClient, updateFieldResponse.decode.bind(updateFieldResponse), updateFieldMetadata.decode.bind(updateFieldMetadata)),\r\n            exportDocuments: new this._gaxModule.LongrunningDescriptor(this.operationsClient, exportDocumentsResponse.decode.bind(exportDocumentsResponse), exportDocumentsMetadata.decode.bind(exportDocumentsMetadata)),\r\n            importDocuments: new this._gaxModule.LongrunningDescriptor(this.operationsClient, importDocumentsResponse.decode.bind(importDocumentsResponse), importDocumentsMetadata.decode.bind(importDocumentsMetadata)),\r\n            bulkDeleteDocuments: new this._gaxModule.LongrunningDescriptor(this.operationsClient, bulkDeleteDocumentsResponse.decode.bind(bulkDeleteDocumentsResponse), bulkDeleteDocumentsMetadata.decode.bind(bulkDeleteDocumentsMetadata)),\r\n            createDatabase: new this._gaxModule.LongrunningDescriptor(this.operationsClient, createDatabaseResponse.decode.bind(createDatabaseResponse), createDatabaseMetadata.decode.bind(createDatabaseMetadata)),\r\n            updateDatabase: new this._gaxModule.LongrunningDescriptor(this.operationsClient, updateDatabaseResponse.decode.bind(updateDatabaseResponse), updateDatabaseMetadata.decode.bind(updateDatabaseMetadata)),\r\n            deleteDatabase: new this._gaxModule.LongrunningDescriptor(this.operationsClient, deleteDatabaseResponse.decode.bind(deleteDatabaseResponse), deleteDatabaseMetadata.decode.bind(deleteDatabaseMetadata)),\r\n            restoreDatabase: new this._gaxModule.LongrunningDescriptor(this.operationsClient, restoreDatabaseResponse.decode.bind(restoreDatabaseResponse), restoreDatabaseMetadata.decode.bind(restoreDatabaseMetadata)),\r\n        };\r\n        // Put together the default options sent with requests.\r\n        this._defaults = this._gaxGrpc.constructSettings('google.firestore.admin.v1.FirestoreAdmin', gapicConfig, opts.clientConfig || {}, { 'x-goog-api-client': clientHeader.join(' ') });\r\n        // Set up a dictionary of \"inner API calls\"; the core implementation\r\n        // of calling the API is handled in `google-gax`, with this code\r\n        // merely providing the destination and request information.\r\n        this.innerApiCalls = {};\r\n        // Add a warn function to the client constructor so it can be easily tested.\r\n        this.warn = this._gaxModule.warn;\r\n    }\r\n    /**\r\n     * Initialize the client.\r\n     * Performs asynchronous operations (such as authentication) and prepares the client.\r\n     * This function will be called automatically when any class method is called for the\r\n     * first time, but if you need to initialize it before calling an actual method,\r\n     * feel free to call initialize() directly.\r\n     *\r\n     * You can await on this method if you want to make sure the client is initialized.\r\n     *\r\n     * @returns {Promise} A promise that resolves to an authenticated service stub.\r\n     */\r\n    initialize() {\r\n        // If the client stub promise is already initialized, return immediately.\r\n        if (this.firestoreAdminStub) {\r\n            return this.firestoreAdminStub;\r\n        }\r\n        // Put together the \"service stub\" for\r\n        // google.firestore.admin.v1.FirestoreAdmin.\r\n        this.firestoreAdminStub = this._gaxGrpc.createStub(this._opts.fallback\r\n            ? this._protos.lookupService('google.firestore.admin.v1.FirestoreAdmin')\r\n            : // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this._protos.google.firestore.admin.v1.FirestoreAdmin, this._opts, this._providedCustomServicePath);\r\n        // Iterate over each of the methods that the service provides\r\n        // and create an API call method for each.\r\n        const firestoreAdminStubMethods = [\r\n            'createIndex',\r\n            'listIndexes',\r\n            'getIndex',\r\n            'deleteIndex',\r\n            'getField',\r\n            'updateField',\r\n            'listFields',\r\n            'exportDocuments',\r\n            'importDocuments',\r\n            'bulkDeleteDocuments',\r\n            'createDatabase',\r\n            'getDatabase',\r\n            'listDatabases',\r\n            'updateDatabase',\r\n            'deleteDatabase',\r\n            'getBackup',\r\n            'listBackups',\r\n            'deleteBackup',\r\n            'restoreDatabase',\r\n            'createBackupSchedule',\r\n            'getBackupSchedule',\r\n            'listBackupSchedules',\r\n            'updateBackupSchedule',\r\n            'deleteBackupSchedule',\r\n        ];\r\n        for (const methodName of firestoreAdminStubMethods) {\r\n            const callPromise = this.firestoreAdminStub.then(stub => (...args) => {\r\n                if (this._terminated) {\r\n                    return Promise.reject('The client has already been closed.');\r\n                }\r\n                const func = stub[methodName];\r\n                return func.apply(stub, args);\r\n            }, (err) => () => {\r\n                throw err;\r\n            });\r\n            const descriptor = this.descriptors.page[methodName] ||\r\n                this.descriptors.longrunning[methodName] ||\r\n                undefined;\r\n            const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\r\n            this.innerApiCalls[methodName] = apiCall;\r\n        }\r\n        return this.firestoreAdminStub;\r\n    }\r\n    /**\r\n     * The DNS address for this API service.\r\n     * @deprecated Use the apiEndpoint method of the client instance.\r\n     * @returns {string} The DNS address for this service.\r\n     */\r\n    static get servicePath() {\r\n        if (typeof process === 'object' &&\r\n            typeof process.emitWarning === 'function') {\r\n            process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\r\n        }\r\n        return 'firestore.googleapis.com';\r\n    }\r\n    /**\r\n     * The DNS address for this API service - same as servicePath.\r\n     * @deprecated Use the apiEndpoint method of the client instance.\r\n     * @returns {string} The DNS address for this service.\r\n     */\r\n    static get apiEndpoint() {\r\n        if (typeof process === 'object' &&\r\n            typeof process.emitWarning === 'function') {\r\n            process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\r\n        }\r\n        return 'firestore.googleapis.com';\r\n    }\r\n    /**\r\n     * The DNS address for this API service.\r\n     * @returns {string} The DNS address for this service.\r\n     */\r\n    get apiEndpoint() {\r\n        return this._servicePath;\r\n    }\r\n    get universeDomain() {\r\n        return this._universeDomain;\r\n    }\r\n    /**\r\n     * The port for this API service.\r\n     * @returns {number} The default port for this service.\r\n     */\r\n    static get port() {\r\n        return 443;\r\n    }\r\n    /**\r\n     * The scopes needed to make gRPC calls for every method defined\r\n     * in this service.\r\n     * @returns {string[]} List of default scopes.\r\n     */\r\n    static get scopes() {\r\n        return [\r\n            'https://www.googleapis.com/auth/cloud-platform',\r\n            'https://www.googleapis.com/auth/datastore',\r\n        ];\r\n    }\r\n    /**\r\n     * Return the project ID used by this class.\r\n     * @returns {Promise} A promise that resolves to string containing the project ID.\r\n     */\r\n    getProjectId(callback) {\r\n        if (callback) {\r\n            this.auth.getProjectId(callback);\r\n            return;\r\n        }\r\n        return this.auth.getProjectId();\r\n    }\r\n    getIndex(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.getIndex(request, options, callback);\r\n    }\r\n    deleteIndex(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.deleteIndex(request, options, callback);\r\n    }\r\n    getField(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.getField(request, options, callback);\r\n    }\r\n    getDatabase(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.getDatabase(request, options, callback);\r\n    }\r\n    listDatabases(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.listDatabases(request, options, callback);\r\n    }\r\n    getBackup(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.getBackup(request, options, callback);\r\n    }\r\n    listBackups(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.listBackups(request, options, callback);\r\n    }\r\n    deleteBackup(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.deleteBackup(request, options, callback);\r\n    }\r\n    createBackupSchedule(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.createBackupSchedule(request, options, callback);\r\n    }\r\n    getBackupSchedule(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.getBackupSchedule(request, options, callback);\r\n    }\r\n    listBackupSchedules(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.listBackupSchedules(request, options, callback);\r\n    }\r\n    updateBackupSchedule(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                'backup_schedule.name': (_a = request.backupSchedule.name) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.updateBackupSchedule(request, options, callback);\r\n    }\r\n    deleteBackupSchedule(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.deleteBackupSchedule(request, options, callback);\r\n    }\r\n    createIndex(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.createIndex(request, options, callback);\r\n    }\r\n    /**\r\n     * Check the status of the long running operation returned by `createIndex()`.\r\n     * @param {String} name\r\n     *   The operation name that will be passed.\r\n     * @returns {Promise} - The promise which resolves to an object.\r\n     *   The decoded operation object has result and metadata field to get information from.\r\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\r\n     *   for more details and examples.\r\n     * @example <caption>include:samples/generated/v1/firestore_admin.create_index.js</caption>\r\n     * region_tag:firestore_v1_generated_FirestoreAdmin_CreateIndex_async\r\n     */\r\n    async checkCreateIndexProgress(name) {\r\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\r\n        const [operation] = await this.operationsClient.getOperation(request);\r\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.createIndex, this._gaxModule.createDefaultBackoffSettings());\r\n        return decodeOperation;\r\n    }\r\n    updateField(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                'field.name': (_a = request.field.name) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.updateField(request, options, callback);\r\n    }\r\n    /**\r\n     * Check the status of the long running operation returned by `updateField()`.\r\n     * @param {String} name\r\n     *   The operation name that will be passed.\r\n     * @returns {Promise} - The promise which resolves to an object.\r\n     *   The decoded operation object has result and metadata field to get information from.\r\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\r\n     *   for more details and examples.\r\n     * @example <caption>include:samples/generated/v1/firestore_admin.update_field.js</caption>\r\n     * region_tag:firestore_v1_generated_FirestoreAdmin_UpdateField_async\r\n     */\r\n    async checkUpdateFieldProgress(name) {\r\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\r\n        const [operation] = await this.operationsClient.getOperation(request);\r\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.updateField, this._gaxModule.createDefaultBackoffSettings());\r\n        return decodeOperation;\r\n    }\r\n    exportDocuments(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.exportDocuments(request, options, callback);\r\n    }\r\n    /**\r\n     * Check the status of the long running operation returned by `exportDocuments()`.\r\n     * @param {String} name\r\n     *   The operation name that will be passed.\r\n     * @returns {Promise} - The promise which resolves to an object.\r\n     *   The decoded operation object has result and metadata field to get information from.\r\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\r\n     *   for more details and examples.\r\n     * @example <caption>include:samples/generated/v1/firestore_admin.export_documents.js</caption>\r\n     * region_tag:firestore_v1_generated_FirestoreAdmin_ExportDocuments_async\r\n     */\r\n    async checkExportDocumentsProgress(name) {\r\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\r\n        const [operation] = await this.operationsClient.getOperation(request);\r\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.exportDocuments, this._gaxModule.createDefaultBackoffSettings());\r\n        return decodeOperation;\r\n    }\r\n    importDocuments(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.importDocuments(request, options, callback);\r\n    }\r\n    /**\r\n     * Check the status of the long running operation returned by `importDocuments()`.\r\n     * @param {String} name\r\n     *   The operation name that will be passed.\r\n     * @returns {Promise} - The promise which resolves to an object.\r\n     *   The decoded operation object has result and metadata field to get information from.\r\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\r\n     *   for more details and examples.\r\n     * @example <caption>include:samples/generated/v1/firestore_admin.import_documents.js</caption>\r\n     * region_tag:firestore_v1_generated_FirestoreAdmin_ImportDocuments_async\r\n     */\r\n    async checkImportDocumentsProgress(name) {\r\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\r\n        const [operation] = await this.operationsClient.getOperation(request);\r\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.importDocuments, this._gaxModule.createDefaultBackoffSettings());\r\n        return decodeOperation;\r\n    }\r\n    bulkDeleteDocuments(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.bulkDeleteDocuments(request, options, callback);\r\n    }\r\n    /**\r\n     * Check the status of the long running operation returned by `bulkDeleteDocuments()`.\r\n     * @param {String} name\r\n     *   The operation name that will be passed.\r\n     * @returns {Promise} - The promise which resolves to an object.\r\n     *   The decoded operation object has result and metadata field to get information from.\r\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\r\n     *   for more details and examples.\r\n     * @example <caption>include:samples/generated/v1/firestore_admin.bulk_delete_documents.js</caption>\r\n     * region_tag:firestore_v1_generated_FirestoreAdmin_BulkDeleteDocuments_async\r\n     */\r\n    async checkBulkDeleteDocumentsProgress(name) {\r\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\r\n        const [operation] = await this.operationsClient.getOperation(request);\r\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.bulkDeleteDocuments, this._gaxModule.createDefaultBackoffSettings());\r\n        return decodeOperation;\r\n    }\r\n    createDatabase(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.createDatabase(request, options, callback);\r\n    }\r\n    /**\r\n     * Check the status of the long running operation returned by `createDatabase()`.\r\n     * @param {String} name\r\n     *   The operation name that will be passed.\r\n     * @returns {Promise} - The promise which resolves to an object.\r\n     *   The decoded operation object has result and metadata field to get information from.\r\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\r\n     *   for more details and examples.\r\n     * @example <caption>include:samples/generated/v1/firestore_admin.create_database.js</caption>\r\n     * region_tag:firestore_v1_generated_FirestoreAdmin_CreateDatabase_async\r\n     */\r\n    async checkCreateDatabaseProgress(name) {\r\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\r\n        const [operation] = await this.operationsClient.getOperation(request);\r\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.createDatabase, this._gaxModule.createDefaultBackoffSettings());\r\n        return decodeOperation;\r\n    }\r\n    updateDatabase(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                'database.name': (_a = request.database.name) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.updateDatabase(request, options, callback);\r\n    }\r\n    /**\r\n     * Check the status of the long running operation returned by `updateDatabase()`.\r\n     * @param {String} name\r\n     *   The operation name that will be passed.\r\n     * @returns {Promise} - The promise which resolves to an object.\r\n     *   The decoded operation object has result and metadata field to get information from.\r\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\r\n     *   for more details and examples.\r\n     * @example <caption>include:samples/generated/v1/firestore_admin.update_database.js</caption>\r\n     * region_tag:firestore_v1_generated_FirestoreAdmin_UpdateDatabase_async\r\n     */\r\n    async checkUpdateDatabaseProgress(name) {\r\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\r\n        const [operation] = await this.operationsClient.getOperation(request);\r\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.updateDatabase, this._gaxModule.createDefaultBackoffSettings());\r\n        return decodeOperation;\r\n    }\r\n    deleteDatabase(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.deleteDatabase(request, options, callback);\r\n    }\r\n    /**\r\n     * Check the status of the long running operation returned by `deleteDatabase()`.\r\n     * @param {String} name\r\n     *   The operation name that will be passed.\r\n     * @returns {Promise} - The promise which resolves to an object.\r\n     *   The decoded operation object has result and metadata field to get information from.\r\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\r\n     *   for more details and examples.\r\n     * @example <caption>include:samples/generated/v1/firestore_admin.delete_database.js</caption>\r\n     * region_tag:firestore_v1_generated_FirestoreAdmin_DeleteDatabase_async\r\n     */\r\n    async checkDeleteDatabaseProgress(name) {\r\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\r\n        const [operation] = await this.operationsClient.getOperation(request);\r\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.deleteDatabase, this._gaxModule.createDefaultBackoffSettings());\r\n        return decodeOperation;\r\n    }\r\n    restoreDatabase(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.restoreDatabase(request, options, callback);\r\n    }\r\n    /**\r\n     * Check the status of the long running operation returned by `restoreDatabase()`.\r\n     * @param {String} name\r\n     *   The operation name that will be passed.\r\n     * @returns {Promise} - The promise which resolves to an object.\r\n     *   The decoded operation object has result and metadata field to get information from.\r\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\r\n     *   for more details and examples.\r\n     * @example <caption>include:samples/generated/v1/firestore_admin.restore_database.js</caption>\r\n     * region_tag:firestore_v1_generated_FirestoreAdmin_RestoreDatabase_async\r\n     */\r\n    async checkRestoreDatabaseProgress(name) {\r\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\r\n        const [operation] = await this.operationsClient.getOperation(request);\r\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.restoreDatabase, this._gaxModule.createDefaultBackoffSettings());\r\n        return decodeOperation;\r\n    }\r\n    listIndexes(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.listIndexes(request, options, callback);\r\n    }\r\n    /**\r\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\r\n     * @param {Object} request\r\n     *   The request object that will be sent.\r\n     * @param {string} request.parent\r\n     *   Required. A parent name of the form\r\n     *   `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`\r\n     * @param {string} request.filter\r\n     *   The filter to apply to list results.\r\n     * @param {number} request.pageSize\r\n     *   The number of results to return.\r\n     * @param {string} request.pageToken\r\n     *   A page token, returned from a previous call to\r\n     *   {@link protos.google.firestore.admin.v1.FirestoreAdmin.ListIndexes|FirestoreAdmin.ListIndexes},\r\n     *   that may be used to get the next page of results.\r\n     * @param {object} [options]\r\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\r\n     * @returns {Stream}\r\n     *   An object stream which emits an object representing {@link protos.google.firestore.admin.v1.Index|Index} on 'data' event.\r\n     *   The client library will perform auto-pagination by default: it will call the API as many\r\n     *   times as needed. Note that it can affect your quota.\r\n     *   We recommend using `listIndexesAsync()`\r\n     *   method described below for async iteration which you can stop as needed.\r\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\r\n     *   for more details and examples.\r\n     */\r\n    listIndexesStream(request, options) {\r\n        var _a;\r\n        request = request || {};\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        const defaultCallSettings = this._defaults['listIndexes'];\r\n        const callSettings = defaultCallSettings.merge(options);\r\n        this.initialize();\r\n        return this.descriptors.page.listIndexes.createStream(this.innerApiCalls.listIndexes, request, callSettings);\r\n    }\r\n    /**\r\n     * Equivalent to `listIndexes`, but returns an iterable object.\r\n     *\r\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\r\n     * @param {Object} request\r\n     *   The request object that will be sent.\r\n     * @param {string} request.parent\r\n     *   Required. A parent name of the form\r\n     *   `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`\r\n     * @param {string} request.filter\r\n     *   The filter to apply to list results.\r\n     * @param {number} request.pageSize\r\n     *   The number of results to return.\r\n     * @param {string} request.pageToken\r\n     *   A page token, returned from a previous call to\r\n     *   {@link protos.google.firestore.admin.v1.FirestoreAdmin.ListIndexes|FirestoreAdmin.ListIndexes},\r\n     *   that may be used to get the next page of results.\r\n     * @param {object} [options]\r\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\r\n     * @returns {Object}\r\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\r\n     *   When you iterate the returned iterable, each element will be an object representing\r\n     *   {@link protos.google.firestore.admin.v1.Index|Index}. The API will be called under the hood as needed, once per the page,\r\n     *   so you can stop the iteration when you don't need more results.\r\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\r\n     *   for more details and examples.\r\n     * @example <caption>include:samples/generated/v1/firestore_admin.list_indexes.js</caption>\r\n     * region_tag:firestore_v1_generated_FirestoreAdmin_ListIndexes_async\r\n     */\r\n    listIndexesAsync(request, options) {\r\n        var _a;\r\n        request = request || {};\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        const defaultCallSettings = this._defaults['listIndexes'];\r\n        const callSettings = defaultCallSettings.merge(options);\r\n        this.initialize();\r\n        return this.descriptors.page.listIndexes.asyncIterate(this.innerApiCalls['listIndexes'], request, callSettings);\r\n    }\r\n    listFields(request, optionsOrCallback, callback) {\r\n        var _a;\r\n        request = request || {};\r\n        let options;\r\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\r\n            callback = optionsOrCallback;\r\n            options = {};\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        this.initialize();\r\n        return this.innerApiCalls.listFields(request, options, callback);\r\n    }\r\n    /**\r\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\r\n     * @param {Object} request\r\n     *   The request object that will be sent.\r\n     * @param {string} request.parent\r\n     *   Required. A parent name of the form\r\n     *   `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`\r\n     * @param {string} request.filter\r\n     *   The filter to apply to list results. Currently,\r\n     *   {@link protos.google.firestore.admin.v1.FirestoreAdmin.ListFields|FirestoreAdmin.ListFields}\r\n     *   only supports listing fields that have been explicitly overridden. To issue\r\n     *   this query, call\r\n     *   {@link protos.google.firestore.admin.v1.FirestoreAdmin.ListFields|FirestoreAdmin.ListFields}\r\n     *   with a filter that includes `indexConfig.usesAncestorConfig:false` or\r\n     *   `ttlConfig:*`.\r\n     * @param {number} request.pageSize\r\n     *   The number of results to return.\r\n     * @param {string} request.pageToken\r\n     *   A page token, returned from a previous call to\r\n     *   {@link protos.google.firestore.admin.v1.FirestoreAdmin.ListFields|FirestoreAdmin.ListFields},\r\n     *   that may be used to get the next page of results.\r\n     * @param {object} [options]\r\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\r\n     * @returns {Stream}\r\n     *   An object stream which emits an object representing {@link protos.google.firestore.admin.v1.Field|Field} on 'data' event.\r\n     *   The client library will perform auto-pagination by default: it will call the API as many\r\n     *   times as needed. Note that it can affect your quota.\r\n     *   We recommend using `listFieldsAsync()`\r\n     *   method described below for async iteration which you can stop as needed.\r\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\r\n     *   for more details and examples.\r\n     */\r\n    listFieldsStream(request, options) {\r\n        var _a;\r\n        request = request || {};\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        const defaultCallSettings = this._defaults['listFields'];\r\n        const callSettings = defaultCallSettings.merge(options);\r\n        this.initialize();\r\n        return this.descriptors.page.listFields.createStream(this.innerApiCalls.listFields, request, callSettings);\r\n    }\r\n    /**\r\n     * Equivalent to `listFields`, but returns an iterable object.\r\n     *\r\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\r\n     * @param {Object} request\r\n     *   The request object that will be sent.\r\n     * @param {string} request.parent\r\n     *   Required. A parent name of the form\r\n     *   `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`\r\n     * @param {string} request.filter\r\n     *   The filter to apply to list results. Currently,\r\n     *   {@link protos.google.firestore.admin.v1.FirestoreAdmin.ListFields|FirestoreAdmin.ListFields}\r\n     *   only supports listing fields that have been explicitly overridden. To issue\r\n     *   this query, call\r\n     *   {@link protos.google.firestore.admin.v1.FirestoreAdmin.ListFields|FirestoreAdmin.ListFields}\r\n     *   with a filter that includes `indexConfig.usesAncestorConfig:false` or\r\n     *   `ttlConfig:*`.\r\n     * @param {number} request.pageSize\r\n     *   The number of results to return.\r\n     * @param {string} request.pageToken\r\n     *   A page token, returned from a previous call to\r\n     *   {@link protos.google.firestore.admin.v1.FirestoreAdmin.ListFields|FirestoreAdmin.ListFields},\r\n     *   that may be used to get the next page of results.\r\n     * @param {object} [options]\r\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\r\n     * @returns {Object}\r\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\r\n     *   When you iterate the returned iterable, each element will be an object representing\r\n     *   {@link protos.google.firestore.admin.v1.Field|Field}. The API will be called under the hood as needed, once per the page,\r\n     *   so you can stop the iteration when you don't need more results.\r\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\r\n     *   for more details and examples.\r\n     * @example <caption>include:samples/generated/v1/firestore_admin.list_fields.js</caption>\r\n     * region_tag:firestore_v1_generated_FirestoreAdmin_ListFields_async\r\n     */\r\n    listFieldsAsync(request, options) {\r\n        var _a;\r\n        request = request || {};\r\n        options = options || {};\r\n        options.otherArgs = options.otherArgs || {};\r\n        options.otherArgs.headers = options.otherArgs.headers || {};\r\n        options.otherArgs.headers['x-goog-request-params'] =\r\n            this._gaxModule.routingHeader.fromParams({\r\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\r\n            });\r\n        const defaultCallSettings = this._defaults['listFields'];\r\n        const callSettings = defaultCallSettings.merge(options);\r\n        this.initialize();\r\n        return this.descriptors.page.listFields.asyncIterate(this.innerApiCalls['listFields'], request, callSettings);\r\n    }\r\n    /**\r\n     * Gets information about a location.\r\n     *\r\n     * @param {Object} request\r\n     *   The request object that will be sent.\r\n     * @param {string} request.name\r\n     *   Resource name for the location.\r\n     * @param {object} [options]\r\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html | CallOptions} for more details.\r\n     * @returns {Promise} - The promise which resolves to an array.\r\n     *   The first element of the array is an object representing {@link google.cloud.location.Location | Location}.\r\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }\r\n     *   for more details and examples.\r\n     * @example\r\n     * ```\r\n     * const [response] = await client.getLocation(request);\r\n     * ```\r\n     */\r\n    getLocation(request, options, callback) {\r\n        return this.locationsClient.getLocation(request, options, callback);\r\n    }\r\n    /**\r\n     * Lists information about the supported locations for this service. Returns an iterable object.\r\n     *\r\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\r\n     * @param {Object} request\r\n     *   The request object that will be sent.\r\n     * @param {string} request.name\r\n     *   The resource that owns the locations collection, if applicable.\r\n     * @param {string} request.filter\r\n     *   The standard list filter.\r\n     * @param {number} request.pageSize\r\n     *   The standard list page size.\r\n     * @param {string} request.pageToken\r\n     *   The standard list page token.\r\n     * @param {object} [options]\r\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\r\n     * @returns {Object}\r\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\r\n     *   When you iterate the returned iterable, each element will be an object representing\r\n     *   {@link google.cloud.location.Location | Location}. The API will be called under the hood as needed, once per the page,\r\n     *   so you can stop the iteration when you don't need more results.\r\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\r\n     *   for more details and examples.\r\n     * @example\r\n     * ```\r\n     * const iterable = client.listLocationsAsync(request);\r\n     * for await (const response of iterable) {\r\n     *   // process response\r\n     * }\r\n     * ```\r\n     */\r\n    listLocationsAsync(request, options) {\r\n        return this.locationsClient.listLocationsAsync(request, options);\r\n    }\r\n    /**\r\n     * Gets the latest state of a long-running operation.  Clients can use this\r\n     * method to poll the operation result at intervals as recommended by the API\r\n     * service.\r\n     *\r\n     * @param {Object} request - The request object that will be sent.\r\n     * @param {string} request.name - The name of the operation resource.\r\n     * @param {Object=} options\r\n     *   Optional parameters. You can override the default settings for this call,\r\n     *   e.g, timeout, retries, paginations, etc. See {@link\r\n     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\r\n     *   for the details.\r\n     * @param {function(?Error, ?Object)=} callback\r\n     *   The function which will be called with the result of the API call.\r\n     *\r\n     *   The second parameter to the callback is an object representing\r\n     *   {@link google.longrunning.Operation | google.longrunning.Operation}.\r\n     * @return {Promise} - The promise which resolves to an array.\r\n     *   The first element of the array is an object representing\r\n     * {@link google.longrunning.Operation | google.longrunning.Operation}.\r\n     * The promise has a method named \"cancel\" which cancels the ongoing API call.\r\n     *\r\n     * @example\r\n     * ```\r\n     * const client = longrunning.operationsClient();\r\n     * const name = '';\r\n     * const [response] = await client.getOperation({name});\r\n     * // doThingsWith(response)\r\n     * ```\r\n     */\r\n    getOperation(request, options, callback) {\r\n        return this.operationsClient.getOperation(request, options, callback);\r\n    }\r\n    /**\r\n     * Lists operations that match the specified filter in the request. If the\r\n     * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.\r\n     *\r\n     * For-await-of syntax is used with the iterable to recursively get response element on-demand.\r\n     *\r\n     * @param {Object} request - The request object that will be sent.\r\n     * @param {string} request.name - The name of the operation collection.\r\n     * @param {string} request.filter - The standard list filter.\r\n     * @param {number=} request.pageSize -\r\n     *   The maximum number of resources contained in the underlying API\r\n     *   response. If page streaming is performed per-resource, this\r\n     *   parameter does not affect the return value. If page streaming is\r\n     *   performed per-page, this determines the maximum number of\r\n     *   resources in a page.\r\n     * @param {Object=} options\r\n     *   Optional parameters. You can override the default settings for this call,\r\n     *   e.g, timeout, retries, paginations, etc. See {@link\r\n     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\r\n     *   details.\r\n     * @returns {Object}\r\n     *   An iterable Object that conforms to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | iteration protocols}.\r\n     *\r\n     * @example\r\n     * ```\r\n     * const client = longrunning.operationsClient();\r\n     * for await (const response of client.listOperationsAsync(request));\r\n     * // doThingsWith(response)\r\n     * ```\r\n     */\r\n    listOperationsAsync(request, options) {\r\n        return this.operationsClient.listOperationsAsync(request, options);\r\n    }\r\n    /**\r\n     * Starts asynchronous cancellation on a long-running operation.  The server\r\n     * makes a best effort to cancel the operation, but success is not\r\n     * guaranteed.  If the server doesn't support this method, it returns\r\n     * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use\r\n     * {@link Operations.GetOperation} or\r\n     * other methods to check whether the cancellation succeeded or whether the\r\n     * operation completed despite cancellation. On successful cancellation,\r\n     * the operation is not deleted; instead, it becomes an operation with\r\n     * an {@link Operation.error} value with a {@link google.rpc.Status.code} of\r\n     * 1, corresponding to `Code.CANCELLED`.\r\n     *\r\n     * @param {Object} request - The request object that will be sent.\r\n     * @param {string} request.name - The name of the operation resource to be cancelled.\r\n     * @param {Object=} options\r\n     *   Optional parameters. You can override the default settings for this call,\r\n     * e.g, timeout, retries, paginations, etc. See {@link\r\n     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\r\n     * details.\r\n     * @param {function(?Error)=} callback\r\n     *   The function which will be called with the result of the API call.\r\n     * @return {Promise} - The promise which resolves when API call finishes.\r\n     *   The promise has a method named \"cancel\" which cancels the ongoing API\r\n     * call.\r\n     *\r\n     * @example\r\n     * ```\r\n     * const client = longrunning.operationsClient();\r\n     * await client.cancelOperation({name: ''});\r\n     * ```\r\n     */\r\n    cancelOperation(request, options, callback) {\r\n        return this.operationsClient.cancelOperation(request, options, callback);\r\n    }\r\n    /**\r\n     * Deletes a long-running operation. This method indicates that the client is\r\n     * no longer interested in the operation result. It does not cancel the\r\n     * operation. If the server doesn't support this method, it returns\r\n     * `google.rpc.Code.UNIMPLEMENTED`.\r\n     *\r\n     * @param {Object} request - The request object that will be sent.\r\n     * @param {string} request.name - The name of the operation resource to be deleted.\r\n     * @param {Object=} options\r\n     *   Optional parameters. You can override the default settings for this call,\r\n     * e.g, timeout, retries, paginations, etc. See {@link\r\n     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\r\n     * for the details.\r\n     * @param {function(?Error)=} callback\r\n     *   The function which will be called with the result of the API call.\r\n     * @return {Promise} - The promise which resolves when API call finishes.\r\n     *   The promise has a method named \"cancel\" which cancels the ongoing API\r\n     * call.\r\n     *\r\n     * @example\r\n     * ```\r\n     * const client = longrunning.operationsClient();\r\n     * await client.deleteOperation({name: ''});\r\n     * ```\r\n     */\r\n    deleteOperation(request, options, callback) {\r\n        return this.operationsClient.deleteOperation(request, options, callback);\r\n    }\r\n    // --------------------\r\n    // -- Path templates --\r\n    // --------------------\r\n    /**\r\n     * Return a fully-qualified backup resource name string.\r\n     *\r\n     * @param {string} project\r\n     * @param {string} location\r\n     * @param {string} backup\r\n     * @returns {string} Resource name string.\r\n     */\r\n    backupPath(project, location, backup) {\r\n        return this.pathTemplates.backupPathTemplate.render({\r\n            project: project,\r\n            location: location,\r\n            backup: backup,\r\n        });\r\n    }\r\n    /**\r\n     * Parse the project from Backup resource.\r\n     *\r\n     * @param {string} backupName\r\n     *   A fully-qualified path representing Backup resource.\r\n     * @returns {string} A string representing the project.\r\n     */\r\n    matchProjectFromBackupName(backupName) {\r\n        return this.pathTemplates.backupPathTemplate.match(backupName).project;\r\n    }\r\n    /**\r\n     * Parse the location from Backup resource.\r\n     *\r\n     * @param {string} backupName\r\n     *   A fully-qualified path representing Backup resource.\r\n     * @returns {string} A string representing the location.\r\n     */\r\n    matchLocationFromBackupName(backupName) {\r\n        return this.pathTemplates.backupPathTemplate.match(backupName).location;\r\n    }\r\n    /**\r\n     * Parse the backup from Backup resource.\r\n     *\r\n     * @param {string} backupName\r\n     *   A fully-qualified path representing Backup resource.\r\n     * @returns {string} A string representing the backup.\r\n     */\r\n    matchBackupFromBackupName(backupName) {\r\n        return this.pathTemplates.backupPathTemplate.match(backupName).backup;\r\n    }\r\n    /**\r\n     * Return a fully-qualified backupSchedule resource name string.\r\n     *\r\n     * @param {string} project\r\n     * @param {string} database\r\n     * @param {string} backup_schedule\r\n     * @returns {string} Resource name string.\r\n     */\r\n    backupSchedulePath(project, database, backupSchedule) {\r\n        return this.pathTemplates.backupSchedulePathTemplate.render({\r\n            project: project,\r\n            database: database,\r\n            backup_schedule: backupSchedule,\r\n        });\r\n    }\r\n    /**\r\n     * Parse the project from BackupSchedule resource.\r\n     *\r\n     * @param {string} backupScheduleName\r\n     *   A fully-qualified path representing BackupSchedule resource.\r\n     * @returns {string} A string representing the project.\r\n     */\r\n    matchProjectFromBackupScheduleName(backupScheduleName) {\r\n        return this.pathTemplates.backupSchedulePathTemplate.match(backupScheduleName).project;\r\n    }\r\n    /**\r\n     * Parse the database from BackupSchedule resource.\r\n     *\r\n     * @param {string} backupScheduleName\r\n     *   A fully-qualified path representing BackupSchedule resource.\r\n     * @returns {string} A string representing the database.\r\n     */\r\n    matchDatabaseFromBackupScheduleName(backupScheduleName) {\r\n        return this.pathTemplates.backupSchedulePathTemplate.match(backupScheduleName).database;\r\n    }\r\n    /**\r\n     * Parse the backup_schedule from BackupSchedule resource.\r\n     *\r\n     * @param {string} backupScheduleName\r\n     *   A fully-qualified path representing BackupSchedule resource.\r\n     * @returns {string} A string representing the backup_schedule.\r\n     */\r\n    matchBackupScheduleFromBackupScheduleName(backupScheduleName) {\r\n        return this.pathTemplates.backupSchedulePathTemplate.match(backupScheduleName).backup_schedule;\r\n    }\r\n    /**\r\n     * Return a fully-qualified collectionGroup resource name string.\r\n     *\r\n     * @param {string} project\r\n     * @param {string} database\r\n     * @param {string} collection\r\n     * @returns {string} Resource name string.\r\n     */\r\n    collectionGroupPath(project, database, collection) {\r\n        return this.pathTemplates.collectionGroupPathTemplate.render({\r\n            project: project,\r\n            database: database,\r\n            collection: collection,\r\n        });\r\n    }\r\n    /**\r\n     * Parse the project from CollectionGroup resource.\r\n     *\r\n     * @param {string} collectionGroupName\r\n     *   A fully-qualified path representing CollectionGroup resource.\r\n     * @returns {string} A string representing the project.\r\n     */\r\n    matchProjectFromCollectionGroupName(collectionGroupName) {\r\n        return this.pathTemplates.collectionGroupPathTemplate.match(collectionGroupName).project;\r\n    }\r\n    /**\r\n     * Parse the database from CollectionGroup resource.\r\n     *\r\n     * @param {string} collectionGroupName\r\n     *   A fully-qualified path representing CollectionGroup resource.\r\n     * @returns {string} A string representing the database.\r\n     */\r\n    matchDatabaseFromCollectionGroupName(collectionGroupName) {\r\n        return this.pathTemplates.collectionGroupPathTemplate.match(collectionGroupName).database;\r\n    }\r\n    /**\r\n     * Parse the collection from CollectionGroup resource.\r\n     *\r\n     * @param {string} collectionGroupName\r\n     *   A fully-qualified path representing CollectionGroup resource.\r\n     * @returns {string} A string representing the collection.\r\n     */\r\n    matchCollectionFromCollectionGroupName(collectionGroupName) {\r\n        return this.pathTemplates.collectionGroupPathTemplate.match(collectionGroupName).collection;\r\n    }\r\n    /**\r\n     * Return a fully-qualified database resource name string.\r\n     *\r\n     * @param {string} project\r\n     * @param {string} database\r\n     * @returns {string} Resource name string.\r\n     */\r\n    databasePath(project, database) {\r\n        return this.pathTemplates.databasePathTemplate.render({\r\n            project: project,\r\n            database: database,\r\n        });\r\n    }\r\n    /**\r\n     * Parse the project from Database resource.\r\n     *\r\n     * @param {string} databaseName\r\n     *   A fully-qualified path representing Database resource.\r\n     * @returns {string} A string representing the project.\r\n     */\r\n    matchProjectFromDatabaseName(databaseName) {\r\n        return this.pathTemplates.databasePathTemplate.match(databaseName).project;\r\n    }\r\n    /**\r\n     * Parse the database from Database resource.\r\n     *\r\n     * @param {string} databaseName\r\n     *   A fully-qualified path representing Database resource.\r\n     * @returns {string} A string representing the database.\r\n     */\r\n    matchDatabaseFromDatabaseName(databaseName) {\r\n        return this.pathTemplates.databasePathTemplate.match(databaseName).database;\r\n    }\r\n    /**\r\n     * Return a fully-qualified field resource name string.\r\n     *\r\n     * @param {string} project\r\n     * @param {string} database\r\n     * @param {string} collection\r\n     * @param {string} field\r\n     * @returns {string} Resource name string.\r\n     */\r\n    fieldPath(project, database, collection, field) {\r\n        return this.pathTemplates.fieldPathTemplate.render({\r\n            project: project,\r\n            database: database,\r\n            collection: collection,\r\n            field: field,\r\n        });\r\n    }\r\n    /**\r\n     * Parse the project from Field resource.\r\n     *\r\n     * @param {string} fieldName\r\n     *   A fully-qualified path representing Field resource.\r\n     * @returns {string} A string representing the project.\r\n     */\r\n    matchProjectFromFieldName(fieldName) {\r\n        return this.pathTemplates.fieldPathTemplate.match(fieldName).project;\r\n    }\r\n    /**\r\n     * Parse the database from Field resource.\r\n     *\r\n     * @param {string} fieldName\r\n     *   A fully-qualified path representing Field resource.\r\n     * @returns {string} A string representing the database.\r\n     */\r\n    matchDatabaseFromFieldName(fieldName) {\r\n        return this.pathTemplates.fieldPathTemplate.match(fieldName).database;\r\n    }\r\n    /**\r\n     * Parse the collection from Field resource.\r\n     *\r\n     * @param {string} fieldName\r\n     *   A fully-qualified path representing Field resource.\r\n     * @returns {string} A string representing the collection.\r\n     */\r\n    matchCollectionFromFieldName(fieldName) {\r\n        return this.pathTemplates.fieldPathTemplate.match(fieldName).collection;\r\n    }\r\n    /**\r\n     * Parse the field from Field resource.\r\n     *\r\n     * @param {string} fieldName\r\n     *   A fully-qualified path representing Field resource.\r\n     * @returns {string} A string representing the field.\r\n     */\r\n    matchFieldFromFieldName(fieldName) {\r\n        return this.pathTemplates.fieldPathTemplate.match(fieldName).field;\r\n    }\r\n    /**\r\n     * Return a fully-qualified index resource name string.\r\n     *\r\n     * @param {string} project\r\n     * @param {string} database\r\n     * @param {string} collection\r\n     * @param {string} index\r\n     * @returns {string} Resource name string.\r\n     */\r\n    indexPath(project, database, collection, index) {\r\n        return this.pathTemplates.indexPathTemplate.render({\r\n            project: project,\r\n            database: database,\r\n            collection: collection,\r\n            index: index,\r\n        });\r\n    }\r\n    /**\r\n     * Parse the project from Index resource.\r\n     *\r\n     * @param {string} indexName\r\n     *   A fully-qualified path representing Index resource.\r\n     * @returns {string} A string representing the project.\r\n     */\r\n    matchProjectFromIndexName(indexName) {\r\n        return this.pathTemplates.indexPathTemplate.match(indexName).project;\r\n    }\r\n    /**\r\n     * Parse the database from Index resource.\r\n     *\r\n     * @param {string} indexName\r\n     *   A fully-qualified path representing Index resource.\r\n     * @returns {string} A string representing the database.\r\n     */\r\n    matchDatabaseFromIndexName(indexName) {\r\n        return this.pathTemplates.indexPathTemplate.match(indexName).database;\r\n    }\r\n    /**\r\n     * Parse the collection from Index resource.\r\n     *\r\n     * @param {string} indexName\r\n     *   A fully-qualified path representing Index resource.\r\n     * @returns {string} A string representing the collection.\r\n     */\r\n    matchCollectionFromIndexName(indexName) {\r\n        return this.pathTemplates.indexPathTemplate.match(indexName).collection;\r\n    }\r\n    /**\r\n     * Parse the index from Index resource.\r\n     *\r\n     * @param {string} indexName\r\n     *   A fully-qualified path representing Index resource.\r\n     * @returns {string} A string representing the index.\r\n     */\r\n    matchIndexFromIndexName(indexName) {\r\n        return this.pathTemplates.indexPathTemplate.match(indexName).index;\r\n    }\r\n    /**\r\n     * Return a fully-qualified location resource name string.\r\n     *\r\n     * @param {string} project\r\n     * @param {string} location\r\n     * @returns {string} Resource name string.\r\n     */\r\n    locationPath(project, location) {\r\n        return this.pathTemplates.locationPathTemplate.render({\r\n            project: project,\r\n            location: location,\r\n        });\r\n    }\r\n    /**\r\n     * Parse the project from Location resource.\r\n     *\r\n     * @param {string} locationName\r\n     *   A fully-qualified path representing Location resource.\r\n     * @returns {string} A string representing the project.\r\n     */\r\n    matchProjectFromLocationName(locationName) {\r\n        return this.pathTemplates.locationPathTemplate.match(locationName).project;\r\n    }\r\n    /**\r\n     * Parse the location from Location resource.\r\n     *\r\n     * @param {string} locationName\r\n     *   A fully-qualified path representing Location resource.\r\n     * @returns {string} A string representing the location.\r\n     */\r\n    matchLocationFromLocationName(locationName) {\r\n        return this.pathTemplates.locationPathTemplate.match(locationName).location;\r\n    }\r\n    /**\r\n     * Return a fully-qualified project resource name string.\r\n     *\r\n     * @param {string} project\r\n     * @returns {string} Resource name string.\r\n     */\r\n    projectPath(project) {\r\n        return this.pathTemplates.projectPathTemplate.render({\r\n            project: project,\r\n        });\r\n    }\r\n    /**\r\n     * Parse the project from Project resource.\r\n     *\r\n     * @param {string} projectName\r\n     *   A fully-qualified path representing Project resource.\r\n     * @returns {string} A string representing the project.\r\n     */\r\n    matchProjectFromProjectName(projectName) {\r\n        return this.pathTemplates.projectPathTemplate.match(projectName).project;\r\n    }\r\n    /**\r\n     * Terminate the gRPC channel and close the client.\r\n     *\r\n     * The client will no longer be usable and all future behavior is undefined.\r\n     * @returns {Promise} A promise that resolves when the client is closed.\r\n     */\r\n    close() {\r\n        if (this.firestoreAdminStub && !this._terminated) {\r\n            return this.firestoreAdminStub.then(stub => {\r\n                this._terminated = true;\r\n                stub.close();\r\n                this.locationsClient.close();\r\n                this.operationsClient.close();\r\n            });\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n}\r\nexports.FirestoreAdminClient = FirestoreAdminClient;\r\n//# sourceMappingURL=firestore_admin_client.js.map"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,oBAAoB,GAAG,KAAK,CAAC;AACrC,MAAMC,UAAU,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AACxD;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,sCAAsC,CAAC;AACnE,MAAME,OAAO,GAAGF,OAAO,CAAC,uBAAuB,CAAC,CAACE,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMJ,oBAAoB,CAAC;EACvB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIK,WAAWA,CAACC,IAAI,EAAEC,WAAW,EAAE;IAC3B,IAAIC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;IACtB,IAAI,CAACC,WAAW,GAAG,KAAK;IACxB,IAAI,CAACC,WAAW,GAAG;MACfC,IAAI,EAAE,CAAC,CAAC;MACRC,MAAM,EAAE,CAAC,CAAC;MACVC,WAAW,EAAE,CAAC,CAAC;MACfC,QAAQ,EAAE,CAAC;IACf,CAAC;IACD;IACA,MAAMC,aAAa,GAAG,IAAI,CAACd,WAAW;IACtC,IAAI,CAACC,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACc,eAAe,MAChEd,IAAI,KAAK,IAAI,IAAIA,I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J,WAAW,CAACjD,OAAO,EAAEE,OAAO,EAAEJ,QAAQ,CAAC;EACvE;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIoD,kBAAkBA,CAAClD,OAAO,EAAEE,OAAO,EAAE;IACjC,OAAO,IAAI,CAACxG,eAAe,CAACwJ,kBAAkB,CAAClD,OAAO,EAAEE,OAAO,CAAC;EACpE;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIwB,YAAYA,CAAC1B,OAAO,EAAEE,OAAO,EAAEJ,QAAQ,EAAE;IACrC,OAAO,IAAI,CAAC/D,gBAAgB,CAAC2F,YAAY,CAAC1B,OAAO,EAAEE,OAAO,EAAEJ,QAAQ,CAAC;EACzE;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIqD,mBAAmBA,CAACnD,OAAO,EAAEE,OAAO,EAAE;IAClC,OAAO,IAAI,CAACnE,gBAAgB,CAACoH,mBAAmB,CAACnD,OAAO,EAAEE,OAAO,CAAC;EACtE;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIkD,eAAeA,CAACpD,OAAO,EAAEE,OAAO,EAAEJ,QAAQ,EAAE;IACxC,OAAO,IAAI,CAAC/D,gBAAgB,CAACqH,eAAe,CAACpD,OAAO,EAAEE,OAAO,EAAEJ,QAAQ,CAAC;EAC5E;EACA;AACJ;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}