{"ast":null,"code":"/*! firebase-admin v13.0.1 */\n\"use strict\";\n\n/*!\r\n * Copyright 2021 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CustomSignalOperator = exports.PercentConditionOperator = void 0;\n/**\r\n * Defines supported operators for percent conditions.\r\n */\nvar PercentConditionOperator;\n(function (PercentConditionOperator) {\n  /**\r\n   * A catchall error case.\r\n   */\n  PercentConditionOperator[\"UNKNOWN\"] = \"UNKNOWN\";\n  /**\r\n   * Target percentiles less than or equal to the target percent.\r\n   * A condition using this operator must specify microPercent.\r\n   */\n  PercentConditionOperator[\"LESS_OR_EQUAL\"] = \"LESS_OR_EQUAL\";\n  /**\r\n   * Target percentiles greater than the target percent.\r\n   * A condition using this operator must specify microPercent.\r\n   */\n  PercentConditionOperator[\"GREATER_THAN\"] = \"GREATER_THAN\";\n  /**\r\n   * Target percentiles within an interval defined by a lower bound and an\r\n   * upper bound. The lower bound is an exclusive (open) bound and the\r\n   * micro_percent_range_upper_bound is an inclusive (closed) bound.\r\n   * A condition using this operator must specify microPercentRange.\r\n   */\n  PercentConditionOperator[\"BETWEEN\"] = \"BETWEEN\";\n})(PercentConditionOperator || (exports.PercentConditionOperator = PercentConditionOperator = {}));\n/**\r\n * Defines supported operators for custom signal conditions.\r\n */\nvar CustomSignalOperator;\n(function (CustomSignalOperator) {\n  /**\r\n   * A catchall error case.\r\n   */\n  CustomSignalOperator[\"UNKNOWN\"] = \"UNKNOWN\";\n  /**\r\n   * Matches a numeric value less than the target value.\r\n   */\n  CustomSignalOperator[\"NUMERIC_LESS_THAN\"] = \"NUMERIC_LESS_THAN\";\n  /**\r\n   * Matches a numeric value less than or equal to the target value.\r\n   */\n  CustomSignalOperator[\"NUMERIC_LESS_EQUAL\"] = \"NUMERIC_LESS_EQUAL\";\n  /**\r\n   * Matches a numeric value equal to the target value.\r\n   */\n  CustomSignalOperator[\"NUMERIC_EQUAL\"] = \"NUMERIC_EQUAL\";\n  /**\r\n   * Matches a numeric value not equal to the target value.\r\n   */\n  CustomSignalOperator[\"NUMERIC_NOT_EQUAL\"] = \"NUMERIC_NOT_EQUAL\";\n  /**\r\n   * Matches a numeric value greater than the target value.\r\n   */\n  CustomSignalOperator[\"NUMERIC_GREATER_THAN\"] = \"NUMERIC_GREATER_THAN\";\n  /**\r\n   * Matches a numeric value greater than or equal to the target value.\r\n   */\n  CustomSignalOperator[\"NUMERIC_GREATER_EQUAL\"] = \"NUMERIC_GREATER_EQUAL\";\n  /**\r\n   * Matches if at least one of the target values is a substring of the actual custom\r\n   * signal value (e.g. \"abc\" contains the string \"a\", \"bc\").\r\n   */\n  CustomSignalOperator[\"STRING_CONTAINS\"] = \"STRING_CONTAINS\";\n  /**\r\n   * Matches if none of the target values is a substring of the actual custom signal value.\r\n   */\n  CustomSignalOperator[\"STRING_DOES_NOT_CONTAIN\"] = \"STRING_DOES_NOT_CONTAIN\";\n  /**\r\n   * Matches if the actual value exactly matches at least one of the target values.\r\n   */\n  CustomSignalOperator[\"STRING_EXACTLY_MATCHES\"] = \"STRING_EXACTLY_MATCHES\";\n  /**\r\n   * The target regular expression matches at least one of the actual values.\r\n   * The regex conforms to RE2 format. See https://github.com/google/re2/wiki/Syntax\r\n   */\n  CustomSignalOperator[\"STRING_CONTAINS_REGEX\"] = \"STRING_CONTAINS_REGEX\";\n  /**\r\n   * Matches if the actual version value is less than the target value.\r\n   */\n  CustomSignalOperator[\"SEMANTIC_VERSION_LESS_THAN\"] = \"SEMANTIC_VERSION_LESS_THAN\";\n  /**\r\n   * Matches if the actual version value is less than or equal to the target value.\r\n   */\n  CustomSignalOperator[\"SEMANTIC_VERSION_LESS_EQUAL\"] = \"SEMANTIC_VERSION_LESS_EQUAL\";\n  /**\r\n   * Matches if the actual version value is equal to the target value.\r\n   */\n  CustomSignalOperator[\"SEMANTIC_VERSION_EQUAL\"] = \"SEMANTIC_VERSION_EQUAL\";\n  /**\r\n   * Matches if the actual version value is not equal to the target value.\r\n   */\n  CustomSignalOperator[\"SEMANTIC_VERSION_NOT_EQUAL\"] = \"SEMANTIC_VERSION_NOT_EQUAL\";\n  /**\r\n   * Matches if the actual version value is greater than the target value.\r\n   */\n  CustomSignalOperator[\"SEMANTIC_VERSION_GREATER_THAN\"] = \"SEMANTIC_VERSION_GREATER_THAN\";\n  /**\r\n   * Matches if the actual version value is greater than or equal to the target value.\r\n   */\n  CustomSignalOperator[\"SEMANTIC_VERSION_GREATER_EQUAL\"] = \"SEMANTIC_VERSION_GREATER_EQUAL\";\n})(CustomSignalOperator || (exports.CustomSignalOperator = CustomSignalOperator = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","CustomSignalOperator","PercentConditionOperator"],"sources":["C:/Users/yujir/Documents/ynov/app pwa/mypwafinal/my-pwa/node_modules/firebase-admin/lib/remote-config/remote-config-api.js"],"sourcesContent":["/*! firebase-admin v13.0.1 */\r\n\"use strict\";\r\n/*!\r\n * Copyright 2021 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CustomSignalOperator = exports.PercentConditionOperator = void 0;\r\n/**\r\n * Defines supported operators for percent conditions.\r\n */\r\nvar PercentConditionOperator;\r\n(function (PercentConditionOperator) {\r\n    /**\r\n     * A catchall error case.\r\n     */\r\n    PercentConditionOperator[\"UNKNOWN\"] = \"UNKNOWN\";\r\n    /**\r\n     * Target percentiles less than or equal to the target percent.\r\n     * A condition using this operator must specify microPercent.\r\n     */\r\n    PercentConditionOperator[\"LESS_OR_EQUAL\"] = \"LESS_OR_EQUAL\";\r\n    /**\r\n     * Target percentiles greater than the target percent.\r\n     * A condition using this operator must specify microPercent.\r\n     */\r\n    PercentConditionOperator[\"GREATER_THAN\"] = \"GREATER_THAN\";\r\n    /**\r\n     * Target percentiles within an interval defined by a lower bound and an\r\n     * upper bound. The lower bound is an exclusive (open) bound and the\r\n     * micro_percent_range_upper_bound is an inclusive (closed) bound.\r\n     * A condition using this operator must specify microPercentRange.\r\n     */\r\n    PercentConditionOperator[\"BETWEEN\"] = \"BETWEEN\";\r\n})(PercentConditionOperator || (exports.PercentConditionOperator = PercentConditionOperator = {}));\r\n/**\r\n * Defines supported operators for custom signal conditions.\r\n */\r\nvar CustomSignalOperator;\r\n(function (CustomSignalOperator) {\r\n    /**\r\n     * A catchall error case.\r\n     */\r\n    CustomSignalOperator[\"UNKNOWN\"] = \"UNKNOWN\";\r\n    /**\r\n     * Matches a numeric value less than the target value.\r\n     */\r\n    CustomSignalOperator[\"NUMERIC_LESS_THAN\"] = \"NUMERIC_LESS_THAN\";\r\n    /**\r\n     * Matches a numeric value less than or equal to the target value.\r\n     */\r\n    CustomSignalOperator[\"NUMERIC_LESS_EQUAL\"] = \"NUMERIC_LESS_EQUAL\";\r\n    /**\r\n     * Matches a numeric value equal to the target value.\r\n     */\r\n    CustomSignalOperator[\"NUMERIC_EQUAL\"] = \"NUMERIC_EQUAL\";\r\n    /**\r\n     * Matches a numeric value not equal to the target value.\r\n     */\r\n    CustomSignalOperator[\"NUMERIC_NOT_EQUAL\"] = \"NUMERIC_NOT_EQUAL\";\r\n    /**\r\n     * Matches a numeric value greater than the target value.\r\n     */\r\n    CustomSignalOperator[\"NUMERIC_GREATER_THAN\"] = \"NUMERIC_GREATER_THAN\";\r\n    /**\r\n     * Matches a numeric value greater than or equal to the target value.\r\n     */\r\n    CustomSignalOperator[\"NUMERIC_GREATER_EQUAL\"] = \"NUMERIC_GREATER_EQUAL\";\r\n    /**\r\n     * Matches if at least one of the target values is a substring of the actual custom\r\n     * signal value (e.g. \"abc\" contains the string \"a\", \"bc\").\r\n     */\r\n    CustomSignalOperator[\"STRING_CONTAINS\"] = \"STRING_CONTAINS\";\r\n    /**\r\n     * Matches if none of the target values is a substring of the actual custom signal value.\r\n     */\r\n    CustomSignalOperator[\"STRING_DOES_NOT_CONTAIN\"] = \"STRING_DOES_NOT_CONTAIN\";\r\n    /**\r\n     * Matches if the actual value exactly matches at least one of the target values.\r\n     */\r\n    CustomSignalOperator[\"STRING_EXACTLY_MATCHES\"] = \"STRING_EXACTLY_MATCHES\";\r\n    /**\r\n     * The target regular expression matches at least one of the actual values.\r\n     * The regex conforms to RE2 format. See https://github.com/google/re2/wiki/Syntax\r\n     */\r\n    CustomSignalOperator[\"STRING_CONTAINS_REGEX\"] = \"STRING_CONTAINS_REGEX\";\r\n    /**\r\n     * Matches if the actual version value is less than the target value.\r\n     */\r\n    CustomSignalOperator[\"SEMANTIC_VERSION_LESS_THAN\"] = \"SEMANTIC_VERSION_LESS_THAN\";\r\n    /**\r\n     * Matches if the actual version value is less than or equal to the target value.\r\n     */\r\n    CustomSignalOperator[\"SEMANTIC_VERSION_LESS_EQUAL\"] = \"SEMANTIC_VERSION_LESS_EQUAL\";\r\n    /**\r\n     * Matches if the actual version value is equal to the target value.\r\n     */\r\n    CustomSignalOperator[\"SEMANTIC_VERSION_EQUAL\"] = \"SEMANTIC_VERSION_EQUAL\";\r\n    /**\r\n     * Matches if the actual version value is not equal to the target value.\r\n     */\r\n    CustomSignalOperator[\"SEMANTIC_VERSION_NOT_EQUAL\"] = \"SEMANTIC_VERSION_NOT_EQUAL\";\r\n    /**\r\n     * Matches if the actual version value is greater than the target value.\r\n     */\r\n    CustomSignalOperator[\"SEMANTIC_VERSION_GREATER_THAN\"] = \"SEMANTIC_VERSION_GREATER_THAN\";\r\n    /**\r\n     * Matches if the actual version value is greater than or equal to the target value.\r\n     */\r\n    CustomSignalOperator[\"SEMANTIC_VERSION_GREATER_EQUAL\"] = \"SEMANTIC_VERSION_GREATER_EQUAL\";\r\n})(CustomSignalOperator || (exports.CustomSignalOperator = CustomSignalOperator = {}));\r\n"],"mappings":"AAAA;AACA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,oBAAoB,GAAGF,OAAO,CAACG,wBAAwB,GAAG,KAAK,CAAC;AACxE;AACA;AACA;AACA,IAAIA,wBAAwB;AAC5B,CAAC,UAAUA,wBAAwB,EAAE;EACjC;AACJ;AACA;EACIA,wBAAwB,CAAC,SAAS,CAAC,GAAG,SAAS;EAC/C;AACJ;AACA;AACA;EACIA,wBAAwB,CAAC,eAAe,CAAC,GAAG,eAAe;EAC3D;AACJ;AACA;AACA;EACIA,wBAAwB,CAAC,cAAc,CAAC,GAAG,cAAc;EACzD;AACJ;AACA;AACA;AACA;AACA;EACIA,wBAAwB,CAAC,SAAS,CAAC,GAAG,SAAS;AACnD,CAAC,EAAEA,wBAAwB,KAAKH,OAAO,CAACG,wBAAwB,GAAGA,wBAAwB,GAAG,CAAC,CAAC,CAAC,CAAC;AAClG;AACA;AACA;AACA,IAAID,oBAAoB;AACxB,CAAC,UAAUA,oBAAoB,EAAE;EAC7B;AACJ;AACA;EACIA,oBAAoB,CAAC,SAAS,CAAC,GAAG,SAAS;EAC3C;AACJ;AACA;EACIA,oBAAoB,CAAC,mBAAmB,CAAC,GAAG,mBAAmB;EAC/D;AACJ;AACA;EACIA,oBAAoB,CAAC,oBAAoB,CAAC,GAAG,oBAAoB;EACjE;AACJ;AACA;EACIA,oBAAoB,CAAC,eAAe,CAAC,GAAG,eAAe;EACvD;AACJ;AACA;EACIA,oBAAoB,CAAC,mBAAmB,CAAC,GAAG,mBAAmB;EAC/D;AACJ;AACA;EACIA,oBAAoB,CAAC,sBAAsB,CAAC,GAAG,sBAAsB;EACrE;AACJ;AACA;EACIA,oBAAoB,CAAC,uBAAuB,CAAC,GAAG,uBAAuB;EACvE;AACJ;AACA;AACA;EACIA,oBAAoB,CAAC,iBAAiB,CAAC,GAAG,iBAAiB;EAC3D;AACJ;AACA;EACIA,oBAAoB,CAAC,yBAAyB,CAAC,GAAG,yBAAyB;EAC3E;AACJ;AACA;EACIA,oBAAoB,CAAC,wBAAwB,CAAC,GAAG,wBAAwB;EACzE;AACJ;AACA;AACA;EACIA,oBAAoB,CAAC,uBAAuB,CAAC,GAAG,uBAAuB;EACvE;AACJ;AACA;EACIA,oBAAoB,CAAC,4BAA4B,CAAC,GAAG,4BAA4B;EACjF;AACJ;AACA;EACIA,oBAAoB,CAAC,6BAA6B,CAAC,GAAG,6BAA6B;EACnF;AACJ;AACA;EACIA,oBAAoB,CAAC,wBAAwB,CAAC,GAAG,wBAAwB;EACzE;AACJ;AACA;EACIA,oBAAoB,CAAC,4BAA4B,CAAC,GAAG,4BAA4B;EACjF;AACJ;AACA;EACIA,oBAAoB,CAAC,+BAA+B,CAAC,GAAG,+BAA+B;EACvF;AACJ;AACA;EACIA,oBAAoB,CAAC,gCAAgC,CAAC,GAAG,gCAAgC;AAC7F,CAAC,EAAEA,oBAAoB,KAAKF,OAAO,CAACE,oBAAoB,GAAGA,oBAAoB,GAAG,CAAC,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}