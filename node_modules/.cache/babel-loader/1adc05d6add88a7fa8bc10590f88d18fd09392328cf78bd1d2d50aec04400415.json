{"ast":null,"code":"/*! firebase-admin v13.0.1 */\n\"use strict\";\n\n/*!\r\n * Copyright 2020 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InstanceIdClientErrorCode = exports.FirebaseInstanceIdError = exports.InstanceId = void 0;\nexports.getInstanceId = getInstanceId;\n/**\r\n * Firebase Instance ID service.\r\n *\r\n * @packageDocumentation\r\n */\nconst index_1 = require(\"../app/index\");\nconst instance_id_1 = require(\"./instance-id\");\nObject.defineProperty(exports, \"InstanceId\", {\n  enumerable: true,\n  get: function () {\n    return instance_id_1.InstanceId;\n  }\n});\n/**\r\n * Gets the {@link InstanceId} service for the default app or a given app.\r\n *\r\n * This API is deprecated. Developers are advised to use the\r\n * {@link firebase-admin.installations#getInstallations}\r\n * API to delete their instance IDs and Firebase installation IDs.\r\n *\r\n * `getInstanceId()` can be called with no arguments to access the default\r\n * app's `InstanceId` service or as `getInstanceId(app)` to access the\r\n * `InstanceId` service associated with a specific app.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Get the Instance ID service for the default app\r\n * const defaultInstanceId = getInstanceId();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Get the Instance ID service for a given app\r\n * const otherInstanceId = getInstanceId(otherApp);\r\n *```\r\n *\r\n * This API is deprecated. Developers are advised to use the `admin.installations()`\r\n * API to delete their instance IDs and Firebase installation IDs.\r\n *\r\n * @param app - Optional app whose `InstanceId` service to\r\n *   return. If not provided, the default `InstanceId` service will be\r\n *   returned.\r\n *\r\n * @returns The default `InstanceId` service if\r\n *   no app is provided or the `InstanceId` service associated with the\r\n *   provided app.\r\n *\r\n * @deprecated Use {@link firebase-admin.installations#getInstallations} instead.\r\n */\nfunction getInstanceId(app) {\n  if (typeof app === 'undefined') {\n    app = (0, index_1.getApp)();\n  }\n  const firebaseApp = app;\n  return firebaseApp.getOrInitService('instanceId', app => new instance_id_1.InstanceId(app));\n}\nvar error_1 = require(\"../utils/error\");\nObject.defineProperty(exports, \"FirebaseInstanceIdError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.FirebaseInstanceIdError;\n  }\n});\nObject.defineProperty(exports, \"InstanceIdClientErrorCode\", {\n  enumerable: true,\n  get: function () {\n    return error_1.InstanceIdClientErrorCode;\n  }\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","InstanceIdClientErrorCode","FirebaseInstanceIdError","InstanceId","getInstanceId","index_1","require","instance_id_1","enumerable","get","app","getApp","firebaseApp","getOrInitService","error_1"],"sources":["C:/Users/yujir/Documents/ynov/app pwa/mypwafinal/my-pwa/node_modules/firebase-admin/lib/instance-id/index.js"],"sourcesContent":["/*! firebase-admin v13.0.1 */\r\n\"use strict\";\r\n/*!\r\n * Copyright 2020 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.InstanceIdClientErrorCode = exports.FirebaseInstanceIdError = exports.InstanceId = void 0;\r\nexports.getInstanceId = getInstanceId;\r\n/**\r\n * Firebase Instance ID service.\r\n *\r\n * @packageDocumentation\r\n */\r\nconst index_1 = require(\"../app/index\");\r\nconst instance_id_1 = require(\"./instance-id\");\r\nObject.defineProperty(exports, \"InstanceId\", { enumerable: true, get: function () { return instance_id_1.InstanceId; } });\r\n/**\r\n * Gets the {@link InstanceId} service for the default app or a given app.\r\n *\r\n * This API is deprecated. Developers are advised to use the\r\n * {@link firebase-admin.installations#getInstallations}\r\n * API to delete their instance IDs and Firebase installation IDs.\r\n *\r\n * `getInstanceId()` can be called with no arguments to access the default\r\n * app's `InstanceId` service or as `getInstanceId(app)` to access the\r\n * `InstanceId` service associated with a specific app.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Get the Instance ID service for the default app\r\n * const defaultInstanceId = getInstanceId();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Get the Instance ID service for a given app\r\n * const otherInstanceId = getInstanceId(otherApp);\r\n *```\r\n *\r\n * This API is deprecated. Developers are advised to use the `admin.installations()`\r\n * API to delete their instance IDs and Firebase installation IDs.\r\n *\r\n * @param app - Optional app whose `InstanceId` service to\r\n *   return. If not provided, the default `InstanceId` service will be\r\n *   returned.\r\n *\r\n * @returns The default `InstanceId` service if\r\n *   no app is provided or the `InstanceId` service associated with the\r\n *   provided app.\r\n *\r\n * @deprecated Use {@link firebase-admin.installations#getInstallations} instead.\r\n */\r\nfunction getInstanceId(app) {\r\n    if (typeof app === 'undefined') {\r\n        app = (0, index_1.getApp)();\r\n    }\r\n    const firebaseApp = app;\r\n    return firebaseApp.getOrInitService('instanceId', (app) => new instance_id_1.InstanceId(app));\r\n}\r\nvar error_1 = require(\"../utils/error\");\r\nObject.defineProperty(exports, \"FirebaseInstanceIdError\", { enumerable: true, get: function () { return error_1.FirebaseInstanceIdError; } });\r\nObject.defineProperty(exports, \"InstanceIdClientErrorCode\", { enumerable: true, get: function () { return error_1.InstanceIdClientErrorCode; } });\r\n"],"mappings":"AAAA;AACA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,yBAAyB,GAAGF,OAAO,CAACG,uBAAuB,GAAGH,OAAO,CAACI,UAAU,GAAG,KAAK,CAAC;AACjGJ,OAAO,CAACK,aAAa,GAAGA,aAAa;AACrC;AACA;AACA;AACA;AACA;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,cAAc,CAAC;AACvC,MAAMC,aAAa,GAAGD,OAAO,CAAC,eAAe,CAAC;AAC9CT,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAES,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,aAAa,CAACJ,UAAU;EAAE;AAAE,CAAC,CAAC;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAaA,CAACM,GAAG,EAAE;EACxB,IAAI,OAAOA,GAAG,KAAK,WAAW,EAAE;IAC5BA,GAAG,GAAG,CAAC,CAAC,EAAEL,OAAO,CAACM,MAAM,EAAE,CAAC;EAC/B;EACA,MAAMC,WAAW,GAAGF,GAAG;EACvB,OAAOE,WAAW,CAACC,gBAAgB,CAAC,YAAY,EAAGH,GAAG,IAAK,IAAIH,aAAa,CAACJ,UAAU,CAACO,GAAG,CAAC,CAAC;AACjG;AACA,IAAII,OAAO,GAAGR,OAAO,CAAC,gBAAgB,CAAC;AACvCT,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,yBAAyB,EAAE;EAAES,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOK,OAAO,CAACZ,uBAAuB;EAAE;AAAE,CAAC,CAAC;AAC7IL,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,2BAA2B,EAAE;EAAES,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOK,OAAO,CAACb,yBAAyB;EAAE;AAAE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}