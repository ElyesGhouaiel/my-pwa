{"ast":null,"code":"\"use strict\";\n\n/**\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.computeBundleId = computeBundleId;\n/**\r\n * Compute the identifier of the `obj`. The objects of the same ID\r\n * will be bundled together.\r\n *\r\n * @param {RequestType} obj - The request object.\r\n * @param {String[]} discriminatorFields - The array of field names.\r\n *   A field name may include '.' as a separator, which is used to\r\n *   indicate object traversal.\r\n * @return {String|undefined} - the identifier string, or undefined if any\r\n *   discriminator fields do not exist.\r\n */\nfunction computeBundleId(obj, discriminatorFields) {\n  const ids = [];\n  let hasIds = false;\n  for (const field of discriminatorFields) {\n    const id = at(obj, field);\n    if (id === undefined) {\n      ids.push(null);\n    } else {\n      hasIds = true;\n      ids.push(id);\n    }\n  }\n  if (!hasIds) {\n    return undefined;\n  }\n  return JSON.stringify(ids);\n}\n/**\r\n * Given an object field path that may contain dots, dig into the obj and find\r\n * the value at the given path.\r\n * @example\r\n * const obj = {\r\n *   a: {\r\n *     b: 5\r\n *   }\r\n * }\r\n * const id = at(obj, 'a.b');\r\n * // id = 5\r\n * @param field Path to the property with `.` notation\r\n * @param obj The object to traverse\r\n * @returns the value at the given path\r\n */\nfunction at(obj, field) {\n  const pathParts = field.split('.');\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let currentObj = obj;\n  for (const pathPart of pathParts) {\n    currentObj = currentObj === null || currentObj === void 0 ? void 0 : currentObj[pathPart];\n  }\n  return currentObj;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","computeBundleId","obj","discriminatorFields","ids","hasIds","field","id","at","undefined","push","JSON","stringify","pathParts","split","currentObj","pathPart"],"sources":["C:/Users/yujir/Documents/ynov/app pwa/mypwafinal/my-pwa/node_modules/google-gax/build/src/bundlingCalls/bundlingUtils.js"],"sourcesContent":["\"use strict\";\r\n/**\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.computeBundleId = computeBundleId;\r\n/**\r\n * Compute the identifier of the `obj`. The objects of the same ID\r\n * will be bundled together.\r\n *\r\n * @param {RequestType} obj - The request object.\r\n * @param {String[]} discriminatorFields - The array of field names.\r\n *   A field name may include '.' as a separator, which is used to\r\n *   indicate object traversal.\r\n * @return {String|undefined} - the identifier string, or undefined if any\r\n *   discriminator fields do not exist.\r\n */\r\nfunction computeBundleId(obj, discriminatorFields) {\r\n    const ids = [];\r\n    let hasIds = false;\r\n    for (const field of discriminatorFields) {\r\n        const id = at(obj, field);\r\n        if (id === undefined) {\r\n            ids.push(null);\r\n        }\r\n        else {\r\n            hasIds = true;\r\n            ids.push(id);\r\n        }\r\n    }\r\n    if (!hasIds) {\r\n        return undefined;\r\n    }\r\n    return JSON.stringify(ids);\r\n}\r\n/**\r\n * Given an object field path that may contain dots, dig into the obj and find\r\n * the value at the given path.\r\n * @example\r\n * const obj = {\r\n *   a: {\r\n *     b: 5\r\n *   }\r\n * }\r\n * const id = at(obj, 'a.b');\r\n * // id = 5\r\n * @param field Path to the property with `.` notation\r\n * @param obj The object to traverse\r\n * @returns the value at the given path\r\n */\r\nfunction at(obj, field) {\r\n    const pathParts = field.split('.');\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    let currentObj = obj;\r\n    for (const pathPart of pathParts) {\r\n        currentObj = currentObj === null || currentObj === void 0 ? void 0 : currentObj[pathPart];\r\n    }\r\n    return currentObj;\r\n}\r\n//# sourceMappingURL=bundlingUtils.js.map"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,eAAe,GAAGA,eAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAeA,CAACC,GAAG,EAAEC,mBAAmB,EAAE;EAC/C,MAAMC,GAAG,GAAG,EAAE;EACd,IAAIC,MAAM,GAAG,KAAK;EAClB,KAAK,MAAMC,KAAK,IAAIH,mBAAmB,EAAE;IACrC,MAAMI,EAAE,GAAGC,EAAE,CAACN,GAAG,EAAEI,KAAK,CAAC;IACzB,IAAIC,EAAE,KAAKE,SAAS,EAAE;MAClBL,GAAG,CAACM,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC,MACI;MACDL,MAAM,GAAG,IAAI;MACbD,GAAG,CAACM,IAAI,CAACH,EAAE,CAAC;IAChB;EACJ;EACA,IAAI,CAACF,MAAM,EAAE;IACT,OAAOI,SAAS;EACpB;EACA,OAAOE,IAAI,CAACC,SAAS,CAACR,GAAG,CAAC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,EAAEA,CAACN,GAAG,EAAEI,KAAK,EAAE;EACpB,MAAMO,SAAS,GAAGP,KAAK,CAACQ,KAAK,CAAC,GAAG,CAAC;EAClC;EACA,IAAIC,UAAU,GAAGb,GAAG;EACpB,KAAK,MAAMc,QAAQ,IAAIH,SAAS,EAAE;IAC9BE,UAAU,GAAGA,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACC,QAAQ,CAAC;EAC7F;EACA,OAAOD,UAAU;AACrB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}