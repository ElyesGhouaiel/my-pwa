{"ast":null,"code":"\"use strict\";\n\n/**\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.warn = warn;\nconst featureDetection_1 = require(\"./featureDetection\");\nconst emittedWarnings = new Set();\n// warnType is the type of warning (e.g. 'DeprecationWarning', 'ExperimentalWarning', etc.)\nfunction warn(code, message, warnType) {\n  // Only show a given warning once\n  if (emittedWarnings.has(code)) {\n    return;\n  }\n  emittedWarnings.add(code);\n  if (!(0, featureDetection_1.isNodeJS)()) {\n    console.warn(message);\n  } else if (typeof warnType !== 'undefined') {\n    process.emitWarning(message, {\n      type: warnType\n    });\n  } else {\n    process.emitWarning(message);\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","warn","featureDetection_1","require","emittedWarnings","Set","code","message","warnType","has","add","isNodeJS","console","process","emitWarning","type"],"sources":["C:/Users/yujir/Documents/ynov/app pwa/mypwafinal/my-pwa/node_modules/google-gax/build/src/warnings.js"],"sourcesContent":["\"use strict\";\r\n/**\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.warn = warn;\r\nconst featureDetection_1 = require(\"./featureDetection\");\r\nconst emittedWarnings = new Set();\r\n// warnType is the type of warning (e.g. 'DeprecationWarning', 'ExperimentalWarning', etc.)\r\nfunction warn(code, message, warnType) {\r\n    // Only show a given warning once\r\n    if (emittedWarnings.has(code)) {\r\n        return;\r\n    }\r\n    emittedWarnings.add(code);\r\n    if (!(0, featureDetection_1.isNodeJS)()) {\r\n        console.warn(message);\r\n    }\r\n    else if (typeof warnType !== 'undefined') {\r\n        process.emitWarning(message, {\r\n            type: warnType,\r\n        });\r\n    }\r\n    else {\r\n        process.emitWarning(message);\r\n    }\r\n}\r\n//# sourceMappingURL=warnings.js.map"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,IAAI,GAAGA,IAAI;AACnB,MAAMC,kBAAkB,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACxD,MAAMC,eAAe,GAAG,IAAIC,GAAG,CAAC,CAAC;AACjC;AACA,SAASJ,IAAIA,CAACK,IAAI,EAAEC,OAAO,EAAEC,QAAQ,EAAE;EACnC;EACA,IAAIJ,eAAe,CAACK,GAAG,CAACH,IAAI,CAAC,EAAE;IAC3B;EACJ;EACAF,eAAe,CAACM,GAAG,CAACJ,IAAI,CAAC;EACzB,IAAI,CAAC,CAAC,CAAC,EAAEJ,kBAAkB,CAACS,QAAQ,EAAE,CAAC,EAAE;IACrCC,OAAO,CAACX,IAAI,CAACM,OAAO,CAAC;EACzB,CAAC,MACI,IAAI,OAAOC,QAAQ,KAAK,WAAW,EAAE;IACtCK,OAAO,CAACC,WAAW,CAACP,OAAO,EAAE;MACzBQ,IAAI,EAAEP;IACV,CAAC,CAAC;EACN,CAAC,MACI;IACDK,OAAO,CAACC,WAAW,CAACP,OAAO,CAAC;EAChC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}